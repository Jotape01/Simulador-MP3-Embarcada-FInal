

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 30 16:18:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4520 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  001F2A                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for _volume
    92  001F2A  03                 	db	3
    93                           
    94                           ;initializer for _pause
    95  001F2B  01                 	db	1
    96                           
    97                           ;initializer for _tecla
    98  001F2C  10                 	db	16
    99                           
   100                           	psect	idataBANK0
   101  001BA4                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for main@F2440
   105  001BA4  01                 	db	1
   106  001BA5  03                 	db	3
   107  001BA6  03                 	db	3
   108  001BA7  0E                 	db	14
   109  001BA8  1C                 	db	28
   110  001BA9  18                 	db	24
   111  001BAA  08                 	db	8
   112  001BAB  08                 	db	8
   113  001BAC  11                 	db	17
   114  001BAD  1F                 	db	31
   115  001BAE  00                 	db	0
   116  001BAF  01                 	db	1
   117  001BB0  1F                 	db	31
   118  001BB1  12                 	db	18
   119  001BB2  14                 	db	20
   120  001BB3  1F                 	db	31
   121  001BB4  10                 	db	16
   122  001BB5  18                 	db	24
   123  001BB6  18                 	db	24
   124  001BB7  0E                 	db	14
   125  001BB8  07                 	db	7
   126  001BB9  03                 	db	3
   127  001BBA  02                 	db	2
   128  001BBB  02                 	db	2
   129  001BBC  08                 	db	8
   130  001BBD  18                 	db	24
   131  001BBE  1C                 	db	28
   132  001BBF  0E                 	db	14
   133  001BC0  03                 	db	3
   134  001BC1  03                 	db	3
   135  001BC2  01                 	db	1
   136  001BC3  00                 	db	0
   137  001BC4  12                 	db	18
   138  001BC5  14                 	db	20
   139  001BC6  1F                 	db	31
   140  001BC7  08                 	db	8
   141  001BC8  00                 	db	0
   142  001BC9  1F                 	db	31
   143  001BCA  11                 	db	17
   144  001BCB  00                 	db	0
   145  001BCC  02                 	db	2
   146  001BCD  03                 	db	3
   147  001BCE  07                 	db	7
   148  001BCF  0E                 	db	14
   149  001BD0  18                 	db	24
   150  001BD1  18                 	db	24
   151  001BD2  10                 	db	16
   152  001BD3  00                 	db	0
   153                           
   154                           ;initializer for _duracoes
   155  001BD4  0046               	dw	70
   156  001BD6  000F               	dw	15
   157  001BD8  0078               	dw	120
   158  001BDA  003C               	dw	60
   159  001BDC  000A               	dw	10
   160  001BDE  0028               	dw	40
   161  001BE0  0014               	dw	20
   162  001BE2  001E               	dw	30
   163  001BE4  008C               	dw	140
   164  001BE6  000A               	dw	10
   165                           
   166                           ;initializer for main@F2438
   167  001BE8  20                 	db	32
   168  001BE9  20                 	db	32
   169  001BEA  20                 	db	32
   170  001BEB  20                 	db	32
   171  001BEC  20                 	db	32
   172  001BED  20                 	db	32
   173  001BEE  32                 	db	50
   174  001BEF  30                 	db	48
   175  001BF0  31                 	db	49
   176  001BF1  38                 	db	56
   177  001BF2  30                 	db	48
   178  001BF3  30                 	db	48
   179  001BF4  34                 	db	52
   180  001BF5  32                 	db	50
   181  001BF6  38                 	db	56
   182  001BF7  32                 	db	50
   183                           
   184                           ;initializer for main@F2436
   185  001BF8  4A                 	db	74
   186  001BF9  6F                 	db	111
   187  001BFA  61                 	db	97
   188  001BFB  6F                 	db	111
   189  001BFC  20                 	db	32
   190  001BFD  50                 	db	80
   191  001BFE  65                 	db	101
   192  001BFF  64                 	db	100
   193  001C00  72                 	db	114
   194  001C01  6F                 	db	111
   195                           
   196                           ;initializer for main@F2434
   197  001C02  20                 	db	32
   198  001C03  20                 	db	32
   199  001C04  55                 	db	85
   200  001C05  4E                 	db	78
   201  001C06  49                 	db	73
   202  001C07  46                 	db	70
   203  001C08  45                 	db	69
   204  001C09  49                 	db	73
   205                           
   206                           ;initializer for _teclas
   207  001C0A  0A                 	db	10
   208  001C0B  07                 	db	7
   209  001C0C  04                 	db	4
   210  001C0D  01                 	db	1
   211  001C0E  00                 	db	0
   212  001C0F  08                 	db	8
   213  001C10  05                 	db	5
   214  001C11  02                 	db	2
   215                           
   216                           	psect	idataBANK2
   217  0017E6                     __pidataBANK2:
   218                           	callstack 0
   219                           
   220                           ;initializer for _nomes
   221  0017E6  50                 	db	80
   222  0017E7  61                 	db	97
   223  0017E8  72                 	db	114
   224  0017E9  61                 	db	97
   225  0017EA  6E                 	db	110
   226  0017EB  6F                 	db	111
   227  0017EC  69                 	db	105
   228  0017ED  64                 	db	100
   229  0017EE  00                 	db	0
   230  0017EF  00                 	db	0
   231  0017F0  00                 	db	0
   232  0017F1  00                 	db	0
   233  0017F2  00                 	db	0
   234  0017F3  00                 	db	0
   235  0017F4  00                 	db	0
   236  0017F5  00                 	db	0
   237  0017F6  00                 	db	0
   238  0017F7  48                 	db	72
   239  0017F8  69                 	db	105
   240  0017F9  67                 	db	103
   241  0017FA  68                 	db	104
   242  0017FB  77                 	db	119
   243  0017FC  61                 	db	97
   244  0017FD  79                 	db	121
   245  0017FE  20                 	db	32
   246  0017FF  53                 	db	83
   247  001800  74                 	db	116
   248  001801  61                 	db	97
   249  001802  72                 	db	114
   250  001803  00                 	db	0
   251  001804  00                 	db	0
   252  001805  00                 	db	0
   253  001806  00                 	db	0
   254  001807  00                 	db	0
   255  001808  42                 	db	66
   256  001809  6F                 	db	111
   257  00180A  72                 	db	114
   258  00180B  6E                 	db	110
   259  00180C  20                 	db	32
   260  00180D  54                 	db	84
   261  00180E  6F                 	db	111
   262  00180F  20                 	db	32
   263  001810  42                 	db	66
   264  001811  65                 	db	101
   265  001812  20                 	db	32
   266  001813  57                 	db	87
   267  001814  69                 	db	105
   268  001815  6C                 	db	108
   269  001816  64                 	db	100
   270  001817  00                 	db	0
   271  001818  00                 	db	0
   272  001819  42                 	db	66
   273  00181A  61                 	db	97
   274  00181B  64                 	db	100
   275  00181C  20                 	db	32
   276  00181D  54                 	db	84
   277  00181E  6F                 	db	111
   278  00181F  20                 	db	32
   279  001820  54                 	db	84
   280  001821  68                 	db	104
   281  001822  65                 	db	101
   282  001823  20                 	db	32
   283  001824  42                 	db	66
   284  001825  6F                 	db	111
   285  001826  6E                 	db	110
   286  001827  65                 	db	101
   287  001828  00                 	db	0
   288  001829  00                 	db	0
   289  00182A  44                 	db	68
   290  00182B  6F                 	db	111
   291  00182C  77                 	db	119
   292  00182D  6E                 	db	110
   293  00182E  20                 	db	32
   294  00182F  54                 	db	84
   295  001830  68                 	db	104
   296  001831  65                 	db	101
   297  001832  20                 	db	32
   298  001833  52                 	db	82
   299  001834  6F                 	db	111
   300  001835  61                 	db	97
   301  001836  64                 	db	100
   302  001837  00                 	db	0
   303  001838  00                 	db	0
   304  001839  00                 	db	0
   305  00183A  00                 	db	0
   306  00183B  57                 	db	87
   307  00183C  6F                 	db	111
   308  00183D  6E                 	db	110
   309  00183E  64                 	db	100
   310  00183F  65                 	db	101
   311  001840  72                 	db	114
   312  001841  77                 	db	119
   313  001842  61                 	db	97
   314  001843  6C                 	db	108
   315  001844  6C                 	db	108
   316  001845  00                 	db	0
   317  001846  00                 	db	0
   318  001847  00                 	db	0
   319  001848  00                 	db	0
   320  001849  00                 	db	0
   321  00184A  00                 	db	0
   322  00184B  00                 	db	0
   323  00184C  42                 	db	66
   324  00184D  6C                 	db	108
   325  00184E  75                 	db	117
   326  00184F  65                 	db	101
   327  001850  20                 	db	32
   328  001851  4D                 	db	77
   329  001852  6F                 	db	111
   330  001853  6E                 	db	110
   331  001854  64                 	db	100
   332  001855  61                 	db	97
   333  001856  79                 	db	121
   334  001857  00                 	db	0
   335  001858  00                 	db	0
   336  001859  00                 	db	0
   337  00185A  00                 	db	0
   338  00185B  00                 	db	0
   339  00185C  00                 	db	0
   340  00185D  42                 	db	66
   341  00185E  61                 	db	97
   342  00185F  63                 	db	99
   343  001860  6B                 	db	107
   344  001861  20                 	db	32
   345  001862  49                 	db	73
   346  001863  6E                 	db	110
   347  001864  20                 	db	32
   348  001865  42                 	db	66
   349  001866  6C                 	db	108
   350  001867  61                 	db	97
   351  001868  63                 	db	99
   352  001869  6B                 	db	107
   353  00186A  00                 	db	0
   354  00186B  00                 	db	0
   355  00186C  00                 	db	0
   356  00186D  00                 	db	0
   357  00186E  48                 	db	72
   358  00186F  65                 	db	101
   359  001870  79                 	db	121
   360  001871  20                 	db	32
   361  001872  4A                 	db	74
   362  001873  75                 	db	117
   363  001874  64                 	db	100
   364  001875  65                 	db	101
   365  001876  00                 	db	0
   366  001877  00                 	db	0
   367  001878  00                 	db	0
   368  001879  00                 	db	0
   369  00187A  00                 	db	0
   370  00187B  00                 	db	0
   371  00187C  00                 	db	0
   372  00187D  00                 	db	0
   373  00187E  00                 	db	0
   374  00187F  4B                 	db	75
   375  001880  61                 	db	97
   376  001881  73                 	db	115
   377  001882  68                 	db	104
   378  001883  6D                 	db	109
   379  001884  69                 	db	105
   380  001885  72                 	db	114
   381  001886  00                 	db	0
   382  001887  00                 	db	0
   383  001888  00                 	db	0
   384  001889  00                 	db	0
   385  00188A  00                 	db	0
   386  00188B  00                 	db	0
   387  00188C  00                 	db	0
   388  00188D  00                 	db	0
   389  00188E  00                 	db	0
   390  00188F  00                 	db	0
   391                           
   392                           	psect	smallconst
   393  000600                     __psmallconst:
   394                           	callstack 0
   395  000600  00                 	db	0
   396  000601                     _valor@ssd$F238:
   397                           	callstack 0
   398  000601  3F                 	db	63
   399  000602  06                 	db	6
   400  000603  5B                 	db	91
   401  000604  4F                 	db	79
   402  000605  66                 	db	102
   403  000606  6D                 	db	109
   404  000607  7D                 	db	125
   405  000608  07                 	db	7
   406  000609  7F                 	db	127
   407  00060A  6F                 	db	111
   408  00060B  77                 	db	119
   409  00060C  7C                 	db	124
   410  00060D  39                 	db	57
   411  00060E  5E                 	db	94
   412  00060F  79                 	db	121
   413  000610  71                 	db	113
   414  000611                     __end_of_valor@ssd$F238:
   415                           	callstack 0
   416  0000                     _T0CON	set	4053
   417  0000                     _TMR0L	set	4054
   418  0000                     _TMR0H	set	4055
   419  0000                     _INTCON	set	4082
   420  0000                     _T2CON	set	4042
   421  0000                     _CCP1CON	set	4029
   422  0000                     _CCPR1L	set	4030
   423  0000                     _PR2	set	4043
   424  0000                     _TRISE	set	3990
   425  0000                     _TRISD	set	3989
   426  0000                     _TRISC	set	3988
   427  0000                     _TRISB	set	3987
   428  0000                     _TRISA	set	3986
   429  0000                     _PORTE	set	3972
   430  0000                     _PORTD	set	3971
   431  0000                     _PORTC	set	3970
   432  0000                     _PORTB	set	3969
   433  0000                     _PORTA	set	3968
   434  000611                     STR_4:
   435  000611  3C                 	db	60	;'<'
   436  000612  2D                 	db	45
   437  000613  28                 	db	40
   438  000614  31                 	db	49	;'1'
   439  000615  29                 	db	41
   440  000616  20                 	db	32
   441  000617  28                 	db	40
   442  000618  2A                 	db	42
   443  000619  29                 	db	41
   444  00061A  20                 	db	32
   445  00061B  20                 	db	32
   446  00061C  28                 	db	40
   447  00061D  32                 	db	50	;'2'
   448  00061E  29                 	db	41
   449  00061F  2D                 	db	45
   450  000620  3E                 	db	62	;'>'
   451  000621  00                 	db	0
   452  000622                     STR_3:
   453  000622  45                 	db	69	;'E'
   454  000623  73                 	db	115	;'s'
   455  000624  63                 	db	99	;'c'
   456  000625  6F                 	db	111	;'o'
   457  000626  6C                 	db	108	;'l'
   458  000627  68                 	db	104	;'h'
   459  000628  61                 	db	97	;'a'
   460  000629  20                 	db	32
   461  00062A  61                 	db	97	;'a'
   462  00062B  20                 	db	32
   463  00062C  6D                 	db	109	;'m'
   464  00062D  75                 	db	117	;'u'
   465  00062E  73                 	db	115	;'s'
   466  00062F  69                 	db	105	;'i'
   467  000630  63                 	db	99	;'c'
   468  000631  61                 	db	97	;'a'
   469  000632  00                 	db	0
   470  000633                     STR_6:
   471  000633  2D                 	db	45
   472  000634  28                 	db	40
   473  000635  31                 	db	49	;'1'
   474  000636  29                 	db	41
   475  000637  20                 	db	32
   476  000638  20                 	db	32
   477  000639  28                 	db	40
   478  00063A  2A                 	db	42
   479  00063B  29                 	db	41
   480  00063C  20                 	db	32
   481  00063D  20                 	db	32
   482  00063E  28                 	db	40
   483  00063F  32                 	db	50	;'2'
   484  000640  29                 	db	41
   485  000641  2B                 	db	43
   486  000642  00                 	db	0
   487  000643                     STR_2:
   488  000643  50                 	db	80	;'P'
   489  000644  6C                 	db	108	;'l'
   490  000645  61                 	db	97	;'a'
   491  000646  79                 	db	121	;'y'
   492  000647  65                 	db	101	;'e'
   493  000648  72                 	db	114	;'r'
   494  000649  00                 	db	0
   495  00064A                     STR_1:
   496  00064A  4D                 	db	77	;'M'
   497  00064B  50                 	db	80	;'P'
   498  00064C  33                 	db	51	;'3'
   499  00064D  00                 	db	0
   500  00064E  00                 	db	0	; dummy byte at the end
   501  0000                     
   502                           ; #config settings
   503                           
   504                           	psect	cinit
   505  001936                     __pcinit:
   506                           	callstack 0
   507  001936                     start_initialization:
   508                           	callstack 0
   509  001936                     __initialization:
   510                           	callstack 0
   511                           
   512                           ; Initialize objects allocated to BANK2 (170 bytes)
   513                           ; load TBLPTR registers with __pidataBANK2
   514  001936  0EE6               	movlw	low __pidataBANK2
   515  001938  6EF6               	movwf	tblptrl,c
   516  00193A  0E17               	movlw	high __pidataBANK2
   517  00193C  6EF7               	movwf	tblptrh,c
   518  00193E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   519  001940  6EF8               	movwf	tblptru,c
   520  001942  EE02  F000         	lfsr	0,__pdataBANK2
   521  001946  EE10 F0AA          	lfsr	1,170
   522  00194A                     copy_data0:
   523  00194A  0009               	tblrd		*+
   524  00194C  CFF5 FFEE          	movff	tablat,postinc0
   525  001950  50E5               	movf	postdec1,w,c
   526  001952  50E1               	movf	fsr1l,w,c
   527  001954  E1FA               	bnz	copy_data0
   528                           
   529                           ; Initialize objects allocated to BANK0 (110 bytes)
   530                           ; load TBLPTR registers with __pidataBANK0
   531  001956  0EA4               	movlw	low __pidataBANK0
   532  001958  6EF6               	movwf	tblptrl,c
   533  00195A  0E1B               	movlw	high __pidataBANK0
   534  00195C  6EF7               	movwf	tblptrh,c
   535  00195E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   536  001960  6EF8               	movwf	tblptru,c
   537  001962  EE00  F080         	lfsr	0,__pdataBANK0
   538  001966  EE10 F06E          	lfsr	1,110
   539  00196A                     copy_data1:
   540  00196A  0009               	tblrd		*+
   541  00196C  CFF5 FFEE          	movff	tablat,postinc0
   542  001970  50E5               	movf	postdec1,w,c
   543  001972  50E1               	movf	fsr1l,w,c
   544  001974  E1FA               	bnz	copy_data1
   545                           
   546                           ; Initialize objects allocated to COMRAM (3 bytes)
   547                           ; load TBLPTR registers with __pidataCOMRAM
   548  001976  0E2A               	movlw	low __pidataCOMRAM
   549  001978  6EF6               	movwf	tblptrl,c
   550  00197A  0E1F               	movlw	high __pidataCOMRAM
   551  00197C  6EF7               	movwf	tblptrh,c
   552  00197E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   553  001980  6EF8               	movwf	tblptru,c
   554  001982  0009               	tblrd		*+	;fetch initializer
   555  001984  CFF5 F07D          	movff	tablat,__pdataCOMRAM
   556  001988  0009               	tblrd		*+	;fetch initializer
   557  00198A  CFF5 F07E          	movff	tablat,__pdataCOMRAM+1
   558  00198E  0009               	tblrd		*+	;fetch initializer
   559  001990  CFF5 F07F          	movff	tablat,__pdataCOMRAM+2
   560                           
   561                           ; Clear objects allocated to BANK1 (190 bytes)
   562  001994  EE01  F000         	lfsr	0,__pbssBANK1
   563  001998  0EBE               	movlw	190
   564  00199A                     clear_0:
   565  00199A  6AEE               	clrf	postinc0,c
   566  00199C  06E8               	decf	wreg,f,c
   567  00199E  E1FD               	bnz	clear_0
   568                           
   569                           ; Clear objects allocated to BANK0 (7 bytes)
   570  0019A0  EE00  F0EE         	lfsr	0,__pbssBANK0
   571  0019A4  0E07               	movlw	7
   572  0019A6                     clear_1:
   573  0019A6  6AEE               	clrf	postinc0,c
   574  0019A8  06E8               	decf	wreg,f,c
   575  0019AA  E1FD               	bnz	clear_1
   576                           
   577                           ; Clear objects allocated to COMRAM (14 bytes)
   578  0019AC  EE00  F06F         	lfsr	0,__pbssCOMRAM
   579  0019B0  0E0E               	movlw	14
   580  0019B2                     clear_2:
   581  0019B2  6AEE               	clrf	postinc0,c
   582  0019B4  06E8               	decf	wreg,f,c
   583  0019B6  E1FD               	bnz	clear_2
   584  0019B8                     end_of_initialization:
   585                           	callstack 0
   586  0019B8                     __end_of__initialization:
   587                           	callstack 0
   588  0019B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   589  0019BA  6EF8               	movwf	tblptru,c
   590  0019BC  0100               	movlb	0
   591  0019BE  EF96  F004         	goto	_main	;jump to C main() function
   592                           
   593                           	psect	bssCOMRAM
   594  00006F                     __pbssCOMRAM:
   595                           	callstack 0
   596  00006F                     _segundo2:
   597                           	callstack 0
   598  00006F                     	ds	1
   599  000070                     _segundo1:
   600                           	callstack 0
   601  000070                     	ds	1
   602  000071                     _minuto2:
   603                           	callstack 0
   604  000071                     	ds	1
   605  000072                     _minuto1:
   606                           	callstack 0
   607  000072                     	ds	1
   608  000073                     _tempo:
   609                           	callstack 0
   610  000073                     	ds	1
   611  000074                     _flag:
   612                           	callstack 0
   613  000074                     	ds	1
   614  000075                     _indice:
   615                           	callstack 0
   616  000075                     	ds	1
   617  000076                     _v3:
   618                           	callstack 0
   619  000076                     	ds	1
   620  000077                     _v2:
   621                           	callstack 0
   622  000077                     	ds	1
   623  000078                     _v1:
   624                           	callstack 0
   625  000078                     	ds	1
   626  000079                     _v0:
   627                           	callstack 0
   628  000079                     	ds	1
   629  00007A                     _display:
   630                           	callstack 0
   631  00007A                     	ds	1
   632  00007B                     kpDebounce@tempo:
   633                           	callstack 0
   634  00007B                     	ds	1
   635  00007C                     _i:
   636                           	callstack 0
   637  00007C                     	ds	1
   638                           
   639                           	psect	dataCOMRAM
   640  00007D                     __pdataCOMRAM:
   641                           	callstack 0
   642  00007D                     _volume:
   643                           	callstack 0
   644  00007D                     	ds	1
   645  00007E                     _pause:
   646                           	callstack 0
   647  00007E                     	ds	1
   648  00007F                     _tecla:
   649                           	callstack 0
   650  00007F                     	ds	1
   651                           
   652                           	psect	bssBANK0
   653  0000EE                     __pbssBANK0:
   654                           	callstack 0
   655  0000EE                     kpDebounce@valorAntigo:
   656                           	callstack 0
   657  0000EE                     	ds	2
   658  0000F0                     kpDebounce@valorNovo:
   659                           	callstack 0
   660  0000F0                     	ds	2
   661  0000F2                     _valor:
   662                           	callstack 0
   663  0000F2                     	ds	2
   664  0000F4                     _cnt:
   665                           	callstack 0
   666  0000F4                     	ds	1
   667                           
   668                           	psect	dataBANK0
   669  000080                     __pdataBANK0:
   670                           	callstack 0
   671  000080                     main@F2440:
   672                           	callstack 0
   673  000080                     	ds	48
   674  0000B0                     _duracoes:
   675                           	callstack 0
   676  0000B0                     	ds	20
   677  0000C4                     main@F2438:
   678                           	callstack 0
   679  0000C4                     	ds	16
   680  0000D4                     main@F2436:
   681                           	callstack 0
   682  0000D4                     	ds	10
   683  0000DE                     main@F2434:
   684                           	callstack 0
   685  0000DE                     	ds	8
   686  0000E6                     _teclas:
   687                           	callstack 0
   688  0000E6                     	ds	8
   689                           
   690                           	psect	bssBANK1
   691  000100                     __pbssBANK1:
   692                           	callstack 0
   693  000100                     _musicas:
   694                           	callstack 0
   695  000100                     	ds	190
   696                           
   697                           	psect	dataBANK2
   698  000200                     __pdataBANK2:
   699                           	callstack 0
   700  000200                     _nomes:
   701                           	callstack 0
   702  000200                     	ds	170
   703                           
   704                           	psect	cstackCOMRAM
   705  000001                     __pcstackCOMRAM:
   706                           	callstack 0
   707  000001                     ??_kpDebounce:
   708  000001                     ?_kpRead:
   709                           	callstack 0
   710  000001                     ?___wmul:
   711                           	callstack 0
   712  000001                     ?___awdiv:
   713                           	callstack 0
   714  000001                     ?___lwdiv:
   715                           	callstack 0
   716  000001                     ?___aldiv:
   717                           	callstack 0
   718  000001                     Delay40us@i:
   719                           	callstack 0
   720  000001                     ssdDigit@pos:
   721                           	callstack 0
   722  000001                     atraso_ms@t:
   723                           	callstack 0
   724  000001                     digitalWrite@pin:
   725                           	callstack 0
   726  000001                     pinMode@pin:
   727                           	callstack 0
   728  000001                     ___wmul@multiplier:
   729                           	callstack 0
   730  000001                     ___awdiv@dividend:
   731                           	callstack 0
   732  000001                     ___lwdiv@dividend:
   733                           	callstack 0
   734  000001                     ___aldiv@dividend:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x0
   738  000001                     	ds	1
   739  000002                     Delay2ms@i:
   740                           	callstack 0
   741  000002                     ssdDigit@val:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x1
   745  000002                     	ds	1
   746  000003                     atraso_ms@i:
   747                           	callstack 0
   748  000003                     digitalWrite@value:
   749                           	callstack 0
   750  000003                     pinMode@type:
   751                           	callstack 0
   752  000003                     ___wmul@multiplicand:
   753                           	callstack 0
   754  000003                     ___awdiv@divisor:
   755                           	callstack 0
   756  000003                     ___lwdiv@divisor:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x2
   760  000003                     	ds	2
   761  000005                     ??_digitalWrite:
   762  000005                     ??_pinMode:
   763  000005                     atraso_ms@j:
   764                           	callstack 0
   765  000005                     ___awdiv@counter:
   766                           	callstack 0
   767  000005                     ___wmul@product:
   768                           	callstack 0
   769  000005                     ___lwdiv@quotient:
   770                           	callstack 0
   771  000005                     ___aldiv@divisor:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x4
   775  000005                     	ds	1
   776  000006                     atraso_ms@k:
   777                           	callstack 0
   778  000006                     kpDebounce@old_D:
   779                           	callstack 0
   780  000006                     ___awdiv@sign:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x5
   784  000006                     	ds	1
   785  000007                     ??_ssdUpdate:
   786  000007                     lcdCommand@old_D:
   787                           	callstack 0
   788  000007                     lcdData@valor:
   789                           	callstack 0
   790  000007                     alterarVolume@opt:
   791                           	callstack 0
   792  000007                     ___lwdiv@counter:
   793                           	callstack 0
   794  000007                     kpDebounce@k:
   795                           	callstack 0
   796  000007                     ___awdiv@quotient:
   797                           	callstack 0
   798  000007                     strcpy@dest:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x6
   802  000007                     	ds	1
   803  000008                     ??_pwmSet:
   804  000008                     lcdCommand@cmd:
   805                           	callstack 0
   806  000008                     lcdData@old_D:
   807                           	callstack 0
   808  000008                     alterarVolume@old_D:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x7
   812  000008                     	ds	1
   813  000009                     ?___awmod:
   814                           	callstack 0
   815  000009                     kpDebounce@j:
   816                           	callstack 0
   817  000009                     lcdPosition@coluna:
   818                           	callstack 0
   819  000009                     ___aldiv@counter:
   820                           	callstack 0
   821  000009                     lcdStr@str:
   822                           	callstack 0
   823  000009                     ___awmod@dividend:
   824                           	callstack 0
   825  000009                     strcpy@src:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x8
   829  000009                     	ds	1
   830  00000A                     kpDebounce@i:
   831                           	callstack 0
   832  00000A                     lcdPosition@linha:
   833                           	callstack 0
   834  00000A                     pwmSet@porcento:
   835                           	callstack 0
   836  00000A                     ___aldiv@sign:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x9
   840  00000A                     	ds	1
   841  00000B                     ??_lcdStr:
   842  00000B                     lcdPosition@comando:
   843                           	callstack 0
   844  00000B                     pwmSet@val:
   845                           	callstack 0
   846  00000B                     ___awmod@divisor:
   847                           	callstack 0
   848  00000B                     strcpy@s:
   849                           	callstack 0
   850  00000B                     ___aldiv@quotient:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0xA
   854  00000B                     	ds	2
   855  00000D                     lcdStr@i:
   856                           	callstack 0
   857  00000D                     ___awmod@counter:
   858                           	callstack 0
   859  00000D                     strcpy@d:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0xC
   863  00000D                     	ds	1
   864  00000E                     ___awmod@sign:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0xD
   868  00000E                     	ds	1
   869  00000F                     pwmFrequency@freq:
   870                           	callstack 0
   871  00000F                     iniciaMusica@i:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0xE
   875  00000F                     	ds	2
   876  000011                     _tocaMusica$989:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x10
   880  000011                     	ds	2
   881  000013                     _tocaMusica$990:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x12
   885  000013                     	ds	2
   886  000015                     tocaMusica@j:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x14
   890  000015                     	ds	1
   891  000016                     ??_escolheMusica:
   892                           
   893                           ; 1 bytes @ 0x15
   894  000016                     	ds	2
   895  000018                     main@logo:
   896                           	callstack 0
   897                           
   898                           ; 48 bytes @ 0x17
   899  000018                     	ds	48
   900  000048                     main@text8:
   901                           	callstack 0
   902                           
   903                           ; 16 bytes @ 0x47
   904  000048                     	ds	16
   905  000058                     main@text7:
   906                           	callstack 0
   907                           
   908                           ; 10 bytes @ 0x57
   909  000058                     	ds	10
   910  000062                     main@text6:
   911                           	callstack 0
   912                           
   913                           ; 8 bytes @ 0x61
   914  000062                     	ds	8
   915  00006A                     main@i:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x69
   919  00006A                     	ds	1
   920  00006B                     main@i_171:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x6A
   924  00006B                     	ds	1
   925  00006C                     main@i_172:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x6B
   929  00006C                     	ds	1
   930  00006D                     main@i_173:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x6C
   934  00006D                     	ds	1
   935  00006E                     main@i_178:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x6D
   939  00006E                     	ds	1
   940                           
   941 ;;
   942 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   943 ;;
   944 ;; *************** function _main *****************
   945 ;; Defined at:
   946 ;;		line 15 in file "main.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  i               1  109[COMRAM] unsigned char 
   951 ;;  i               1  108[COMRAM] unsigned char 
   952 ;;  i               1  107[COMRAM] unsigned char 
   953 ;;  i               1  106[COMRAM] unsigned char 
   954 ;;  i               1  105[COMRAM] unsigned char 
   955 ;;  logo           48   23[COMRAM] unsigned char [48]
   956 ;;  text8          16   71[COMRAM] unsigned char [16]
   957 ;;  text7          10   87[COMRAM] unsigned char [10]
   958 ;;  text6           8   97[COMRAM] unsigned char [8]
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   968 ;;      Params:         0       0       0       0       0       0       0
   969 ;;      Locals:        87       0       0       0       0       0       0
   970 ;;      Temps:          0       0       0       0       0       0       0
   971 ;;      Totals:        87       0       0       0       0       0       0
   972 ;;Total ram usage:       87 bytes
   973 ;; Hardware stack levels required when called: 6
   974 ;; This function calls:
   975 ;;		_atraso_ms
   976 ;;		_escolheMusica
   977 ;;		_iniciaMusica
   978 ;;		_kpDebounce
   979 ;;		_kpInit
   980 ;;		_lcdCommand
   981 ;;		_lcdData
   982 ;;		_lcdInit
   983 ;;		_lcdPosition
   984 ;;		_lcdStr
   985 ;;		_ssdInit
   986 ;; This function is called by:
   987 ;;		Startup code after reset
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text0
   992  00092C                     __ptext0:
   993                           	callstack 0
   994  00092C                     _main:
   995                           	callstack 25
   996  00092C                     
   997                           ;main.c: 19:     char text6[8]="  UNIFEI";
   998  00092C  EE20  F0DE         	lfsr	2,main@F2434
   999  000930  EE10  F062         	lfsr	1,main@text6
  1000  000934  0E07               	movlw	7
  1001  000936                     u2701:
  1002  000936  CFDB FFE3          	movff	plusw2,plusw1
  1003  00093A  06E8               	decf	wreg,f,c
  1004  00093C  E2FC               	bc	u2701
  1005                           
  1006                           ;main.c: 20:     char text7[10]="Joao Pedro   ";
  1007  00093E  EE20  F0D4         	lfsr	2,main@F2436
  1008  000942  EE10  F058         	lfsr	1,main@text7
  1009  000946  0E09               	movlw	9
  1010  000948                     u2711:
  1011  000948  CFDB FFE3          	movff	plusw2,plusw1
  1012  00094C  06E8               	decf	wreg,f,c
  1013  00094E  E2FC               	bc	u2711
  1014                           
  1015                           ;main.c: 21:     char text8[16]="      2018004282";
  1016  000950  EE20  F0C4         	lfsr	2,main@F2438
  1017  000954  EE10  F048         	lfsr	1,main@text8
  1018  000958  0E0F               	movlw	15
  1019  00095A                     u2721:
  1020  00095A  CFDB FFE3          	movff	plusw2,plusw1
  1021  00095E  06E8               	decf	wreg,f,c
  1022  000960  E2FC               	bc	u2721
  1023  000962                     
  1024                           ;main.c: 28:     iniciaMusica();
  1025  000962  EC48  F00C         	call	_iniciaMusica	;wreg free
  1026  000966                     
  1027                           ;main.c: 29:     lcdInit();
  1028  000966  EC20  F00D         	call	_lcdInit	;wreg free
  1029  00096A                     
  1030                           ;main.c: 30:     ssdInit();
  1031  00096A  ECCA  F00E         	call	_ssdInit	;wreg free
  1032  00096E                     
  1033                           ;main.c: 31:     kpInit();
  1034  00096E  EC8B  F00F         	call	_kpInit	;wreg free
  1035  000972                     
  1036                           ;main.c: 32:     kpDebounce();
  1037  000972  EC0D  F008         	call	_kpDebounce	;wreg free
  1038  000976                     
  1039                           ;main.c: 33:     lcdCommand(0x0F);
  1040  000976  0E0F               	movlw	15
  1041  000978  ECE1  F00C         	call	_lcdCommand
  1042  00097C                     
  1043                           ;main.c: 41:     char logo[48] = {
  1044  00097C  EE20  F080         	lfsr	2,main@F2440
  1045  000980  EE10  F018         	lfsr	1,main@logo
  1046  000984  0E2F               	movlw	47
  1047  000986                     u2731:
  1048  000986  CFDB FFE3          	movff	plusw2,plusw1
  1049  00098A  06E8               	decf	wreg,f,c
  1050  00098C  E2FC               	bc	u2731
  1051  00098E                     
  1052                           ;main.c: 56:     lcdCommand(0x01);
  1053  00098E  0E01               	movlw	1
  1054  000990  ECE1  F00C         	call	_lcdCommand
  1055  000994                     
  1056                           ;main.c: 57:     lcdPosition(0,3);
  1057  000994  0E03               	movlw	3
  1058  000996  6E09               	movwf	lcdPosition@coluna^0,c
  1059  000998  0E00               	movlw	0
  1060  00099A  EC71  F00E         	call	_lcdPosition
  1061  00099E                     
  1062                           ;main.c: 58:     for(char i=0;i<8;i++){
  1063  00099E  0E00               	movlw	0
  1064  0009A0  6E6A               	movwf	main@i^0,c
  1065  0009A2                     l2849:
  1066                           
  1067                           ;main.c: 59:     lcdData(text6[i]);}
  1068  0009A2  0E62               	movlw	low main@text6
  1069  0009A4  246A               	addwf	main@i^0,w,c
  1070  0009A6  6ED9               	movwf	fsr2l,c
  1071  0009A8  6ADA               	clrf	fsr2h,c
  1072  0009AA  0E00               	movlw	high main@text6
  1073  0009AC  22DA               	addwfc	fsr2h,f,c
  1074  0009AE  50DF               	movf	indf2,w,c
  1075  0009B0  ECF5  F00E         	call	_lcdData
  1076  0009B4  2A6A               	incf	main@i^0,f,c
  1077  0009B6  0E07               	movlw	7
  1078  0009B8  646A               	cpfsgt	main@i^0,c
  1079  0009BA  EFE1  F004         	goto	u2741
  1080  0009BE  EFE3  F004         	goto	u2740
  1081  0009C2                     u2741:
  1082  0009C2  EFD1  F004         	goto	l2849
  1083  0009C6                     u2740:
  1084  0009C6                     
  1085                           ;main.c: 60:     lcdPosition(1,3);
  1086  0009C6  0E03               	movlw	3
  1087  0009C8  6E09               	movwf	lcdPosition@coluna^0,c
  1088  0009CA  0E01               	movlw	1
  1089  0009CC  EC71  F00E         	call	_lcdPosition
  1090  0009D0                     
  1091                           ;main.c: 61:     for(char i=0;i<10;i++){
  1092  0009D0  0E00               	movlw	0
  1093  0009D2  6E6B               	movwf	main@i_171^0,c
  1094  0009D4                     l2863:
  1095                           
  1096                           ;main.c: 62:     lcdData(text7[i]);}
  1097  0009D4  0E58               	movlw	low main@text7
  1098  0009D6  246B               	addwf	main@i_171^0,w,c
  1099  0009D8  6ED9               	movwf	fsr2l,c
  1100  0009DA  6ADA               	clrf	fsr2h,c
  1101  0009DC  0E00               	movlw	high main@text7
  1102  0009DE  22DA               	addwfc	fsr2h,f,c
  1103  0009E0  50DF               	movf	indf2,w,c
  1104  0009E2  ECF5  F00E         	call	_lcdData
  1105  0009E6  2A6B               	incf	main@i_171^0,f,c
  1106  0009E8  0E09               	movlw	9
  1107  0009EA  646B               	cpfsgt	main@i_171^0,c
  1108  0009EC  EFFA  F004         	goto	u2751
  1109  0009F0  EFFC  F004         	goto	u2750
  1110  0009F4                     u2751:
  1111  0009F4  EFEA  F004         	goto	l2863
  1112  0009F8                     u2750:
  1113  0009F8                     
  1114                           ;main.c: 63:     lcdPosition(2,4);
  1115  0009F8  0E04               	movlw	4
  1116  0009FA  6E09               	movwf	lcdPosition@coluna^0,c
  1117  0009FC  0E02               	movlw	2
  1118  0009FE  EC71  F00E         	call	_lcdPosition
  1119  000A02                     
  1120                           ;main.c: 64:     for(char i=0;i<16;i++){
  1121  000A02  0E00               	movlw	0
  1122  000A04  6E6C               	movwf	main@i_172^0,c
  1123  000A06                     l2877:
  1124                           
  1125                           ;main.c: 65:     lcdData(text8[i]);}
  1126  000A06  0E48               	movlw	low main@text8
  1127  000A08  246C               	addwf	main@i_172^0,w,c
  1128  000A0A  6ED9               	movwf	fsr2l,c
  1129  000A0C  6ADA               	clrf	fsr2h,c
  1130  000A0E  0E00               	movlw	high main@text8
  1131  000A10  22DA               	addwfc	fsr2h,f,c
  1132  000A12  50DF               	movf	indf2,w,c
  1133  000A14  ECF5  F00E         	call	_lcdData
  1134  000A18  2A6C               	incf	main@i_172^0,f,c
  1135  000A1A  0E0F               	movlw	15
  1136  000A1C  646C               	cpfsgt	main@i_172^0,c
  1137  000A1E  EF13  F005         	goto	u2761
  1138  000A22  EF15  F005         	goto	u2760
  1139  000A26                     u2761:
  1140  000A26  EF03  F005         	goto	l2877
  1141  000A2A                     u2760:
  1142  000A2A                     
  1143                           ;main.c: 66:     lcdPosition(0,0);
  1144  000A2A  0E00               	movlw	0
  1145  000A2C  6E09               	movwf	lcdPosition@coluna^0,c
  1146  000A2E  0E00               	movlw	0
  1147  000A30  EC71  F00E         	call	_lcdPosition
  1148                           
  1149                           ;main.c: 67:     lcdData(0);
  1150  000A34  0E00               	movlw	0
  1151  000A36  ECF5  F00E         	call	_lcdData
  1152                           
  1153                           ;main.c: 68:     lcdData(1);
  1154  000A3A  0E01               	movlw	1
  1155  000A3C  ECF5  F00E         	call	_lcdData
  1156                           
  1157                           ;main.c: 69:     lcdData(2);
  1158  000A40  0E02               	movlw	2
  1159  000A42  ECF5  F00E         	call	_lcdData
  1160                           
  1161                           ;main.c: 70:     lcdPosition(1,0);
  1162  000A46  0E00               	movlw	0
  1163  000A48  6E09               	movwf	lcdPosition@coluna^0,c
  1164  000A4A  0E01               	movlw	1
  1165  000A4C  EC71  F00E         	call	_lcdPosition
  1166                           
  1167                           ;main.c: 71:     lcdData(3);
  1168  000A50  0E03               	movlw	3
  1169  000A52  ECF5  F00E         	call	_lcdData
  1170                           
  1171                           ;main.c: 72:     lcdData(4);
  1172  000A56  0E04               	movlw	4
  1173  000A58  ECF5  F00E         	call	_lcdData
  1174                           
  1175                           ;main.c: 73:     lcdData(5);
  1176  000A5C  0E05               	movlw	5
  1177  000A5E  ECF5  F00E         	call	_lcdData
  1178                           
  1179                           ;main.c: 74:     lcdCommand(0x40);
  1180  000A62  0E40               	movlw	64
  1181  000A64  ECE1  F00C         	call	_lcdCommand
  1182  000A68                     
  1183                           ;main.c: 75:        for(char i=0;i<48;i++){
  1184  000A68  0E00               	movlw	0
  1185  000A6A  6E6D               	movwf	main@i_173^0,c
  1186  000A6C                     l2891:
  1187                           
  1188                           ;main.c: 76:           lcdData(logo[i]);}
  1189  000A6C  0E18               	movlw	low main@logo
  1190  000A6E  246D               	addwf	main@i_173^0,w,c
  1191  000A70  6ED9               	movwf	fsr2l,c
  1192  000A72  6ADA               	clrf	fsr2h,c
  1193  000A74  0E00               	movlw	high main@logo
  1194  000A76  22DA               	addwfc	fsr2h,f,c
  1195  000A78  50DF               	movf	indf2,w,c
  1196  000A7A  ECF5  F00E         	call	_lcdData
  1197  000A7E  2A6D               	incf	main@i_173^0,f,c
  1198  000A80  0E2F               	movlw	47
  1199  000A82  646D               	cpfsgt	main@i_173^0,c
  1200  000A84  EF46  F005         	goto	u2771
  1201  000A88  EF48  F005         	goto	u2770
  1202  000A8C                     u2771:
  1203  000A8C  EF36  F005         	goto	l2891
  1204  000A90                     u2770:
  1205  000A90                     
  1206                           ;main.c: 77:     atraso_ms(4000);
  1207  000A90  0E0F               	movlw	15
  1208  000A92  6E02               	movwf	(atraso_ms@t+1)^0,c
  1209  000A94  0EA0               	movlw	160
  1210  000A96  6E01               	movwf	atraso_ms@t^0,c
  1211  000A98  EC3F  F00E         	call	_atraso_ms	;wreg free
  1212                           
  1213                           ;main.c: 78:     lcdCommand(0x01);
  1214  000A9C  0E01               	movlw	1
  1215  000A9E  ECE1  F00C         	call	_lcdCommand
  1216                           
  1217                           ;main.c: 84:     lcdPosition(0, 6);
  1218  000AA2  0E06               	movlw	6
  1219  000AA4  6E09               	movwf	lcdPosition@coluna^0,c
  1220  000AA6  0E00               	movlw	0
  1221  000AA8  EC71  F00E         	call	_lcdPosition
  1222  000AAC                     
  1223                           ;main.c: 85:     lcdStr("MP3");
  1224  000AAC  0E4A               	movlw	low STR_1
  1225  000AAE  6E09               	movwf	lcdStr@str^0,c
  1226  000AB0  0E06               	movlw	high STR_1
  1227  000AB2  6E0A               	movwf	(lcdStr@str+1)^0,c
  1228  000AB4  EC5C  F00D         	call	_lcdStr	;wreg free
  1229  000AB8                     
  1230                           ;main.c: 86:     lcdPosition(1, 4);
  1231  000AB8  0E04               	movlw	4
  1232  000ABA  6E09               	movwf	lcdPosition@coluna^0,c
  1233  000ABC  0E01               	movlw	1
  1234  000ABE  EC71  F00E         	call	_lcdPosition
  1235                           
  1236                           ;main.c: 87:     lcdStr("Player");
  1237  000AC2  0E43               	movlw	low STR_2
  1238  000AC4  6E09               	movwf	lcdStr@str^0,c
  1239  000AC6  0E06               	movlw	high STR_2
  1240  000AC8  6E0A               	movwf	(lcdStr@str+1)^0,c
  1241  000ACA  EC5C  F00D         	call	_lcdStr	;wreg free
  1242  000ACE                     
  1243                           ;main.c: 88:     lcdPosition(0,0);
  1244  000ACE  0E00               	movlw	0
  1245  000AD0  6E09               	movwf	lcdPosition@coluna^0,c
  1246  000AD2  0E00               	movlw	0
  1247  000AD4  EC71  F00E         	call	_lcdPosition
  1248  000AD8                     
  1249                           ;main.c: 89:                 lcdData(0);
  1250  000AD8  0E00               	movlw	0
  1251  000ADA  ECF5  F00E         	call	_lcdData
  1252  000ADE                     
  1253                           ;main.c: 90:                 lcdData(1);
  1254  000ADE  0E01               	movlw	1
  1255  000AE0  ECF5  F00E         	call	_lcdData
  1256  000AE4                     
  1257                           ;main.c: 91:                 lcdData(2);
  1258  000AE4  0E02               	movlw	2
  1259  000AE6  ECF5  F00E         	call	_lcdData
  1260  000AEA                     
  1261                           ;main.c: 92:                 lcdPosition(1,0);
  1262  000AEA  0E00               	movlw	0
  1263  000AEC  6E09               	movwf	lcdPosition@coluna^0,c
  1264  000AEE  0E01               	movlw	1
  1265  000AF0  EC71  F00E         	call	_lcdPosition
  1266  000AF4                     
  1267                           ;main.c: 93:                 lcdData(3);
  1268  000AF4  0E03               	movlw	3
  1269  000AF6  ECF5  F00E         	call	_lcdData
  1270  000AFA                     
  1271                           ;main.c: 94:                 lcdData(4);
  1272  000AFA  0E04               	movlw	4
  1273  000AFC  ECF5  F00E         	call	_lcdData
  1274  000B00                     
  1275                           ;main.c: 95:                 lcdData(5);
  1276  000B00  0E05               	movlw	5
  1277  000B02  ECF5  F00E         	call	_lcdData
  1278  000B06                     
  1279                           ;main.c: 96:                 lcdCommand(0x40);
  1280  000B06  0E40               	movlw	64
  1281  000B08  ECE1  F00C         	call	_lcdCommand
  1282  000B0C                     
  1283                           ;main.c: 97:                 for(char i=0;i<48;i++){
  1284  000B0C  0E00               	movlw	0
  1285  000B0E  6E6E               	movwf	main@i_178^0,c
  1286  000B10                     l2927:
  1287                           
  1288                           ;main.c: 98:                 lcdData(logo[i]);
  1289  000B10  0E18               	movlw	low main@logo
  1290  000B12  246E               	addwf	main@i_178^0,w,c
  1291  000B14  6ED9               	movwf	fsr2l,c
  1292  000B16  6ADA               	clrf	fsr2h,c
  1293  000B18  0E00               	movlw	high main@logo
  1294  000B1A  22DA               	addwfc	fsr2h,f,c
  1295  000B1C  50DF               	movf	indf2,w,c
  1296  000B1E  ECF5  F00E         	call	_lcdData
  1297  000B22                     
  1298                           ;main.c: 99:                 }
  1299  000B22  2A6E               	incf	main@i_178^0,f,c
  1300  000B24  0E2F               	movlw	47
  1301  000B26  646E               	cpfsgt	main@i_178^0,c
  1302  000B28  EF98  F005         	goto	u2781
  1303  000B2C  EF9A  F005         	goto	u2780
  1304  000B30                     u2781:
  1305  000B30  EF88  F005         	goto	l2927
  1306  000B34                     u2780:
  1307  000B34                     
  1308                           ;main.c: 100:     atraso_ms(5000);
  1309  000B34  0E13               	movlw	19
  1310  000B36  6E02               	movwf	(atraso_ms@t+1)^0,c
  1311  000B38  0E88               	movlw	136
  1312  000B3A  6E01               	movwf	atraso_ms@t^0,c
  1313  000B3C  EC3F  F00E         	call	_atraso_ms	;wreg free
  1314                           
  1315                           ;main.c: 102:     lcdCommand(0x01);
  1316  000B40  0E01               	movlw	1
  1317  000B42  ECE1  F00C         	call	_lcdCommand
  1318                           
  1319                           ;main.c: 103:     lcdPosition(0, 0);
  1320  000B46  0E00               	movlw	0
  1321  000B48  6E09               	movwf	lcdPosition@coluna^0,c
  1322  000B4A  0E00               	movlw	0
  1323  000B4C  EC71  F00E         	call	_lcdPosition
  1324  000B50                     
  1325                           ;main.c: 104:     lcdStr("Escolha a musica");
  1326  000B50  0E22               	movlw	low STR_3
  1327  000B52  6E09               	movwf	lcdStr@str^0,c
  1328  000B54  0E06               	movlw	high STR_3
  1329  000B56  6E0A               	movwf	(lcdStr@str+1)^0,c
  1330  000B58  EC5C  F00D         	call	_lcdStr	;wreg free
  1331  000B5C                     l2937:
  1332                           
  1333                           ;main.c: 106:         lcdPosition(1, 0);
  1334  000B5C  0E00               	movlw	0
  1335  000B5E  6E09               	movwf	lcdPosition@coluna^0,c
  1336  000B60  0E01               	movlw	1
  1337  000B62  EC71  F00E         	call	_lcdPosition
  1338                           
  1339                           ;main.c: 107:         lcdStr("<-(1) (*)  (2)->");
  1340  000B66  0E11               	movlw	low STR_4
  1341  000B68  6E09               	movwf	lcdStr@str^0,c
  1342  000B6A  0E06               	movlw	high STR_4
  1343  000B6C  6E0A               	movwf	(lcdStr@str+1)^0,c
  1344  000B6E  EC5C  F00D         	call	_lcdStr	;wreg free
  1345  000B72                     
  1346                           ;main.c: 108:         escolheMusica();
  1347  000B72  EC74  F009         	call	_escolheMusica	;wreg free
  1348                           
  1349                           ;main.c: 109:     }
  1350  000B76  EFAE  F005         	goto	l2937
  1351  000B7A  EF00  F000         	goto	start
  1352  000B7E                     __end_of_main:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _ssdInit *****************
  1356 ;; Defined at:
  1357 ;;		line 101 in file "ssd.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1371 ;;      Params:         0       0       0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 1
  1378 ;; This function calls:
  1379 ;;		_pinMode
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text1
  1386  001D94                     __ptext1:
  1387                           	callstack 0
  1388  001D94                     _ssdInit:
  1389                           	callstack 29
  1390  001D94                     
  1391                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  1392  001D94  0E00               	movlw	0
  1393  001D96  6E02               	movwf	(pinMode@pin+1)^0,c
  1394  001D98  0E02               	movlw	2
  1395  001D9A  6E01               	movwf	pinMode@pin^0,c
  1396  001D9C  0E00               	movlw	0
  1397  001D9E  6E04               	movwf	(pinMode@type+1)^0,c
  1398  001DA0  0E00               	movlw	0
  1399  001DA2  6E03               	movwf	pinMode@type^0,c
  1400  001DA4  ECBF  F005         	call	_pinMode	;wreg free
  1401                           
  1402                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  1403  001DA8  0E00               	movlw	0
  1404  001DAA  6E02               	movwf	(pinMode@pin+1)^0,c
  1405  001DAC  0E03               	movlw	3
  1406  001DAE  6E01               	movwf	pinMode@pin^0,c
  1407  001DB0  0E00               	movlw	0
  1408  001DB2  6E04               	movwf	(pinMode@type+1)^0,c
  1409  001DB4  0E00               	movlw	0
  1410  001DB6  6E03               	movwf	pinMode@type^0,c
  1411  001DB8  ECBF  F005         	call	_pinMode	;wreg free
  1412                           
  1413                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  1414  001DBC  0E00               	movlw	0
  1415  001DBE  6E02               	movwf	(pinMode@pin+1)^0,c
  1416  001DC0  0E04               	movlw	4
  1417  001DC2  6E01               	movwf	pinMode@pin^0,c
  1418  001DC4  0E00               	movlw	0
  1419  001DC6  6E04               	movwf	(pinMode@type+1)^0,c
  1420  001DC8  0E00               	movlw	0
  1421  001DCA  6E03               	movwf	pinMode@type^0,c
  1422  001DCC  ECBF  F005         	call	_pinMode	;wreg free
  1423                           
  1424                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  1425  001DD0  0E00               	movlw	0
  1426  001DD2  6E02               	movwf	(pinMode@pin+1)^0,c
  1427  001DD4  0E05               	movlw	5
  1428  001DD6  6E01               	movwf	pinMode@pin^0,c
  1429  001DD8  0E00               	movlw	0
  1430  001DDA  6E04               	movwf	(pinMode@type+1)^0,c
  1431  001DDC  0E00               	movlw	0
  1432  001DDE  6E03               	movwf	pinMode@type^0,c
  1433  001DE0  ECBF  F005         	call	_pinMode	;wreg free
  1434  001DE4                     
  1435                           ;ssd.c: 109:     TRISD = 0x00;
  1436  001DE4  0E00               	movlw	0
  1437  001DE6  6E95               	movwf	149,c	;volatile
  1438  001DE8  0012               	return		;funcret
  1439  001DEA                     __end_of_ssdInit:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _lcdInit *****************
  1443 ;; Defined at:
  1444 ;;		line 87 in file "lcd.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1458 ;;      Params:         0       0       0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; Hardware stack levels required when called: 3
  1465 ;; This function calls:
  1466 ;;		_Delay2ms
  1467 ;;		_lcdCommand
  1468 ;;		_pinMode
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text2
  1475  001A40                     __ptext2:
  1476                           	callstack 0
  1477  001A40                     _lcdInit:
  1478                           	callstack 27
  1479  001A40                     
  1480                           ;lcd.c: 89:     pinMode(PIN_E2, 0);
  1481  001A40  0E00               	movlw	0
  1482  001A42  6E02               	movwf	(pinMode@pin+1)^0,c
  1483  001A44  0E22               	movlw	34
  1484  001A46  6E01               	movwf	pinMode@pin^0,c
  1485  001A48  0E00               	movlw	0
  1486  001A4A  6E04               	movwf	(pinMode@type+1)^0,c
  1487  001A4C  0E00               	movlw	0
  1488  001A4E  6E03               	movwf	pinMode@type^0,c
  1489  001A50  ECBF  F005         	call	_pinMode	;wreg free
  1490                           
  1491                           ;lcd.c: 90:     pinMode(PIN_E1, 0);
  1492  001A54  0E00               	movlw	0
  1493  001A56  6E02               	movwf	(pinMode@pin+1)^0,c
  1494  001A58  0E21               	movlw	33
  1495  001A5A  6E01               	movwf	pinMode@pin^0,c
  1496  001A5C  0E00               	movlw	0
  1497  001A5E  6E04               	movwf	(pinMode@type+1)^0,c
  1498  001A60  0E00               	movlw	0
  1499  001A62  6E03               	movwf	pinMode@type^0,c
  1500  001A64  ECBF  F005         	call	_pinMode	;wreg free
  1501  001A68                     
  1502                           ;lcd.c: 91:     TRISD = 0x00;
  1503  001A68  0E00               	movlw	0
  1504  001A6A  6E95               	movwf	149,c	;volatile
  1505  001A6C                     
  1506                           ;lcd.c: 94:     Delay2ms();
  1507  001A6C  EC64  F00F         	call	_Delay2ms	;wreg free
  1508  001A70                     
  1509                           ;lcd.c: 95:     Delay2ms();
  1510  001A70  EC64  F00F         	call	_Delay2ms	;wreg free
  1511  001A74                     
  1512                           ;lcd.c: 96:     Delay2ms();
  1513  001A74  EC64  F00F         	call	_Delay2ms	;wreg free
  1514  001A78                     
  1515                           ;lcd.c: 97:     Delay2ms();
  1516  001A78  EC64  F00F         	call	_Delay2ms	;wreg free
  1517  001A7C                     
  1518                           ;lcd.c: 98:     Delay2ms();
  1519  001A7C  EC64  F00F         	call	_Delay2ms	;wreg free
  1520  001A80                     
  1521                           ;lcd.c: 100:     lcdCommand(0x38);
  1522  001A80  0E38               	movlw	56
  1523  001A82  ECE1  F00C         	call	_lcdCommand
  1524  001A86                     
  1525                           ;lcd.c: 101:     Delay2ms();
  1526  001A86  EC64  F00F         	call	_Delay2ms	;wreg free
  1527  001A8A                     
  1528                           ;lcd.c: 102:     Delay2ms();
  1529  001A8A  EC64  F00F         	call	_Delay2ms	;wreg free
  1530  001A8E                     
  1531                           ;lcd.c: 103:     lcdCommand(0x38);
  1532  001A8E  0E38               	movlw	56
  1533  001A90  ECE1  F00C         	call	_lcdCommand
  1534  001A94                     
  1535                           ;lcd.c: 104:     Delay2ms();
  1536  001A94  EC64  F00F         	call	_Delay2ms	;wreg free
  1537  001A98                     
  1538                           ;lcd.c: 105:     lcdCommand(0x38);
  1539  001A98  0E38               	movlw	56
  1540  001A9A  ECE1  F00C         	call	_lcdCommand
  1541  001A9E                     
  1542                           ;lcd.c: 107:     lcdCommand(0x38);
  1543  001A9E  0E38               	movlw	56
  1544  001AA0  ECE1  F00C         	call	_lcdCommand
  1545  001AA4                     
  1546                           ;lcd.c: 108:     lcdCommand(0x06);
  1547  001AA4  0E06               	movlw	6
  1548  001AA6  ECE1  F00C         	call	_lcdCommand
  1549  001AAA                     
  1550                           ;lcd.c: 111:     lcdCommand(0x0C);
  1551  001AAA  0E0C               	movlw	12
  1552  001AAC  ECE1  F00C         	call	_lcdCommand
  1553  001AB0                     
  1554                           ;lcd.c: 112:     lcdCommand(0x01);
  1555  001AB0  0E01               	movlw	1
  1556  001AB2  ECE1  F00C         	call	_lcdCommand
  1557  001AB6  0012               	return		;funcret
  1558  001AB8                     __end_of_lcdInit:
  1559                           	callstack 0
  1560                           
  1561 ;; *************** function _pinMode *****************
  1562 ;; Defined at:
  1563 ;;		line 54 in file "io.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  pin             2    0[COMRAM] int 
  1566 ;;  type            2    2[COMRAM] int 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1578 ;;      Params:         4       0       0       0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0       0       0
  1580 ;;      Temps:          2       0       0       0       0       0       0
  1581 ;;      Totals:         6       0       0       0       0       0       0
  1582 ;;Total ram usage:        6 bytes
  1583 ;; Hardware stack levels used: 1
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_lcdInit
  1588 ;;		_ssdInit
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text3
  1593  000B7E                     __ptext3:
  1594                           	callstack 0
  1595  000B7E                     _pinMode:
  1596                           	callstack 29
  1597  000B7E                     
  1598                           ;io.c: 56:     if(pin <8){
  1599  000B7E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1600  000B80  EFCD  F005         	goto	u2270
  1601  000B84  5002               	movf	(pinMode@pin+1)^0,w,c
  1602  000B86  E107               	bnz	u2271
  1603  000B88  0E08               	movlw	8
  1604  000B8A  5C01               	subwf	pinMode@pin^0,w,c
  1605  000B8C  B0D8               	btfsc	status,0,c
  1606  000B8E  EFCB  F005         	goto	u2271
  1607  000B92  EFCD  F005         	goto	u2270
  1608  000B96                     u2271:
  1609  000B96  EFF7  F005         	goto	l2571
  1610  000B9A                     u2270:
  1611  000B9A                     
  1612                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  1613  000B9A  5003               	movf	pinMode@type^0,w,c
  1614  000B9C  1004               	iorwf	(pinMode@type+1)^0,w,c
  1615  000B9E  B4D8               	btfsc	status,2,c
  1616  000BA0  EFD4  F005         	goto	u2281
  1617  000BA4  EFD6  F005         	goto	u2280
  1618  000BA8                     u2281:
  1619  000BA8  EFE6  F005         	goto	l2569
  1620  000BAC                     u2280:
  1621  000BAC  C001  F005         	movff	pinMode@pin,??_pinMode
  1622  000BB0  0E01               	movlw	1
  1623  000BB2  6E06               	movwf	(??_pinMode+1)^0,c
  1624  000BB4  2A05               	incf	??_pinMode^0,f,c
  1625  000BB6  EFDF  F005         	goto	u2294
  1626  000BBA                     u2295:
  1627  000BBA  90D8               	bcf	status,0,c
  1628  000BBC  3606               	rlcf	(??_pinMode+1)^0,f,c
  1629  000BBE                     u2294:
  1630  000BBE  2E05               	decfsz	??_pinMode^0,f,c
  1631  000BC0  EFDD  F005         	goto	u2295
  1632  000BC4  5006               	movf	(??_pinMode+1)^0,w,c
  1633  000BC6  1292               	iorwf	146,f,c	;volatile
  1634  000BC8  EFE5  F006         	goto	l86
  1635  000BCC                     l2569:
  1636  000BCC  C001  F005         	movff	pinMode@pin,??_pinMode
  1637  000BD0  0E01               	movlw	1
  1638  000BD2  6E06               	movwf	(??_pinMode+1)^0,c
  1639  000BD4  2A05               	incf	??_pinMode^0,f,c
  1640  000BD6  EFEF  F005         	goto	u2304
  1641  000BDA                     u2305:
  1642  000BDA  90D8               	bcf	status,0,c
  1643  000BDC  3606               	rlcf	(??_pinMode+1)^0,f,c
  1644  000BDE                     u2304:
  1645  000BDE  2E05               	decfsz	??_pinMode^0,f,c
  1646  000BE0  EFED  F005         	goto	u2305
  1647  000BE4  5006               	movf	(??_pinMode+1)^0,w,c
  1648  000BE6  0AFF               	xorlw	255
  1649  000BE8  1692               	andwf	146,f,c	;volatile
  1650  000BEA  EFE5  F006         	goto	l86
  1651  000BEE                     l2571:
  1652  000BEE  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1653  000BF0  EF05  F006         	goto	u2310
  1654  000BF4  5002               	movf	(pinMode@pin+1)^0,w,c
  1655  000BF6  E107               	bnz	u2311
  1656  000BF8  0E10               	movlw	16
  1657  000BFA  5C01               	subwf	pinMode@pin^0,w,c
  1658  000BFC  B0D8               	btfsc	status,0,c
  1659  000BFE  EF03  F006         	goto	u2311
  1660  000C02  EF05  F006         	goto	u2310
  1661  000C06                     u2311:
  1662  000C06  EF33  F006         	goto	l2579
  1663  000C0A                     u2310:
  1664  000C0A                     
  1665                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  1666  000C0A  5003               	movf	pinMode@type^0,w,c
  1667  000C0C  1004               	iorwf	(pinMode@type+1)^0,w,c
  1668  000C0E  B4D8               	btfsc	status,2,c
  1669  000C10  EF0C  F006         	goto	u2321
  1670  000C14  EF0E  F006         	goto	u2320
  1671  000C18                     u2321:
  1672  000C18  EF20  F006         	goto	l2577
  1673  000C1C                     u2320:
  1674  000C1C  C001  F005         	movff	pinMode@pin,??_pinMode
  1675  000C20  0EF8               	movlw	-8
  1676  000C22  2605               	addwf	??_pinMode^0,f,c
  1677  000C24  0E01               	movlw	1
  1678  000C26  6E06               	movwf	(??_pinMode+1)^0,c
  1679  000C28  2A05               	incf	??_pinMode^0,f,c
  1680  000C2A  EF19  F006         	goto	u2334
  1681  000C2E                     u2335:
  1682  000C2E  90D8               	bcf	status,0,c
  1683  000C30  3606               	rlcf	(??_pinMode+1)^0,f,c
  1684  000C32                     u2334:
  1685  000C32  2E05               	decfsz	??_pinMode^0,f,c
  1686  000C34  EF17  F006         	goto	u2335
  1687  000C38  5006               	movf	(??_pinMode+1)^0,w,c
  1688  000C3A  1293               	iorwf	147,f,c	;volatile
  1689  000C3C  EFE5  F006         	goto	l86
  1690  000C40                     l2577:
  1691  000C40  C001  F005         	movff	pinMode@pin,??_pinMode
  1692  000C44  0EF8               	movlw	-8
  1693  000C46  2605               	addwf	??_pinMode^0,f,c
  1694  000C48  0E01               	movlw	1
  1695  000C4A  6E06               	movwf	(??_pinMode+1)^0,c
  1696  000C4C  2A05               	incf	??_pinMode^0,f,c
  1697  000C4E  EF2B  F006         	goto	u2344
  1698  000C52                     u2345:
  1699  000C52  90D8               	bcf	status,0,c
  1700  000C54  3606               	rlcf	(??_pinMode+1)^0,f,c
  1701  000C56                     u2344:
  1702  000C56  2E05               	decfsz	??_pinMode^0,f,c
  1703  000C58  EF29  F006         	goto	u2345
  1704  000C5C  5006               	movf	(??_pinMode+1)^0,w,c
  1705  000C5E  0AFF               	xorlw	255
  1706  000C60  1693               	andwf	147,f,c	;volatile
  1707  000C62  EFE5  F006         	goto	l86
  1708  000C66                     l2579:
  1709  000C66  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1710  000C68  EF41  F006         	goto	u2350
  1711  000C6C  5002               	movf	(pinMode@pin+1)^0,w,c
  1712  000C6E  E107               	bnz	u2351
  1713  000C70  0E18               	movlw	24
  1714  000C72  5C01               	subwf	pinMode@pin^0,w,c
  1715  000C74  B0D8               	btfsc	status,0,c
  1716  000C76  EF3F  F006         	goto	u2351
  1717  000C7A  EF41  F006         	goto	u2350
  1718  000C7E                     u2351:
  1719  000C7E  EF6F  F006         	goto	l2587
  1720  000C82                     u2350:
  1721  000C82                     
  1722                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  1723  000C82  5003               	movf	pinMode@type^0,w,c
  1724  000C84  1004               	iorwf	(pinMode@type+1)^0,w,c
  1725  000C86  B4D8               	btfsc	status,2,c
  1726  000C88  EF48  F006         	goto	u2361
  1727  000C8C  EF4A  F006         	goto	u2360
  1728  000C90                     u2361:
  1729  000C90  EF5C  F006         	goto	l2585
  1730  000C94                     u2360:
  1731  000C94  C001  F005         	movff	pinMode@pin,??_pinMode
  1732  000C98  0EF0               	movlw	-16
  1733  000C9A  2605               	addwf	??_pinMode^0,f,c
  1734  000C9C  0E01               	movlw	1
  1735  000C9E  6E06               	movwf	(??_pinMode+1)^0,c
  1736  000CA0  2A05               	incf	??_pinMode^0,f,c
  1737  000CA2  EF55  F006         	goto	u2374
  1738  000CA6                     u2375:
  1739  000CA6  90D8               	bcf	status,0,c
  1740  000CA8  3606               	rlcf	(??_pinMode+1)^0,f,c
  1741  000CAA                     u2374:
  1742  000CAA  2E05               	decfsz	??_pinMode^0,f,c
  1743  000CAC  EF53  F006         	goto	u2375
  1744  000CB0  5006               	movf	(??_pinMode+1)^0,w,c
  1745  000CB2  1294               	iorwf	148,f,c	;volatile
  1746  000CB4  EFE5  F006         	goto	l86
  1747  000CB8                     l2585:
  1748  000CB8  C001  F005         	movff	pinMode@pin,??_pinMode
  1749  000CBC  0EF0               	movlw	-16
  1750  000CBE  2605               	addwf	??_pinMode^0,f,c
  1751  000CC0  0E01               	movlw	1
  1752  000CC2  6E06               	movwf	(??_pinMode+1)^0,c
  1753  000CC4  2A05               	incf	??_pinMode^0,f,c
  1754  000CC6  EF67  F006         	goto	u2384
  1755  000CCA                     u2385:
  1756  000CCA  90D8               	bcf	status,0,c
  1757  000CCC  3606               	rlcf	(??_pinMode+1)^0,f,c
  1758  000CCE                     u2384:
  1759  000CCE  2E05               	decfsz	??_pinMode^0,f,c
  1760  000CD0  EF65  F006         	goto	u2385
  1761  000CD4  5006               	movf	(??_pinMode+1)^0,w,c
  1762  000CD6  0AFF               	xorlw	255
  1763  000CD8  1694               	andwf	148,f,c	;volatile
  1764  000CDA  EFE5  F006         	goto	l86
  1765  000CDE                     l2587:
  1766  000CDE  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1767  000CE0  EF7D  F006         	goto	u2390
  1768  000CE4  5002               	movf	(pinMode@pin+1)^0,w,c
  1769  000CE6  E107               	bnz	u2391
  1770  000CE8  0E20               	movlw	32
  1771  000CEA  5C01               	subwf	pinMode@pin^0,w,c
  1772  000CEC  B0D8               	btfsc	status,0,c
  1773  000CEE  EF7B  F006         	goto	u2391
  1774  000CF2  EF7D  F006         	goto	u2390
  1775  000CF6                     u2391:
  1776  000CF6  EFAB  F006         	goto	l2595
  1777  000CFA                     u2390:
  1778  000CFA                     
  1779                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  1780  000CFA  5003               	movf	pinMode@type^0,w,c
  1781  000CFC  1004               	iorwf	(pinMode@type+1)^0,w,c
  1782  000CFE  B4D8               	btfsc	status,2,c
  1783  000D00  EF84  F006         	goto	u2401
  1784  000D04  EF86  F006         	goto	u2400
  1785  000D08                     u2401:
  1786  000D08  EF98  F006         	goto	l2593
  1787  000D0C                     u2400:
  1788  000D0C  C001  F005         	movff	pinMode@pin,??_pinMode
  1789  000D10  0EE8               	movlw	-24
  1790  000D12  2605               	addwf	??_pinMode^0,f,c
  1791  000D14  0E01               	movlw	1
  1792  000D16  6E06               	movwf	(??_pinMode+1)^0,c
  1793  000D18  2A05               	incf	??_pinMode^0,f,c
  1794  000D1A  EF91  F006         	goto	u2414
  1795  000D1E                     u2415:
  1796  000D1E  90D8               	bcf	status,0,c
  1797  000D20  3606               	rlcf	(??_pinMode+1)^0,f,c
  1798  000D22                     u2414:
  1799  000D22  2E05               	decfsz	??_pinMode^0,f,c
  1800  000D24  EF8F  F006         	goto	u2415
  1801  000D28  5006               	movf	(??_pinMode+1)^0,w,c
  1802  000D2A  1295               	iorwf	149,f,c	;volatile
  1803  000D2C  EFE5  F006         	goto	l86
  1804  000D30                     l2593:
  1805  000D30  C001  F005         	movff	pinMode@pin,??_pinMode
  1806  000D34  0EE8               	movlw	-24
  1807  000D36  2605               	addwf	??_pinMode^0,f,c
  1808  000D38  0E01               	movlw	1
  1809  000D3A  6E06               	movwf	(??_pinMode+1)^0,c
  1810  000D3C  2A05               	incf	??_pinMode^0,f,c
  1811  000D3E  EFA3  F006         	goto	u2424
  1812  000D42                     u2425:
  1813  000D42  90D8               	bcf	status,0,c
  1814  000D44  3606               	rlcf	(??_pinMode+1)^0,f,c
  1815  000D46                     u2424:
  1816  000D46  2E05               	decfsz	??_pinMode^0,f,c
  1817  000D48  EFA1  F006         	goto	u2425
  1818  000D4C  5006               	movf	(??_pinMode+1)^0,w,c
  1819  000D4E  0AFF               	xorlw	255
  1820  000D50  1695               	andwf	149,f,c	;volatile
  1821  000D52  EFE5  F006         	goto	l86
  1822  000D56                     l2595:
  1823  000D56  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1824  000D58  EFB9  F006         	goto	u2430
  1825  000D5C  5002               	movf	(pinMode@pin+1)^0,w,c
  1826  000D5E  E107               	bnz	u2431
  1827  000D60  0E28               	movlw	40
  1828  000D62  5C01               	subwf	pinMode@pin^0,w,c
  1829  000D64  B0D8               	btfsc	status,0,c
  1830  000D66  EFB7  F006         	goto	u2431
  1831  000D6A  EFB9  F006         	goto	u2430
  1832  000D6E                     u2431:
  1833  000D6E  EFE5  F006         	goto	l86
  1834  000D72                     u2430:
  1835  000D72                     
  1836                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  1837  000D72  5003               	movf	pinMode@type^0,w,c
  1838  000D74  1004               	iorwf	(pinMode@type+1)^0,w,c
  1839  000D76  B4D8               	btfsc	status,2,c
  1840  000D78  EFC0  F006         	goto	u2441
  1841  000D7C  EFC2  F006         	goto	u2440
  1842  000D80                     u2441:
  1843  000D80  EFD4  F006         	goto	l2601
  1844  000D84                     u2440:
  1845  000D84  C001  F005         	movff	pinMode@pin,??_pinMode
  1846  000D88  0EE0               	movlw	-32
  1847  000D8A  2605               	addwf	??_pinMode^0,f,c
  1848  000D8C  0E01               	movlw	1
  1849  000D8E  6E06               	movwf	(??_pinMode+1)^0,c
  1850  000D90  2A05               	incf	??_pinMode^0,f,c
  1851  000D92  EFCD  F006         	goto	u2454
  1852  000D96                     u2455:
  1853  000D96  90D8               	bcf	status,0,c
  1854  000D98  3606               	rlcf	(??_pinMode+1)^0,f,c
  1855  000D9A                     u2454:
  1856  000D9A  2E05               	decfsz	??_pinMode^0,f,c
  1857  000D9C  EFCB  F006         	goto	u2455
  1858  000DA0  5006               	movf	(??_pinMode+1)^0,w,c
  1859  000DA2  1296               	iorwf	150,f,c	;volatile
  1860  000DA4  EFE5  F006         	goto	l86
  1861  000DA8                     l2601:
  1862  000DA8  C001  F005         	movff	pinMode@pin,??_pinMode
  1863  000DAC  0EE0               	movlw	-32
  1864  000DAE  2605               	addwf	??_pinMode^0,f,c
  1865  000DB0  0E01               	movlw	1
  1866  000DB2  6E06               	movwf	(??_pinMode+1)^0,c
  1867  000DB4  2A05               	incf	??_pinMode^0,f,c
  1868  000DB6  EFDF  F006         	goto	u2464
  1869  000DBA                     u2465:
  1870  000DBA  90D8               	bcf	status,0,c
  1871  000DBC  3606               	rlcf	(??_pinMode+1)^0,f,c
  1872  000DBE                     u2464:
  1873  000DBE  2E05               	decfsz	??_pinMode^0,f,c
  1874  000DC0  EFDD  F006         	goto	u2465
  1875  000DC4  5006               	movf	(??_pinMode+1)^0,w,c
  1876  000DC6  0AFF               	xorlw	255
  1877  000DC8  1696               	andwf	150,f,c	;volatile
  1878  000DCA                     l86:
  1879  000DCA  0012               	return		;funcret
  1880  000DCC                     __end_of_pinMode:
  1881                           	callstack 0
  1882                           
  1883 ;; *************** function _kpInit *****************
  1884 ;; Defined at:
  1885 ;;		line 89 in file "keypad.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         0       0       0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0
  1902 ;;      Totals:         0       0       0       0       0       0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text4
  1913  001F16                     __ptext4:
  1914                           	callstack 0
  1915  001F16                     _kpInit:
  1916                           	callstack 30
  1917  001F16                     
  1918                           ;keypad.c: 91:     TRISB &= 0x07;
  1919  001F16  0E07               	movlw	7
  1920  001F18  1693               	andwf	147,f,c	;volatile
  1921                           
  1922                           ;keypad.c: 93:     TRISD |= 0x0f;
  1923  001F1A  0E0F               	movlw	15
  1924  001F1C  1295               	iorwf	149,f,c	;volatile
  1925  001F1E  0012               	return		;funcret
  1926  001F20                     __end_of_kpInit:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _iniciaMusica *****************
  1930 ;; Defined at:
  1931 ;;		line 23 in file "musicas.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  i               2   14[COMRAM] unsigned int 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1945 ;;      Params:         0       0       0       0       0       0       0
  1946 ;;      Locals:         2       0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0
  1948 ;;      Totals:         2       0       0       0       0       0       0
  1949 ;;Total ram usage:        2 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 1
  1952 ;; This function calls:
  1953 ;;		___wmul
  1954 ;;		_strcpy
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text5
  1961  001890                     __ptext5:
  1962                           	callstack 0
  1963  001890                     _iniciaMusica:
  1964                           	callstack 29
  1965  001890                     
  1966                           ;musicas.c: 24:     TRISC = 0x00;
  1967  001890  0E00               	movlw	0
  1968  001892  6E94               	movwf	148,c	;volatile
  1969                           
  1970                           ;musicas.c: 25:     for (unsigned int i = 0; i < 10; i++) {
  1971  001894  0E00               	movlw	0
  1972  001896  6E10               	movwf	(iniciaMusica@i+1)^0,c
  1973  001898  0E00               	movlw	0
  1974  00189A  6E0F               	movwf	iniciaMusica@i^0,c
  1975  00189C                     l2759:
  1976                           
  1977                           ;musicas.c: 26:         musicas[i].duracao = duracoes[i];
  1978  00189C  90D8               	bcf	status,0,c
  1979  00189E  340F               	rlcf	iniciaMusica@i^0,w,c
  1980  0018A0  6ED9               	movwf	fsr2l,c
  1981  0018A2  3410               	rlcf	(iniciaMusica@i+1)^0,w,c
  1982  0018A4  6EDA               	movwf	fsr2h,c
  1983  0018A6  0EB0               	movlw	low _duracoes
  1984  0018A8  26D9               	addwf	fsr2l,f,c
  1985  0018AA  0E00               	movlw	high _duracoes
  1986  0018AC  22DA               	addwfc	fsr2h,f,c
  1987  0018AE  C00F  F001         	movff	iniciaMusica@i,___wmul@multiplier
  1988  0018B2  C010  F002         	movff	iniciaMusica@i+1,___wmul@multiplier+1
  1989  0018B6  0E00               	movlw	0
  1990  0018B8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1991  0018BA  0E13               	movlw	19
  1992  0018BC  6E03               	movwf	___wmul@multiplicand^0,c
  1993  0018BE  EC3E  F00F         	call	___wmul	;wreg free
  1994  0018C2  0E00               	movlw	low _musicas
  1995  0018C4  2401               	addwf	?___wmul^0,w,c
  1996  0018C6  6EE1               	movwf	fsr1l,c
  1997  0018C8  0E01               	movlw	high _musicas
  1998  0018CA  2002               	addwfc	(?___wmul+1)^0,w,c
  1999  0018CC  6EE2               	movwf	fsr1h,c
  2000  0018CE  CFDE FFE6          	movff	postinc2,postinc1
  2001  0018D2  CFDD FFE5          	movff	postdec2,postdec1
  2002                           
  2003                           ;musicas.c: 27:         strcpy(musicas[i].nome, (char*) nomes[i]);
  2004  0018D6  C00F  F001         	movff	iniciaMusica@i,___wmul@multiplier
  2005  0018DA  C010  F002         	movff	iniciaMusica@i+1,___wmul@multiplier+1
  2006  0018DE  0E00               	movlw	0
  2007  0018E0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2008  0018E2  0E13               	movlw	19
  2009  0018E4  6E03               	movwf	___wmul@multiplicand^0,c
  2010  0018E6  EC3E  F00F         	call	___wmul	;wreg free
  2011  0018EA  0E02               	movlw	low (_musicas+2)
  2012  0018EC  2401               	addwf	?___wmul^0,w,c
  2013  0018EE  6E07               	movwf	strcpy@dest^0,c
  2014  0018F0  0E01               	movlw	high (_musicas+2)
  2015  0018F2  2002               	addwfc	(?___wmul+1)^0,w,c
  2016  0018F4  6E08               	movwf	(strcpy@dest+1)^0,c
  2017  0018F6  C00F  F001         	movff	iniciaMusica@i,___wmul@multiplier
  2018  0018FA  C010  F002         	movff	iniciaMusica@i+1,___wmul@multiplier+1
  2019  0018FE  0E00               	movlw	0
  2020  001900  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2021  001902  0E11               	movlw	17
  2022  001904  6E03               	movwf	___wmul@multiplicand^0,c
  2023  001906  EC3E  F00F         	call	___wmul	;wreg free
  2024  00190A  0E00               	movlw	low _nomes
  2025  00190C  2401               	addwf	?___wmul^0,w,c
  2026  00190E  6E09               	movwf	strcpy@src^0,c
  2027  001910  0E02               	movlw	high _nomes
  2028  001912  2002               	addwfc	(?___wmul+1)^0,w,c
  2029  001914  6E0A               	movwf	(strcpy@src+1)^0,c
  2030  001916  EC1F  F00F         	call	_strcpy	;wreg free
  2031  00191A                     
  2032                           ;musicas.c: 28:     }
  2033  00191A  4A0F               	infsnz	iniciaMusica@i^0,f,c
  2034  00191C  2A10               	incf	(iniciaMusica@i+1)^0,f,c
  2035  00191E  5010               	movf	(iniciaMusica@i+1)^0,w,c
  2036  001920  E109               	bnz	u2600
  2037  001922  0E0A               	movlw	10
  2038  001924  5C0F               	subwf	iniciaMusica@i^0,w,c
  2039  001926  A0D8               	btfss	status,0,c
  2040  001928  EF98  F00C         	goto	u2601
  2041  00192C  EF9A  F00C         	goto	u2600
  2042  001930                     u2601:
  2043  001930  EF4E  F00C         	goto	l2759
  2044  001934                     u2600:
  2045  001934  0012               	return		;funcret
  2046  001936                     __end_of_iniciaMusica:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _strcpy *****************
  2050 ;; Defined at:
  2051 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  dest            2    6[COMRAM] PTR unsigned char 
  2054 ;;		 -> musicas(190), 
  2055 ;;  src             2    8[COMRAM] PTR const unsigned char 
  2056 ;;		 -> nomes(170), 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  d               2   12[COMRAM] PTR unsigned char 
  2059 ;;		 -> musicas(190), 
  2060 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2061 ;;		 -> nomes(170), 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  2    6[COMRAM] PTR unsigned char 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2071 ;;      Params:         4       0       0       0       0       0       0
  2072 ;;      Locals:         4       0       0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0
  2074 ;;      Totals:         8       0       0       0       0       0       0
  2075 ;;Total ram usage:        8 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_iniciaMusica
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text6
  2085  001E3E                     __ptext6:
  2086                           	callstack 0
  2087  001E3E                     _strcpy:
  2088                           	callstack 29
  2089  001E3E  C009  F00B         	movff	strcpy@src,strcpy@s
  2090  001E42  C00A  F00C         	movff	strcpy@src+1,strcpy@s+1
  2091  001E46  C007  F00D         	movff	strcpy@dest,strcpy@d
  2092  001E4A  C008  F00E         	movff	strcpy@dest+1,strcpy@d+1
  2093  001E4E                     l2605:
  2094  001E4E  C00B  FFD9         	movff	strcpy@s,fsr2l
  2095  001E52  C00C  FFDA         	movff	strcpy@s+1,fsr2h
  2096  001E56  4A0B               	infsnz	strcpy@s^0,f,c
  2097  001E58  2A0C               	incf	(strcpy@s+1)^0,f,c
  2098  001E5A  C00D  FFE1         	movff	strcpy@d,fsr1l
  2099  001E5E  C00E  FFE2         	movff	strcpy@d+1,fsr1h
  2100  001E62  4A0D               	infsnz	strcpy@d^0,f,c
  2101  001E64  2A0E               	incf	(strcpy@d+1)^0,f,c
  2102  001E66  CFDF FFE7          	movff	indf2,indf1
  2103  001E6A  50E7               	movf	indf1,w,c
  2104  001E6C  A4D8               	btfss	status,2,c
  2105  001E6E  EF3B  F00F         	goto	u2471
  2106  001E72  EF3D  F00F         	goto	u2470
  2107  001E76                     u2471:
  2108  001E76  EF27  F00F         	goto	l2605
  2109  001E7A                     u2470:
  2110  001E7A  0012               	return		;funcret
  2111  001E7C                     __end_of_strcpy:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _escolheMusica *****************
  2115 ;; Defined at:
  2116 ;;		line 32 in file "musicas.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2130 ;;      Params:         0       0       0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0
  2132 ;;      Temps:          2       0       0       0       0       0       0
  2133 ;;      Totals:         2       0       0       0       0       0       0
  2134 ;;Total ram usage:        2 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 5
  2137 ;; This function calls:
  2138 ;;		_atraso_ms
  2139 ;;		_kpDebounce
  2140 ;;		_kpRead
  2141 ;;		_lcdCommand
  2142 ;;		_lcdPosition
  2143 ;;		_lcdStr
  2144 ;;		_ssdDigit
  2145 ;;		_ssdUpdate
  2146 ;;		_tocaMusica
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text7
  2153  0012E8                     __ptext7:
  2154                           	callstack 0
  2155  0012E8                     _escolheMusica:
  2156                           	callstack 25
  2157  0012E8                     
  2158                           ;musicas.c: 33:     kpDebounce();
  2159  0012E8  EC0D  F008         	call	_kpDebounce	;wreg free
  2160  0012EC                     
  2161                           ;musicas.c: 34:     tecla = kpRead();
  2162  0012EC  EC90  F00F         	call	_kpRead	;wreg free
  2163  0012F0  5001               	movf	?_kpRead^0,w,c
  2164  0012F2  6E7F               	movwf	_tecla^0,c
  2165  0012F4                     
  2166                           ;musicas.c: 35:     ssdUpdate();
  2167  0012F4  ECCC  F008         	call	_ssdUpdate	;wreg free
  2168  0012F8                     
  2169                           ;musicas.c: 36:     if (((tecla) & (1<<(3))) || ((tecla) & (1<<(7)))) {
  2170  0012F8  B67F               	btfsc	_tecla^0,3,c
  2171  0012FA  EF81  F009         	goto	u2611
  2172  0012FE  EF83  F009         	goto	u2610
  2173  001302                     u2611:
  2174  001302  EF8A  F009         	goto	l2779
  2175  001306                     u2610:
  2176  001306  AE7F               	btfss	_tecla^0,7,c
  2177  001308  EF88  F009         	goto	u2621
  2178  00130C  EF8A  F009         	goto	u2620
  2179  001310                     u2621:
  2180  001310  EF13  F00A         	goto	l388
  2181  001314                     u2620:
  2182  001314                     l2779:
  2183                           
  2184                           ;musicas.c: 37:         flag = 1;
  2185  001314  0E01               	movlw	1
  2186  001316  6E74               	movwf	_flag^0,c
  2187  001318                     l2781:
  2188                           
  2189                           ;musicas.c: 39:             ssdUpdate();
  2190  001318  ECCC  F008         	call	_ssdUpdate	;wreg free
  2191  00131C                     
  2192                           ;musicas.c: 40:             kpDebounce();
  2193  00131C  EC0D  F008         	call	_kpDebounce	;wreg free
  2194  001320                     
  2195                           ;musicas.c: 41:             atraso_ms(10);
  2196  001320  0E00               	movlw	0
  2197  001322  6E02               	movwf	(atraso_ms@t+1)^0,c
  2198  001324  0E0A               	movlw	10
  2199  001326  6E01               	movwf	atraso_ms@t^0,c
  2200  001328  EC3F  F00E         	call	_atraso_ms	;wreg free
  2201  00132C                     
  2202                           ;musicas.c: 42:             if ((kpRead() != tecla) || flag == 1) {
  2203  00132C  507F               	movf	_tecla^0,w,c
  2204  00132E  6E16               	movwf	??_escolheMusica^0,c
  2205  001330  6A17               	clrf	(??_escolheMusica+1)^0,c
  2206  001332  EC90  F00F         	call	_kpRead	;wreg free
  2207  001336  5016               	movf	??_escolheMusica^0,w,c
  2208  001338  1801               	xorwf	?_kpRead^0,w,c
  2209  00133A  E107               	bnz	u2631
  2210  00133C  5017               	movf	(??_escolheMusica+1)^0,w,c
  2211  00133E  1802               	xorwf	(?_kpRead+1)^0,w,c
  2212  001340  A4D8               	btfss	status,2,c
  2213  001342  EFA5  F009         	goto	u2631
  2214  001346  EFA7  F009         	goto	u2630
  2215  00134A                     u2631:
  2216  00134A  EFAF  F009         	goto	l2791
  2217  00134E                     u2630:
  2218  00134E  0474               	decf	_flag^0,w,c
  2219  001350  A4D8               	btfss	status,2,c
  2220  001352  EFAD  F009         	goto	u2641
  2221  001356  EFAF  F009         	goto	u2640
  2222  00135A                     u2641:
  2223  00135A  EF8C  F009         	goto	l2781
  2224  00135E                     u2640:
  2225  00135E                     l2791:
  2226                           
  2227                           ;musicas.c: 43:                 tecla = kpRead();
  2228  00135E  EC90  F00F         	call	_kpRead	;wreg free
  2229  001362  5001               	movf	?_kpRead^0,w,c
  2230  001364  6E7F               	movwf	_tecla^0,c
  2231  001366                     
  2232                           ;musicas.c: 44:                 if (((tecla) & (1<<(3)))) {
  2233  001366  A67F               	btfss	_tecla^0,3,c
  2234  001368  EFB8  F009         	goto	u2651
  2235  00136C  EFBA  F009         	goto	u2650
  2236  001370                     u2651:
  2237  001370  EFC9  F009         	goto	l378
  2238  001374                     u2650:
  2239  001374                     
  2240                           ;musicas.c: 45:                     if (indice == 0) {
  2241  001374  5075               	movf	_indice^0,w,c
  2242  001376  A4D8               	btfss	status,2,c
  2243  001378  EFC0  F009         	goto	u2661
  2244  00137C  EFC2  F009         	goto	u2660
  2245  001380                     u2661:
  2246  001380  EFC6  F009         	goto	l2799
  2247  001384                     u2660:
  2248  001384                     
  2249                           ;musicas.c: 46:                         indice = 9;
  2250  001384  0E09               	movlw	9
  2251  001386  6E75               	movwf	_indice^0,c
  2252                           
  2253                           ;musicas.c: 47:                     } else {
  2254  001388  EFEB  F009         	goto	l2809
  2255  00138C                     l2799:
  2256                           
  2257                           ;musicas.c: 48:                         indice -= 1;
  2258  00138C  0675               	decf	_indice^0,f,c
  2259  00138E  EFEB  F009         	goto	l2809
  2260  001392                     l378:
  2261  001392  AE7F               	btfss	_tecla^0,7,c
  2262  001394  EFCE  F009         	goto	u2671
  2263  001398  EFD0  F009         	goto	u2670
  2264  00139C                     u2671:
  2265  00139C  EFE0  F009         	goto	l382
  2266  0013A0                     u2670:
  2267  0013A0                     
  2268                           ;musicas.c: 51:                     if (indice == 9) {
  2269  0013A0  0E09               	movlw	9
  2270  0013A2  1875               	xorwf	_indice^0,w,c
  2271  0013A4  A4D8               	btfss	status,2,c
  2272  0013A6  EFD7  F009         	goto	u2681
  2273  0013AA  EFD9  F009         	goto	u2680
  2274  0013AE                     u2681:
  2275  0013AE  EFDD  F009         	goto	l2805
  2276  0013B2                     u2680:
  2277  0013B2                     
  2278                           ;musicas.c: 52:                         indice = 0;
  2279  0013B2  0E00               	movlw	0
  2280  0013B4  6E75               	movwf	_indice^0,c
  2281                           
  2282                           ;musicas.c: 53:                     } else {
  2283  0013B6  EFEB  F009         	goto	l2809
  2284  0013BA                     l2805:
  2285                           
  2286                           ;musicas.c: 54:                         indice += 1;
  2287  0013BA  2A75               	incf	_indice^0,f,c
  2288  0013BC  EFEB  F009         	goto	l2809
  2289  0013C0                     l382:
  2290  0013C0  A07F               	btfss	_tecla^0,0,c
  2291  0013C2  EFE5  F009         	goto	u2691
  2292  0013C6  EFE7  F009         	goto	u2690
  2293  0013CA                     u2691:
  2294  0013CA  EFEB  F009         	goto	l2809
  2295  0013CE                     u2690:
  2296  0013CE                     
  2297                           ;musicas.c: 57:                     flag = 0;
  2298  0013CE  0E00               	movlw	0
  2299  0013D0  6E74               	movwf	_flag^0,c
  2300                           
  2301                           ;musicas.c: 58:                     break;
  2302  0013D2  EF11  F00A         	goto	l2821
  2303  0013D6                     l2809:
  2304                           
  2305                           ;musicas.c: 60:                 lcdCommand(0x01);
  2306  0013D6  0E01               	movlw	1
  2307  0013D8  ECE1  F00C         	call	_lcdCommand
  2308                           
  2309                           ;musicas.c: 61:                 lcdPosition(1, 0);
  2310  0013DC  0E00               	movlw	0
  2311  0013DE  6E09               	movwf	lcdPosition@coluna^0,c
  2312  0013E0  0E01               	movlw	1
  2313  0013E2  EC71  F00E         	call	_lcdPosition
  2314  0013E6                     
  2315                           ;musicas.c: 62:                 lcdStr("<-(1) (*)  (2)->");
  2316  0013E6  0E11               	movlw	low STR_4
  2317  0013E8  6E09               	movwf	lcdStr@str^0,c
  2318  0013EA  0E06               	movlw	high STR_4
  2319  0013EC  6E0A               	movwf	(lcdStr@str+1)^0,c
  2320  0013EE  EC5C  F00D         	call	_lcdStr	;wreg free
  2321  0013F2                     
  2322                           ;musicas.c: 63:                 lcdPosition(0, 0);
  2323  0013F2  0E00               	movlw	0
  2324  0013F4  6E09               	movwf	lcdPosition@coluna^0,c
  2325  0013F6  0E00               	movlw	0
  2326  0013F8  EC71  F00E         	call	_lcdPosition
  2327  0013FC                     
  2328                           ;musicas.c: 64:                 lcdStr(musicas[indice].nome);
  2329  0013FC  5075               	movf	_indice^0,w,c
  2330  0013FE  0D13               	mullw	19
  2331  001400  0E02               	movlw	low (_musicas+2)
  2332  001402  24F3               	addwf	243,w,c
  2333  001404  6E09               	movwf	lcdStr@str^0,c
  2334  001406  0E01               	movlw	high (_musicas+2)
  2335  001408  20F4               	addwfc	prodh,w,c
  2336  00140A  6E0A               	movwf	(lcdStr@str+1)^0,c
  2337  00140C  EC5C  F00D         	call	_lcdStr	;wreg free
  2338  001410                     
  2339                           ;musicas.c: 65:                 ssdDigit(indice, 3);
  2340  001410  0E03               	movlw	3
  2341  001412  6E01               	movwf	ssdDigit@pos^0,c
  2342  001414  5075               	movf	_indice^0,w,c
  2343  001416  EC9E  F00E         	call	_ssdDigit
  2344  00141A                     
  2345                           ;musicas.c: 66:                 flag = 0;
  2346  00141A  0E00               	movlw	0
  2347  00141C  6E74               	movwf	_flag^0,c
  2348  00141E  EF8C  F009         	goto	l2781
  2349  001422                     l2821:
  2350                           
  2351                           ;musicas.c: 69:         tocaMusica();
  2352  001422  EC28  F003         	call	_tocaMusica	;wreg free
  2353  001426                     l388:
  2354  001426  0012               	return		;funcret
  2355  001428                     __end_of_escolheMusica:
  2356                           	callstack 0
  2357                           
  2358 ;; *************** function _tocaMusica *****************
  2359 ;; Defined at:
  2360 ;;		line 73 in file "musicas.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  j               1   20[COMRAM] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2374 ;;      Params:         0       0       0       0       0       0       0
  2375 ;;      Locals:         5       0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0
  2377 ;;      Totals:         5       0       0       0       0       0       0
  2378 ;;Total ram usage:        5 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 4
  2381 ;; This function calls:
  2382 ;;		___awdiv
  2383 ;;		___awmod
  2384 ;;		_alterarVolume
  2385 ;;		_atraso_ms
  2386 ;;		_kpDebounce
  2387 ;;		_kpRead
  2388 ;;		_lcdCommand
  2389 ;;		_lcdPosition
  2390 ;;		_lcdStr
  2391 ;;		_pwmInit
  2392 ;;		_pwmSet
  2393 ;;		_ssdDigit
  2394 ;;		_ssdUpdate
  2395 ;; This function is called by:
  2396 ;;		_escolheMusica
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text8
  2401  000650                     __ptext8:
  2402                           	callstack 0
  2403  000650                     _tocaMusica:
  2404                           	callstack 25
  2405  000650                     
  2406                           ;musicas.c: 74:     pwmInit();
  2407  000650  EC72  F00F         	call	_pwmInit	;wreg free
  2408                           
  2409                           ;musicas.c: 75:     lcdCommand(0x01);
  2410  000654  0E01               	movlw	1
  2411  000656  ECE1  F00C         	call	_lcdCommand
  2412                           
  2413                           ;musicas.c: 76:     lcdPosition(0, 0);
  2414  00065A  0E00               	movlw	0
  2415  00065C  6E09               	movwf	lcdPosition@coluna^0,c
  2416  00065E  0E00               	movlw	0
  2417  000660  EC71  F00E         	call	_lcdPosition
  2418  000664                     
  2419                           ;musicas.c: 77:     lcdStr(musicas[indice].nome);
  2420  000664  5075               	movf	_indice^0,w,c
  2421  000666  0D13               	mullw	19
  2422  000668  0E02               	movlw	low (_musicas+2)
  2423  00066A  24F3               	addwf	243,w,c
  2424  00066C  6E09               	movwf	lcdStr@str^0,c
  2425  00066E  0E01               	movlw	high (_musicas+2)
  2426  000670  20F4               	addwfc	prodh,w,c
  2427  000672  6E0A               	movwf	(lcdStr@str+1)^0,c
  2428  000674  EC5C  F00D         	call	_lcdStr	;wreg free
  2429  000678                     
  2430                           ;musicas.c: 78:     lcdPosition(1, 0);
  2431  000678  0E00               	movlw	0
  2432  00067A  6E09               	movwf	lcdPosition@coluna^0,c
  2433  00067C  0E01               	movlw	1
  2434  00067E  EC71  F00E         	call	_lcdPosition
  2435  000682                     
  2436                           ;musicas.c: 79:     lcdStr("-(1)  (*)  (2)+");
  2437  000682  0E33               	movlw	low STR_6
  2438  000684  6E09               	movwf	lcdStr@str^0,c
  2439  000686  0E06               	movlw	high STR_6
  2440  000688  6E0A               	movwf	(lcdStr@str+1)^0,c
  2441  00068A  EC5C  F00D         	call	_lcdStr	;wreg free
  2442  00068E                     
  2443                           ;musicas.c: 81:     tempo = musicas[indice].duracao;
  2444  00068E  5075               	movf	_indice^0,w,c
  2445  000690  0D13               	mullw	19
  2446  000692  0E00               	movlw	low _musicas
  2447  000694  24F3               	addwf	243,w,c
  2448  000696  6ED9               	movwf	fsr2l,c
  2449  000698  0E01               	movlw	high _musicas
  2450  00069A  20F4               	addwfc	prodh,w,c
  2451  00069C  6EDA               	movwf	fsr2h,c
  2452  00069E  50DF               	movf	indf2,w,c
  2453  0006A0  6E73               	movwf	_tempo^0,c
  2454  0006A2                     
  2455                           ;musicas.c: 82:     pwmSet(100);
  2456  0006A2  0E64               	movlw	100
  2457  0006A4  EC09  F00E         	call	_pwmSet
  2458                           
  2459                           ;musicas.c: 83:     while (tempo != 0) {
  2460  0006A8  EF80  F004         	goto	l2703
  2461  0006AC                     l2619:
  2462                           
  2463                           ;musicas.c: 85:         minuto1 = (tempo / 60) % 10;
  2464  0006AC  0E00               	movlw	0
  2465  0006AE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2466  0006B0  0E3C               	movlw	60
  2467  0006B2  6E03               	movwf	___awdiv@divisor^0,c
  2468  0006B4  C073  F001         	movff	_tempo,___awdiv@dividend
  2469  0006B8  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2470  0006BA  EC39  F00B         	call	___awdiv	;wreg free
  2471  0006BE  C001  F009         	movff	?___awdiv,___awmod@dividend
  2472  0006C2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2473  0006C6  0E00               	movlw	0
  2474  0006C8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2475  0006CA  0E0A               	movlw	10
  2476  0006CC  6E0B               	movwf	___awmod@divisor^0,c
  2477  0006CE  EC9B  F00B         	call	___awmod	;wreg free
  2478  0006D2  5009               	movf	?___awmod^0,w,c
  2479  0006D4  6E72               	movwf	_minuto1^0,c
  2480                           
  2481                           ;musicas.c: 86:         minuto2 = (tempo / 60) / 10;
  2482  0006D6  0E00               	movlw	0
  2483  0006D8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2484  0006DA  0E3C               	movlw	60
  2485  0006DC  6E03               	movwf	___awdiv@divisor^0,c
  2486  0006DE  C073  F001         	movff	_tempo,___awdiv@dividend
  2487  0006E2  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2488  0006E4  EC39  F00B         	call	___awdiv	;wreg free
  2489  0006E8  C001  F011         	movff	?___awdiv,_tocaMusica$989
  2490  0006EC  C002  F012         	movff	?___awdiv+1,_tocaMusica$989+1
  2491                           
  2492                           ;musicas.c: 86:         minuto2 = (tempo / 60) / 10;
  2493  0006F0  C011  F001         	movff	_tocaMusica$989,___awdiv@dividend
  2494  0006F4  C012  F002         	movff	_tocaMusica$989+1,___awdiv@dividend+1
  2495  0006F8  0E00               	movlw	0
  2496  0006FA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2497  0006FC  0E0A               	movlw	10
  2498  0006FE  6E03               	movwf	___awdiv@divisor^0,c
  2499  000700  EC39  F00B         	call	___awdiv	;wreg free
  2500  000704  5001               	movf	?___awdiv^0,w,c
  2501  000706  6E71               	movwf	_minuto2^0,c
  2502                           
  2503                           ;musicas.c: 87:         segundo1 = (tempo % 60) % 10;
  2504  000708  0E00               	movlw	0
  2505  00070A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2506  00070C  0E3C               	movlw	60
  2507  00070E  6E0B               	movwf	___awmod@divisor^0,c
  2508  000710  C073  F009         	movff	_tempo,___awmod@dividend
  2509  000714  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2510  000716  EC9B  F00B         	call	___awmod	;wreg free
  2511  00071A  C009  F013         	movff	?___awmod,_tocaMusica$990
  2512  00071E  C00A  F014         	movff	?___awmod+1,_tocaMusica$990+1
  2513                           
  2514                           ;musicas.c: 87:         segundo1 = (tempo % 60) % 10;
  2515  000722  C013  F009         	movff	_tocaMusica$990,___awmod@dividend
  2516  000726  C014  F00A         	movff	_tocaMusica$990+1,___awmod@dividend+1
  2517  00072A  0E00               	movlw	0
  2518  00072C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2519  00072E  0E0A               	movlw	10
  2520  000730  6E0B               	movwf	___awmod@divisor^0,c
  2521  000732  EC9B  F00B         	call	___awmod	;wreg free
  2522  000736  5009               	movf	?___awmod^0,w,c
  2523  000738  6E70               	movwf	_segundo1^0,c
  2524                           
  2525                           ;musicas.c: 88:         segundo2 = (tempo % 60) / 10;
  2526  00073A  0E00               	movlw	0
  2527  00073C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2528  00073E  0E3C               	movlw	60
  2529  000740  6E0B               	movwf	___awmod@divisor^0,c
  2530  000742  C073  F009         	movff	_tempo,___awmod@dividend
  2531  000746  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2532  000748  EC9B  F00B         	call	___awmod	;wreg free
  2533  00074C  C009  F001         	movff	?___awmod,___awdiv@dividend
  2534  000750  C00A  F002         	movff	?___awmod+1,___awdiv@dividend+1
  2535  000754  0E00               	movlw	0
  2536  000756  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2537  000758  0E0A               	movlw	10
  2538  00075A  6E03               	movwf	___awdiv@divisor^0,c
  2539  00075C  EC39  F00B         	call	___awdiv	;wreg free
  2540  000760  5001               	movf	?___awdiv^0,w,c
  2541  000762  6E6F               	movwf	_segundo2^0,c
  2542                           
  2543                           ;musicas.c: 90:         ssdDigit(minuto2, 0);
  2544  000764  0E00               	movlw	0
  2545  000766  6E01               	movwf	ssdDigit@pos^0,c
  2546  000768  5071               	movf	_minuto2^0,w,c
  2547  00076A  EC9E  F00E         	call	_ssdDigit
  2548                           
  2549                           ;musicas.c: 91:         ssdDigit(minuto1, 1);
  2550  00076E  0E01               	movlw	1
  2551  000770  6E01               	movwf	ssdDigit@pos^0,c
  2552  000772  5072               	movf	_minuto1^0,w,c
  2553  000774  EC9E  F00E         	call	_ssdDigit
  2554                           
  2555                           ;musicas.c: 92:         ssdDigit(segundo2, 2);
  2556  000778  0E02               	movlw	2
  2557  00077A  6E01               	movwf	ssdDigit@pos^0,c
  2558  00077C  506F               	movf	_segundo2^0,w,c
  2559  00077E  EC9E  F00E         	call	_ssdDigit
  2560                           
  2561                           ;musicas.c: 93:         ssdDigit(segundo1, 3);
  2562  000782  0E03               	movlw	3
  2563  000784  6E01               	movwf	ssdDigit@pos^0,c
  2564  000786  5070               	movf	_segundo1^0,w,c
  2565  000788  EC9E  F00E         	call	_ssdDigit
  2566  00078C                     
  2567                           ;musicas.c: 95:         for (unsigned char j = 0; j < 100; j++) {
  2568  00078C  0E00               	movlw	0
  2569  00078E  6E15               	movwf	tocaMusica@j^0,c
  2570  000790                     l2627:
  2571                           
  2572                           ;musicas.c: 96:             ssdUpdate();
  2573  000790  ECCC  F008         	call	_ssdUpdate	;wreg free
  2574  000794                     
  2575                           ;musicas.c: 97:             atraso_ms(10);
  2576  000794  0E00               	movlw	0
  2577  000796  6E02               	movwf	(atraso_ms@t+1)^0,c
  2578  000798  0E0A               	movlw	10
  2579  00079A  6E01               	movwf	atraso_ms@t^0,c
  2580  00079C  EC3F  F00E         	call	_atraso_ms	;wreg free
  2581  0007A0                     
  2582                           ;musicas.c: 98:             kpDebounce();
  2583  0007A0  EC0D  F008         	call	_kpDebounce	;wreg free
  2584  0007A4                     
  2585                           ;musicas.c: 99:             tecla = kpRead();
  2586  0007A4  EC90  F00F         	call	_kpRead	;wreg free
  2587  0007A8  5001               	movf	?_kpRead^0,w,c
  2588  0007AA  6E7F               	movwf	_tecla^0,c
  2589  0007AC                     
  2590                           ;musicas.c: 100:             if (((tecla) & (1<<(3)))) {
  2591  0007AC  A67F               	btfss	_tecla^0,3,c
  2592  0007AE  EFDB  F003         	goto	u2481
  2593  0007B2  EFDD  F003         	goto	u2480
  2594  0007B6                     u2481:
  2595  0007B6  EFF3  F003         	goto	l395
  2596  0007BA                     u2480:
  2597  0007BA  EFE7  F003         	goto	l2645
  2598  0007BE                     l2639:
  2599                           
  2600                           ;musicas.c: 102:                     ssdUpdate();
  2601  0007BE  ECCC  F008         	call	_ssdUpdate	;wreg free
  2602  0007C2                     
  2603                           ;musicas.c: 103:                     kpDebounce();
  2604  0007C2  EC0D  F008         	call	_kpDebounce	;wreg free
  2605  0007C6                     
  2606                           ;musicas.c: 104:                     tecla = kpRead();
  2607  0007C6  EC90  F00F         	call	_kpRead	;wreg free
  2608  0007CA  5001               	movf	?_kpRead^0,w,c
  2609  0007CC  6E7F               	movwf	_tecla^0,c
  2610  0007CE                     l2645:
  2611                           
  2612                           ;musicas.c: 101:                 while(((tecla) & (1<<(3)))) {
  2613  0007CE  B67F               	btfsc	_tecla^0,3,c
  2614  0007D0  EFEC  F003         	goto	u2491
  2615  0007D4  EFEE  F003         	goto	u2490
  2616  0007D8                     u2491:
  2617  0007D8  EFDF  F003         	goto	l2639
  2618  0007DC                     u2490:
  2619  0007DC                     
  2620                           ;musicas.c: 106:                 alterarVolume(0);
  2621  0007DC  0E00               	movlw	0
  2622  0007DE  EC14  F00A         	call	_alterarVolume
  2623                           
  2624                           ;musicas.c: 107:             }
  2625  0007E2  EF66  F004         	goto	l2691
  2626  0007E6                     l395:
  2627  0007E6  AE7F               	btfss	_tecla^0,7,c
  2628  0007E8  EFF8  F003         	goto	u2501
  2629  0007EC  EFFA  F003         	goto	u2500
  2630  0007F0                     u2501:
  2631  0007F0  EF10  F004         	goto	l400
  2632  0007F4                     u2500:
  2633  0007F4  EF04  F004         	goto	l2657
  2634  0007F8                     l2651:
  2635                           
  2636                           ;musicas.c: 110:                     ssdUpdate();
  2637  0007F8  ECCC  F008         	call	_ssdUpdate	;wreg free
  2638  0007FC                     
  2639                           ;musicas.c: 111:                     kpDebounce();
  2640  0007FC  EC0D  F008         	call	_kpDebounce	;wreg free
  2641  000800                     
  2642                           ;musicas.c: 112:                     tecla = kpRead();
  2643  000800  EC90  F00F         	call	_kpRead	;wreg free
  2644  000804  5001               	movf	?_kpRead^0,w,c
  2645  000806  6E7F               	movwf	_tecla^0,c
  2646  000808                     l2657:
  2647                           
  2648                           ;musicas.c: 109:                 while(((tecla) & (1<<(7)))) {
  2649  000808  BE7F               	btfsc	_tecla^0,7,c
  2650  00080A  EF09  F004         	goto	u2511
  2651  00080E  EF0B  F004         	goto	u2510
  2652  000812                     u2511:
  2653  000812  EFFC  F003         	goto	l2651
  2654  000816                     u2510:
  2655  000816                     
  2656                           ;musicas.c: 114:                 alterarVolume(1);
  2657  000816  0E01               	movlw	1
  2658  000818  EC14  F00A         	call	_alterarVolume
  2659                           
  2660                           ;musicas.c: 115:             }
  2661  00081C  EF66  F004         	goto	l2691
  2662  000820                     l400:
  2663  000820  A07F               	btfss	_tecla^0,0,c
  2664  000822  EF15  F004         	goto	u2521
  2665  000826  EF17  F004         	goto	u2520
  2666  00082A                     u2521:
  2667  00082A  EF38  F004         	goto	l405
  2668  00082E                     u2520:
  2669  00082E  EF21  F004         	goto	l2669
  2670  000832                     l2663:
  2671                           
  2672                           ;musicas.c: 118:                     ssdUpdate();
  2673  000832  ECCC  F008         	call	_ssdUpdate	;wreg free
  2674  000836                     
  2675                           ;musicas.c: 119:                     kpDebounce();
  2676  000836  EC0D  F008         	call	_kpDebounce	;wreg free
  2677  00083A                     
  2678                           ;musicas.c: 120:                     tecla = kpRead();
  2679  00083A  EC90  F00F         	call	_kpRead	;wreg free
  2680  00083E  5001               	movf	?_kpRead^0,w,c
  2681  000840  6E7F               	movwf	_tecla^0,c
  2682  000842                     l2669:
  2683                           
  2684                           ;musicas.c: 117:                 while(((tecla) & (1<<(0)))) {
  2685  000842  B07F               	btfsc	_tecla^0,0,c
  2686  000844  EF26  F004         	goto	u2531
  2687  000848  EF28  F004         	goto	u2530
  2688  00084C                     u2531:
  2689  00084C  EF19  F004         	goto	l2663
  2690  000850                     u2530:
  2691  000850                     
  2692                           ;musicas.c: 122:                 if (pause == 0) {pause = 1;} else {pause = 0;}
  2693  000850  507E               	movf	_pause^0,w,c
  2694  000852  A4D8               	btfss	status,2,c
  2695  000854  EF2E  F004         	goto	u2541
  2696  000858  EF30  F004         	goto	u2540
  2697  00085C                     u2541:
  2698  00085C  EF34  F004         	goto	l2675
  2699  000860                     u2540:
  2700  000860  0E01               	movlw	1
  2701  000862  6E7E               	movwf	_pause^0,c
  2702  000864  EF66  F004         	goto	l2691
  2703  000868                     l2675:
  2704  000868  0E00               	movlw	0
  2705  00086A  6E7E               	movwf	_pause^0,c
  2706  00086C  EF66  F004         	goto	l2691
  2707  000870                     l405:
  2708  000870  A87F               	btfss	_tecla^0,4,c
  2709  000872  EF3D  F004         	goto	u2551
  2710  000876  EF3F  F004         	goto	u2550
  2711  00087A                     u2551:
  2712  00087A  EF66  F004         	goto	l404
  2713  00087E                     u2550:
  2714  00087E  EF49  F004         	goto	l2685
  2715  000882                     l2679:
  2716                           
  2717                           ;musicas.c: 126:                     ssdUpdate();
  2718  000882  ECCC  F008         	call	_ssdUpdate	;wreg free
  2719  000886                     
  2720                           ;musicas.c: 127:                     kpDebounce();
  2721  000886  EC0D  F008         	call	_kpDebounce	;wreg free
  2722  00088A                     
  2723                           ;musicas.c: 128:                     tecla = kpRead();
  2724  00088A  EC90  F00F         	call	_kpRead	;wreg free
  2725  00088E  5001               	movf	?_kpRead^0,w,c
  2726  000890  6E7F               	movwf	_tecla^0,c
  2727  000892                     l2685:
  2728                           
  2729                           ;musicas.c: 125:                 while(((tecla) & (1<<(4)))) {
  2730  000892  B87F               	btfsc	_tecla^0,4,c
  2731  000894  EF4E  F004         	goto	u2561
  2732  000898  EF50  F004         	goto	u2560
  2733  00089C                     u2561:
  2734  00089C  EF41  F004         	goto	l2679
  2735  0008A0                     u2560:
  2736  0008A0                     
  2737                           ;musicas.c: 130:                 ssdDigit(0, 0);
  2738  0008A0  0E00               	movlw	0
  2739  0008A2  6E01               	movwf	ssdDigit@pos^0,c
  2740  0008A4  0E00               	movlw	0
  2741  0008A6  EC9E  F00E         	call	_ssdDigit
  2742                           
  2743                           ;musicas.c: 131:                 ssdDigit(0, 1);
  2744  0008AA  0E01               	movlw	1
  2745  0008AC  6E01               	movwf	ssdDigit@pos^0,c
  2746  0008AE  0E00               	movlw	0
  2747  0008B0  EC9E  F00E         	call	_ssdDigit
  2748                           
  2749                           ;musicas.c: 132:                 ssdDigit(0, 2);
  2750  0008B4  0E02               	movlw	2
  2751  0008B6  6E01               	movwf	ssdDigit@pos^0,c
  2752  0008B8  0E00               	movlw	0
  2753  0008BA  EC9E  F00E         	call	_ssdDigit
  2754                           
  2755                           ;musicas.c: 133:                 ssdDigit(0, 3);
  2756  0008BE  0E03               	movlw	3
  2757  0008C0  6E01               	movwf	ssdDigit@pos^0,c
  2758  0008C2  0E00               	movlw	0
  2759  0008C4  EC9E  F00E         	call	_ssdDigit
  2760  0008C8  EF95  F004         	goto	l416
  2761  0008CC                     l404:
  2762  0008CC                     l2691:
  2763                           
  2764                           ;musicas.c: 136:         }
  2765  0008CC  2A15               	incf	tocaMusica@j^0,f,c
  2766  0008CE  0E63               	movlw	99
  2767  0008D0  6415               	cpfsgt	tocaMusica@j^0,c
  2768  0008D2  EF6D  F004         	goto	u2571
  2769  0008D6  EF6F  F004         	goto	u2570
  2770  0008DA                     u2571:
  2771  0008DA  EFC8  F003         	goto	l2627
  2772  0008DE                     u2570:
  2773  0008DE                     
  2774                           ;musicas.c: 137:         if (pause == 0) {
  2775  0008DE  507E               	movf	_pause^0,w,c
  2776  0008E0  A4D8               	btfss	status,2,c
  2777  0008E2  EF75  F004         	goto	u2581
  2778  0008E6  EF77  F004         	goto	u2580
  2779  0008EA                     u2581:
  2780  0008EA  EF7D  F004         	goto	l2701
  2781  0008EE                     u2580:
  2782  0008EE                     
  2783                           ;musicas.c: 138:             tempo -= 1;
  2784  0008EE  0673               	decf	_tempo^0,f,c
  2785  0008F0                     
  2786                           ;musicas.c: 139:             pwmSet(100);
  2787  0008F0  0E64               	movlw	100
  2788  0008F2  EC09  F00E         	call	_pwmSet
  2789                           
  2790                           ;musicas.c: 140:         } else {
  2791  0008F6  EF80  F004         	goto	l2703
  2792  0008FA                     l2701:
  2793                           
  2794                           ;musicas.c: 141:             pwmSet(0);
  2795  0008FA  0E00               	movlw	0
  2796  0008FC  EC09  F00E         	call	_pwmSet
  2797  000900                     l2703:
  2798                           
  2799                           ;musicas.c: 83:     while (tempo != 0) {
  2800  000900  5073               	movf	_tempo^0,w,c
  2801  000902  A4D8               	btfss	status,2,c
  2802  000904  EF86  F004         	goto	u2591
  2803  000908  EF88  F004         	goto	u2590
  2804  00090C                     u2591:
  2805  00090C  EF56  F003         	goto	l2619
  2806  000910                     u2590:
  2807  000910                     
  2808                           ;musicas.c: 144:     TRISA=0x00;
  2809  000910  0E00               	movlw	0
  2810  000912  6E92               	movwf	146,c	;volatile
  2811  000914                     
  2812                           ;musicas.c: 145:     pwmSet(0);
  2813  000914  0E00               	movlw	0
  2814  000916  EC09  F00E         	call	_pwmSet
  2815  00091A                     
  2816                           ;musicas.c: 146:     ((TRISC) |= (1<<(1)));
  2817  00091A  8294               	bsf	148,1,c	;volatile
  2818  00091C                     
  2819                           ;musicas.c: 147:     atraso_ms(500);
  2820  00091C  0E01               	movlw	1
  2821  00091E  6E02               	movwf	(atraso_ms@t+1)^0,c
  2822  000920  0EF4               	movlw	244
  2823  000922  6E01               	movwf	atraso_ms@t^0,c
  2824  000924  EC3F  F00E         	call	_atraso_ms	;wreg free
  2825  000928                     
  2826                           ;musicas.c: 148:     ((TRISC) &= ~(1<<(1)));
  2827  000928  9294               	bcf	148,1,c	;volatile
  2828  00092A                     l416:
  2829  00092A  0012               	return		;funcret
  2830  00092C                     __end_of_tocaMusica:
  2831                           	callstack 0
  2832                           
  2833 ;; *************** function _ssdUpdate *****************
  2834 ;; Defined at:
  2835 ;;		line 54 in file "ssd.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2849 ;;      Params:         0       0       0       0       0       0       0
  2850 ;;      Locals:         0       0       0       0       0       0       0
  2851 ;;      Temps:          2       0       0       0       0       0       0
  2852 ;;      Totals:         2       0       0       0       0       0       0
  2853 ;;Total ram usage:        2 bytes
  2854 ;; Hardware stack levels used: 1
  2855 ;; Hardware stack levels required when called: 1
  2856 ;; This function calls:
  2857 ;;		_digitalWrite
  2858 ;; This function is called by:
  2859 ;;		_escolheMusica
  2860 ;;		_tocaMusica
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text9
  2865  001198                     __ptext9:
  2866                           	callstack 0
  2867  001198                     _ssdUpdate:
  2868                           	callstack 27
  2869  001198                     
  2870                           ;ssd.c: 58:     TRISD= 0x00;
  2871  001198  0E00               	movlw	0
  2872  00119A  6E95               	movwf	149,c	;volatile
  2873  00119C                     
  2874                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2875  00119C  0E00               	movlw	0
  2876  00119E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2877  0011A0  0E02               	movlw	2
  2878  0011A2  6E01               	movwf	digitalWrite@pin^0,c
  2879  0011A4  0E00               	movlw	0
  2880  0011A6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2881  0011A8  0E00               	movlw	0
  2882  0011AA  6E03               	movwf	digitalWrite@value^0,c
  2883  0011AC  ECE6  F006         	call	_digitalWrite	;wreg free
  2884  0011B0                     
  2885                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2886  0011B0  0E00               	movlw	0
  2887  0011B2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2888  0011B4  0E03               	movlw	3
  2889  0011B6  6E01               	movwf	digitalWrite@pin^0,c
  2890  0011B8  0E00               	movlw	0
  2891  0011BA  6E04               	movwf	(digitalWrite@value+1)^0,c
  2892  0011BC  0E00               	movlw	0
  2893  0011BE  6E03               	movwf	digitalWrite@value^0,c
  2894  0011C0  ECE6  F006         	call	_digitalWrite	;wreg free
  2895  0011C4                     
  2896                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2897  0011C4  0E00               	movlw	0
  2898  0011C6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2899  0011C8  0E04               	movlw	4
  2900  0011CA  6E01               	movwf	digitalWrite@pin^0,c
  2901  0011CC  0E00               	movlw	0
  2902  0011CE  6E04               	movwf	(digitalWrite@value+1)^0,c
  2903  0011D0  0E00               	movlw	0
  2904  0011D2  6E03               	movwf	digitalWrite@value^0,c
  2905  0011D4  ECE6  F006         	call	_digitalWrite	;wreg free
  2906  0011D8                     
  2907                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2908  0011D8  0E00               	movlw	0
  2909  0011DA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2910  0011DC  0E05               	movlw	5
  2911  0011DE  6E01               	movwf	digitalWrite@pin^0,c
  2912  0011E0  0E00               	movlw	0
  2913  0011E2  6E04               	movwf	(digitalWrite@value+1)^0,c
  2914  0011E4  0E00               	movlw	0
  2915  0011E6  6E03               	movwf	digitalWrite@value^0,c
  2916  0011E8  ECE6  F006         	call	_digitalWrite	;wreg free
  2917                           
  2918                           ;ssd.c: 66:     PORTD = 0x00;
  2919  0011EC  0E00               	movlw	0
  2920  0011EE  6E83               	movwf	131,c	;volatile
  2921                           
  2922                           ;ssd.c: 69:     switch (display)
  2923  0011F0  EF56  F009         	goto	l2421
  2924  0011F4                     l2393:
  2925                           
  2926                           ;ssd.c: 72:             PORTD = valor[v0];
  2927  0011F4  0E01               	movlw	low _valor@ssd$F238
  2928  0011F6  2479               	addwf	_v0^0,w,c
  2929  0011F8  6EF6               	movwf	tblptrl,c
  2930  0011FA  6AF7               	clrf	tblptrh,c
  2931  0011FC  0E06               	movlw	high _valor@ssd$F238
  2932  0011FE  22F7               	addwfc	tblptrh,f,c
  2933  001200                     	if	0	;There are less than 3 active tblptr bytes
  2934  001200                     	endif
  2935  001200  0008               	tblrd		*
  2936  001202  CFF5 FF83          	movff	tablat,3971	;volatile
  2937  001206                     
  2938                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2939  001206  0E00               	movlw	0
  2940  001208  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2941  00120A  0E02               	movlw	2
  2942  00120C  6E01               	movwf	digitalWrite@pin^0,c
  2943  00120E  0E00               	movlw	0
  2944  001210  6E04               	movwf	(digitalWrite@value+1)^0,c
  2945  001212  0E01               	movlw	1
  2946  001214  6E03               	movwf	digitalWrite@value^0,c
  2947  001216  ECE6  F006         	call	_digitalWrite	;wreg free
  2948  00121A                     
  2949                           ;ssd.c: 74:             display = 1;
  2950  00121A  0E01               	movlw	1
  2951  00121C  6E7A               	movwf	_display^0,c
  2952                           
  2953                           ;ssd.c: 75:             break;
  2954  00121E  EF73  F009         	goto	l273
  2955  001222                     l2399:
  2956                           
  2957                           ;ssd.c: 78:             PORTD = valor[v1];
  2958  001222  0E01               	movlw	low _valor@ssd$F238
  2959  001224  2478               	addwf	_v1^0,w,c
  2960  001226  6EF6               	movwf	tblptrl,c
  2961  001228  6AF7               	clrf	tblptrh,c
  2962  00122A  0E06               	movlw	high _valor@ssd$F238
  2963  00122C  22F7               	addwfc	tblptrh,f,c
  2964  00122E                     	if	0	;There are less than 3 active tblptr bytes
  2965  00122E                     	endif
  2966  00122E  0008               	tblrd		*
  2967  001230  CFF5 FF83          	movff	tablat,3971	;volatile
  2968  001234                     
  2969                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2970  001234  0E00               	movlw	0
  2971  001236  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2972  001238  0E03               	movlw	3
  2973  00123A  6E01               	movwf	digitalWrite@pin^0,c
  2974  00123C  0E00               	movlw	0
  2975  00123E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2976  001240  0E01               	movlw	1
  2977  001242  6E03               	movwf	digitalWrite@value^0,c
  2978  001244  ECE6  F006         	call	_digitalWrite	;wreg free
  2979  001248                     
  2980                           ;ssd.c: 80:             display = 2;
  2981  001248  0E02               	movlw	2
  2982  00124A  6E7A               	movwf	_display^0,c
  2983                           
  2984                           ;ssd.c: 81:             break;
  2985  00124C  EF73  F009         	goto	l273
  2986  001250                     l2405:
  2987                           
  2988                           ;ssd.c: 84:             PORTD = valor[v2];
  2989  001250  0E01               	movlw	low _valor@ssd$F238
  2990  001252  2477               	addwf	_v2^0,w,c
  2991  001254  6EF6               	movwf	tblptrl,c
  2992  001256  6AF7               	clrf	tblptrh,c
  2993  001258  0E06               	movlw	high _valor@ssd$F238
  2994  00125A  22F7               	addwfc	tblptrh,f,c
  2995  00125C                     	if	0	;There are less than 3 active tblptr bytes
  2996  00125C                     	endif
  2997  00125C  0008               	tblrd		*
  2998  00125E  CFF5 FF83          	movff	tablat,3971	;volatile
  2999  001262                     
  3000                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  3001  001262  0E00               	movlw	0
  3002  001264  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3003  001266  0E04               	movlw	4
  3004  001268  6E01               	movwf	digitalWrite@pin^0,c
  3005  00126A  0E00               	movlw	0
  3006  00126C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3007  00126E  0E01               	movlw	1
  3008  001270  6E03               	movwf	digitalWrite@value^0,c
  3009  001272  ECE6  F006         	call	_digitalWrite	;wreg free
  3010  001276                     
  3011                           ;ssd.c: 86:             display = 3;
  3012  001276  0E03               	movlw	3
  3013  001278  6E7A               	movwf	_display^0,c
  3014                           
  3015                           ;ssd.c: 87:             break;
  3016  00127A  EF73  F009         	goto	l273
  3017  00127E                     l2411:
  3018                           
  3019                           ;ssd.c: 90:             PORTD = valor[v3];
  3020  00127E  0E01               	movlw	low _valor@ssd$F238
  3021  001280  2476               	addwf	_v3^0,w,c
  3022  001282  6EF6               	movwf	tblptrl,c
  3023  001284  6AF7               	clrf	tblptrh,c
  3024  001286  0E06               	movlw	high _valor@ssd$F238
  3025  001288  22F7               	addwfc	tblptrh,f,c
  3026  00128A                     	if	0	;There are less than 3 active tblptr bytes
  3027  00128A                     	endif
  3028  00128A  0008               	tblrd		*
  3029  00128C  CFF5 FF83          	movff	tablat,3971	;volatile
  3030  001290                     
  3031                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  3032  001290  0E00               	movlw	0
  3033  001292  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3034  001294  0E05               	movlw	5
  3035  001296  6E01               	movwf	digitalWrite@pin^0,c
  3036  001298  0E00               	movlw	0
  3037  00129A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3038  00129C  0E01               	movlw	1
  3039  00129E  6E03               	movwf	digitalWrite@value^0,c
  3040  0012A0  ECE6  F006         	call	_digitalWrite	;wreg free
  3041  0012A4                     l2415:
  3042                           
  3043                           ;ssd.c: 92:             display = 0;
  3044  0012A4  0E00               	movlw	0
  3045  0012A6  6E7A               	movwf	_display^0,c
  3046                           
  3047                           ;ssd.c: 93:             break;
  3048  0012A8  EF73  F009         	goto	l273
  3049  0012AC                     l2421:
  3050  0012AC  507A               	movf	_display^0,w,c
  3051  0012AE  6E07               	movwf	??_ssdUpdate^0,c
  3052  0012B0  6A08               	clrf	(??_ssdUpdate+1)^0,c
  3053                           
  3054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3055                           ; Switch size 1, requested type "simple"
  3056                           ; Number of cases is 1, Range of values is 0 to 0
  3057                           ; switch strategies available:
  3058                           ; Name         Instructions Cycles
  3059                           ; simple_byte            4     3 (average)
  3060                           ;	Chosen strategy is simple_byte
  3061  0012B2  5008               	movf	(??_ssdUpdate+1)^0,w,c
  3062  0012B4  0A00               	xorlw	0	; case 0
  3063  0012B6  B4D8               	btfsc	status,2,c
  3064  0012B8  EF60  F009         	goto	l2961
  3065  0012BC  EF52  F009         	goto	l2415
  3066  0012C0                     l2961:
  3067                           
  3068                           ; Switch size 1, requested type "simple"
  3069                           ; Number of cases is 4, Range of values is 0 to 3
  3070                           ; switch strategies available:
  3071                           ; Name         Instructions Cycles
  3072                           ; simple_byte           13     7 (average)
  3073                           ;	Chosen strategy is simple_byte
  3074  0012C0  5007               	movf	??_ssdUpdate^0,w,c
  3075  0012C2  0A00               	xorlw	0	; case 0
  3076  0012C4  B4D8               	btfsc	status,2,c
  3077  0012C6  EFFA  F008         	goto	l2393
  3078  0012CA  0A01               	xorlw	1	; case 1
  3079  0012CC  B4D8               	btfsc	status,2,c
  3080  0012CE  EF11  F009         	goto	l2399
  3081  0012D2  0A03               	xorlw	3	; case 2
  3082  0012D4  B4D8               	btfsc	status,2,c
  3083  0012D6  EF28  F009         	goto	l2405
  3084  0012DA  0A01               	xorlw	1	; case 3
  3085  0012DC  B4D8               	btfsc	status,2,c
  3086  0012DE  EF3F  F009         	goto	l2411
  3087  0012E2  EF52  F009         	goto	l2415
  3088  0012E6                     l273:
  3089  0012E6  0012               	return		;funcret
  3090  0012E8                     __end_of_ssdUpdate:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function _ssdDigit *****************
  3094 ;; Defined at:
  3095 ;;		line 38 in file "ssd.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  val             1    wreg     unsigned char 
  3098 ;;  pos             1    0[COMRAM] unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  val             1    1[COMRAM] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3110 ;;      Params:         1       0       0       0       0       0       0
  3111 ;;      Locals:         1       0       0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0       0       0
  3113 ;;      Totals:         2       0       0       0       0       0       0
  3114 ;;Total ram usage:        2 bytes
  3115 ;; Hardware stack levels used: 1
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_escolheMusica
  3120 ;;		_tocaMusica
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text10
  3125  001D3C                     __ptext10:
  3126                           	callstack 0
  3127  001D3C                     _ssdDigit:
  3128                           	callstack 28
  3129                           
  3130                           ;incstack = 0
  3131                           ;ssdDigit@val stored from wreg
  3132  001D3C  6E02               	movwf	ssdDigit@val^0,c
  3133  001D3E                     
  3134                           ;ssd.c: 39:     if (pos == 0) {
  3135  001D3E  5001               	movf	ssdDigit@pos^0,w,c
  3136  001D40  A4D8               	btfss	status,2,c
  3137  001D42  EFA5  F00E         	goto	u1991
  3138  001D46  EFA7  F00E         	goto	u1990
  3139  001D4A                     u1991:
  3140  001D4A  EFA9  F00E         	goto	l2371
  3141  001D4E                     u1990:
  3142  001D4E                     
  3143                           ;ssd.c: 40:         v0 = val;
  3144  001D4E  C002  F079         	movff	ssdDigit@val,_v0
  3145  001D52                     l2371:
  3146                           
  3147                           ;ssd.c: 42:     if (pos == 1) {
  3148  001D52  0401               	decf	ssdDigit@pos^0,w,c
  3149  001D54  A4D8               	btfss	status,2,c
  3150  001D56  EFAF  F00E         	goto	u2001
  3151  001D5A  EFB1  F00E         	goto	u2000
  3152  001D5E                     u2001:
  3153  001D5E  EFB3  F00E         	goto	l2375
  3154  001D62                     u2000:
  3155  001D62                     
  3156                           ;ssd.c: 43:         v1 = val;
  3157  001D62  C002  F078         	movff	ssdDigit@val,_v1
  3158  001D66                     l2375:
  3159                           
  3160                           ;ssd.c: 45:     if (pos == 2) {
  3161  001D66  0E02               	movlw	2
  3162  001D68  1801               	xorwf	ssdDigit@pos^0,w,c
  3163  001D6A  A4D8               	btfss	status,2,c
  3164  001D6C  EFBA  F00E         	goto	u2011
  3165  001D70  EFBC  F00E         	goto	u2010
  3166  001D74                     u2011:
  3167  001D74  EFBE  F00E         	goto	l2379
  3168  001D78                     u2010:
  3169  001D78                     
  3170                           ;ssd.c: 46:         v2 = val;
  3171  001D78  C002  F077         	movff	ssdDigit@val,_v2
  3172  001D7C                     l2379:
  3173                           
  3174                           ;ssd.c: 48:     if (pos == 3) {
  3175  001D7C  0E03               	movlw	3
  3176  001D7E  1801               	xorwf	ssdDigit@pos^0,w,c
  3177  001D80  A4D8               	btfss	status,2,c
  3178  001D82  EFC5  F00E         	goto	u2021
  3179  001D86  EFC7  F00E         	goto	u2020
  3180  001D8A                     u2021:
  3181  001D8A  EFC9  F00E         	goto	l263
  3182  001D8E                     u2020:
  3183  001D8E                     
  3184                           ;ssd.c: 49:         v3 = val;
  3185  001D8E  C002  F076         	movff	ssdDigit@val,_v3
  3186  001D92                     l263:
  3187  001D92  0012               	return		;funcret
  3188  001D94                     __end_of_ssdDigit:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _pwmSet *****************
  3192 ;; Defined at:
  3193 ;;		line 24 in file "pwm.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  porcento        1    wreg     unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  porcento        1    9[COMRAM] unsigned char 
  3198 ;;  val             2   10[COMRAM] unsigned int 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3208 ;;      Params:         0       0       0       0       0       0       0
  3209 ;;      Locals:         3       0       0       0       0       0       0
  3210 ;;      Temps:          2       0       0       0       0       0       0
  3211 ;;      Totals:         5       0       0       0       0       0       0
  3212 ;;Total ram usage:        5 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; Hardware stack levels required when called: 1
  3215 ;; This function calls:
  3216 ;;		___lwdiv
  3217 ;;		___wmul
  3218 ;; This function is called by:
  3219 ;;		_tocaMusica
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text11
  3224  001C12                     __ptext11:
  3225                           	callstack 0
  3226  001C12                     _pwmSet:
  3227                           	callstack 27
  3228                           
  3229                           ;incstack = 0
  3230                           ;pwmSet@porcento stored from wreg
  3231  001C12  6E0A               	movwf	pwmSet@porcento^0,c
  3232  001C14                     
  3233                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  3234  001C14  0E01               	movlw	1
  3235  001C16  24CB               	addwf	203,w,c	;volatile
  3236  001C18  6E01               	movwf	___wmul@multiplier^0,c
  3237  001C1A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3238  001C1C  0E00               	movlw	0
  3239  001C1E  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  3240  001C20  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  3241  001C24  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  3242  001C26  EC3E  F00F         	call	___wmul	;wreg free
  3243  001C2A  C001  F00B         	movff	?___wmul,pwmSet@val
  3244  001C2E  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  3245  001C32                     
  3246                           ;pwm.c: 33:     val = val / 25;
  3247  001C32  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  3248  001C36  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  3249  001C3A  0E00               	movlw	0
  3250  001C3C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3251  001C3E  0E19               	movlw	25
  3252  001C40  6E03               	movwf	___lwdiv@divisor^0,c
  3253  001C42  EC98  F00D         	call	___lwdiv	;wreg free
  3254  001C46  C001  F00B         	movff	?___lwdiv,pwmSet@val
  3255  001C4A  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  3256  001C4E                     
  3257                           ;pwm.c: 35:  val &= 0x03ff;
  3258  001C4E  0EFF               	movlw	255
  3259  001C50  160B               	andwf	pwmSet@val^0,f,c
  3260  001C52  0E03               	movlw	3
  3261  001C54  160C               	andwf	(pwmSet@val+1)^0,f,c
  3262  001C56                     
  3263                           ;pwm.c: 37:  CCPR1L = val >> 2;
  3264  001C56  C00B  F008         	movff	pwmSet@val,??_pwmSet
  3265  001C5A  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  3266  001C5E  90D8               	bcf	status,0,c
  3267  001C60  3209               	rrcf	(??_pwmSet+1)^0,f,c
  3268  001C62  3208               	rrcf	??_pwmSet^0,f,c
  3269  001C64  90D8               	bcf	status,0,c
  3270  001C66  3209               	rrcf	(??_pwmSet+1)^0,f,c
  3271  001C68  3208               	rrcf	??_pwmSet^0,f,c
  3272  001C6A  5008               	movf	??_pwmSet^0,w,c
  3273  001C6C  6EBE               	movwf	190,c	;volatile
  3274  001C6E                     
  3275                           ;pwm.c: 39:  CCP1CON |= (val & 0x0003) << 4;
  3276  001C6E  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  3277  001C72  0E03               	movlw	3
  3278  001C74  1608               	andwf	??_pwmSet^0,f,c
  3279  001C76  3808               	swapf	??_pwmSet^0,w,c
  3280  001C78  0BF0               	andlw	240
  3281  001C7A  12BD               	iorwf	189,f,c	;volatile
  3282  001C7C  0012               	return		;funcret
  3283  001C7E                     __end_of_pwmSet:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function ___wmul *****************
  3287 ;; Defined at:
  3288 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  multiplier      2    0[COMRAM] unsigned int 
  3291 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  product         2    4[COMRAM] unsigned int 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  2    0[COMRAM] unsigned int 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0, prodl, prodh
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3303 ;;      Params:         4       0       0       0       0       0       0
  3304 ;;      Locals:         2       0       0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0
  3306 ;;      Totals:         6       0       0       0       0       0       0
  3307 ;;Total ram usage:        6 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_pwmSet
  3313 ;;		_iniciaMusica
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text12
  3318  001E7C                     __ptext12:
  3319                           	callstack 0
  3320  001E7C                     ___wmul:
  3321                           	callstack 29
  3322  001E7C  5001               	movf	___wmul@multiplier^0,w,c
  3323  001E7E  0203               	mulwf	___wmul@multiplicand^0,c
  3324  001E80  CFF3 F005          	movff	prodl,___wmul@product
  3325  001E84  CFF4 F006          	movff	prodh,___wmul@product+1
  3326  001E88  5001               	movf	___wmul@multiplier^0,w,c
  3327  001E8A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3328  001E8C  50F3               	movf	243,w,c
  3329  001E8E  2606               	addwf	(___wmul@product+1)^0,f,c
  3330  001E90  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3331  001E92  0203               	mulwf	___wmul@multiplicand^0,c
  3332  001E94  50F3               	movf	243,w,c
  3333  001E96  2606               	addwf	(___wmul@product+1)^0,f,c
  3334  001E98  C005  F001         	movff	___wmul@product,?___wmul
  3335  001E9C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3336  001EA0  0012               	return		;funcret
  3337  001EA2                     __end_of___wmul:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function ___lwdiv *****************
  3341 ;; Defined at:
  3342 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  dividend        2    0[COMRAM] unsigned int 
  3345 ;;  divisor         2    2[COMRAM] unsigned int 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  quotient        2    4[COMRAM] unsigned int 
  3348 ;;  counter         1    6[COMRAM] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  2    0[COMRAM] unsigned int 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3358 ;;      Params:         4       0       0       0       0       0       0
  3359 ;;      Locals:         3       0       0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0
  3361 ;;      Totals:         7       0       0       0       0       0       0
  3362 ;;Total ram usage:        7 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_pwmSet
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text13
  3372  001B30                     __ptext13:
  3373                           	callstack 0
  3374  001B30                     ___lwdiv:
  3375                           	callstack 27
  3376  001B30  0E00               	movlw	0
  3377  001B32  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3378  001B34  0E00               	movlw	0
  3379  001B36  6E05               	movwf	___lwdiv@quotient^0,c
  3380  001B38  5003               	movf	___lwdiv@divisor^0,w,c
  3381  001B3A  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3382  001B3C  B4D8               	btfsc	status,2,c
  3383  001B3E  EFA3  F00D         	goto	u1781
  3384  001B42  EFA5  F00D         	goto	u1780
  3385  001B46                     u1781:
  3386  001B46  EFCD  F00D         	goto	l937
  3387  001B4A                     u1780:
  3388  001B4A  0E01               	movlw	1
  3389  001B4C  6E07               	movwf	___lwdiv@counter^0,c
  3390  001B4E  EFAD  F00D         	goto	l2251
  3391  001B52                     l2249:
  3392  001B52  90D8               	bcf	status,0,c
  3393  001B54  3603               	rlcf	___lwdiv@divisor^0,f,c
  3394  001B56  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3395  001B58  2A07               	incf	___lwdiv@counter^0,f,c
  3396  001B5A                     l2251:
  3397  001B5A  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3398  001B5C  EFB2  F00D         	goto	u1791
  3399  001B60  EFB4  F00D         	goto	u1790
  3400  001B64                     u1791:
  3401  001B64  EFA9  F00D         	goto	l2249
  3402  001B68                     u1790:
  3403  001B68                     l2253:
  3404  001B68  90D8               	bcf	status,0,c
  3405  001B6A  3605               	rlcf	___lwdiv@quotient^0,f,c
  3406  001B6C  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3407  001B6E  5003               	movf	___lwdiv@divisor^0,w,c
  3408  001B70  5C01               	subwf	___lwdiv@dividend^0,w,c
  3409  001B72  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3410  001B74  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3411  001B76  A0D8               	btfss	status,0,c
  3412  001B78  EFC0  F00D         	goto	u1801
  3413  001B7C  EFC2  F00D         	goto	u1800
  3414  001B80                     u1801:
  3415  001B80  EFC7  F00D         	goto	l2261
  3416  001B84                     u1800:
  3417  001B84  5003               	movf	___lwdiv@divisor^0,w,c
  3418  001B86  5E01               	subwf	___lwdiv@dividend^0,f,c
  3419  001B88  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3420  001B8A  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3421  001B8C  8005               	bsf	___lwdiv@quotient^0,0,c
  3422  001B8E                     l2261:
  3423  001B8E  90D8               	bcf	status,0,c
  3424  001B90  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3425  001B92  3203               	rrcf	___lwdiv@divisor^0,f,c
  3426  001B94  2E07               	decfsz	___lwdiv@counter^0,f,c
  3427  001B96  EFB4  F00D         	goto	l2253
  3428  001B9A                     l937:
  3429  001B9A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3430  001B9E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3431  001BA2  0012               	return		;funcret
  3432  001BA4                     __end_of___lwdiv:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _pwmInit *****************
  3436 ;; Defined at:
  3437 ;;		line 51 in file "pwm.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3451 ;;      Params:         0       0       0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 2
  3458 ;; This function calls:
  3459 ;;		_pwmFrequency
  3460 ;; This function is called by:
  3461 ;;		_tocaMusica
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text14
  3466  001EE4                     __ptext14:
  3467                           	callstack 0
  3468  001EE4                     _pwmInit:
  3469                           	callstack 26
  3470  001EE4                     
  3471                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(2)));
  3472  001EE4  9494               	bcf	148,2,c	;volatile
  3473  001EE6                     
  3474                           ;pwm.c: 55:  T2CON |= 0b00000011;
  3475  001EE6  0E03               	movlw	3
  3476  001EE8  12CA               	iorwf	202,f,c	;volatile
  3477  001EEA                     
  3478                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  3479  001EEA  84CA               	bsf	202,2,c	;volatile
  3480  001EEC                     
  3481                           ;pwm.c: 58:  CCP1CON = 0b00001100;
  3482  001EEC  0E0C               	movlw	12
  3483  001EEE  6EBD               	movwf	189,c	;volatile
  3484  001EF0                     
  3485                           ;pwm.c: 60:     pwmFrequency(100);
  3486  001EF0  0E00               	movlw	0
  3487  001EF2  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  3488  001EF4  0E64               	movlw	100
  3489  001EF6  6E0F               	movwf	pwmFrequency@freq^0,c
  3490  001EF8  EC51  F00F         	call	_pwmFrequency	;wreg free
  3491  001EFC  0012               	return		;funcret
  3492  001EFE                     __end_of_pwmInit:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _pwmFrequency *****************
  3496 ;; Defined at:
  3497 ;;		line 44 in file "pwm.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  freq            2   14[COMRAM] unsigned int 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3511 ;;      Params:         2       0       0       0       0       0       0
  3512 ;;      Locals:         0       0       0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0
  3514 ;;      Totals:         2       0       0       0       0       0       0
  3515 ;;Total ram usage:        2 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 1
  3518 ;; This function calls:
  3519 ;;		___aldiv
  3520 ;; This function is called by:
  3521 ;;		_pwmInit
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text15
  3526  001EA2                     __ptext15:
  3527                           	callstack 0
  3528  001EA2                     _pwmFrequency:
  3529                           	callstack 26
  3530  001EA2                     
  3531                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  3532  001EA2  0E48               	movlw	72
  3533  001EA4  6E01               	movwf	___aldiv@dividend^0,c
  3534  001EA6  0EE8               	movlw	232
  3535  001EA8  6E02               	movwf	(___aldiv@dividend+1)^0,c
  3536  001EAA  0E01               	movlw	1
  3537  001EAC  6E03               	movwf	(___aldiv@dividend+2)^0,c
  3538  001EAE  0E00               	movlw	0
  3539  001EB0  6E04               	movwf	(___aldiv@dividend+3)^0,c
  3540  001EB2  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  3541  001EB6  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  3542  001EBA  6A07               	clrf	(___aldiv@divisor+2)^0,c
  3543  001EBC  6A08               	clrf	(___aldiv@divisor+3)^0,c
  3544  001EBE  ECB3  F00A         	call	___aldiv	;wreg free
  3545  001EC2  0401               	decf	?___aldiv^0,w,c
  3546  001EC4  6ECB               	movwf	203,c	;volatile
  3547  001EC6  0012               	return		;funcret
  3548  001EC8                     __end_of_pwmFrequency:
  3549                           	callstack 0
  3550                           
  3551 ;; *************** function ___aldiv *****************
  3552 ;; Defined at:
  3553 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  dividend        4    0[COMRAM] long 
  3556 ;;  divisor         4    4[COMRAM] long 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  quotient        4   10[COMRAM] long 
  3559 ;;  sign            1    9[COMRAM] unsigned char 
  3560 ;;  counter         1    8[COMRAM] unsigned char 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  4    0[COMRAM] long 
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3570 ;;      Params:         8       0       0       0       0       0       0
  3571 ;;      Locals:         6       0       0       0       0       0       0
  3572 ;;      Temps:          0       0       0       0       0       0       0
  3573 ;;      Totals:        14       0       0       0       0       0       0
  3574 ;;Total ram usage:       14 bytes
  3575 ;; Hardware stack levels used: 1
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_pwmFrequency
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text16
  3584  001566                     __ptext16:
  3585                           	callstack 0
  3586  001566                     ___aldiv:
  3587                           	callstack 26
  3588  001566  0E00               	movlw	0
  3589  001568  6E0A               	movwf	___aldiv@sign^0,c
  3590  00156A  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  3591  00156C  EFBC  F00A         	goto	u1670
  3592  001570  EFBA  F00A         	goto	u1671
  3593  001574                     u1671:
  3594  001574  EFC6  F00A         	goto	l2135
  3595  001578                     u1670:
  3596  001578  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  3597  00157A  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  3598  00157C  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  3599  00157E  6C05               	negf	___aldiv@divisor^0,c
  3600  001580  0E00               	movlw	0
  3601  001582  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  3602  001584  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  3603  001586  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  3604  001588  0E01               	movlw	1
  3605  00158A  6E0A               	movwf	___aldiv@sign^0,c
  3606  00158C                     l2135:
  3607  00158C  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  3608  00158E  EFCD  F00A         	goto	u1680
  3609  001592  EFCB  F00A         	goto	u1681
  3610  001596                     u1681:
  3611  001596  EFD7  F00A         	goto	l2141
  3612  00159A                     u1680:
  3613  00159A  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  3614  00159C  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  3615  00159E  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  3616  0015A0  6C01               	negf	___aldiv@dividend^0,c
  3617  0015A2  0E00               	movlw	0
  3618  0015A4  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  3619  0015A6  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  3620  0015A8  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  3621  0015AA  0E01               	movlw	1
  3622  0015AC  1A0A               	xorwf	___aldiv@sign^0,f,c
  3623  0015AE                     l2141:
  3624  0015AE  0E00               	movlw	0
  3625  0015B0  6E0B               	movwf	___aldiv@quotient^0,c
  3626  0015B2  0E00               	movlw	0
  3627  0015B4  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  3628  0015B6  0E00               	movlw	0
  3629  0015B8  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  3630  0015BA  0E00               	movlw	0
  3631  0015BC  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  3632  0015BE  5005               	movf	___aldiv@divisor^0,w,c
  3633  0015C0  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  3634  0015C2  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  3635  0015C4  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  3636  0015C6  B4D8               	btfsc	status,2,c
  3637  0015C8  EFE8  F00A         	goto	u1691
  3638  0015CC  EFEA  F00A         	goto	u1690
  3639  0015D0                     u1691:
  3640  0015D0  EF20  F00B         	goto	l2163
  3641  0015D4                     u1690:
  3642  0015D4  0E01               	movlw	1
  3643  0015D6  6E09               	movwf	___aldiv@counter^0,c
  3644  0015D8  EFF4  F00A         	goto	l2149
  3645  0015DC                     l2147:
  3646  0015DC  90D8               	bcf	status,0,c
  3647  0015DE  3605               	rlcf	___aldiv@divisor^0,f,c
  3648  0015E0  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  3649  0015E2  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  3650  0015E4  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  3651  0015E6  2A09               	incf	___aldiv@counter^0,f,c
  3652  0015E8                     l2149:
  3653  0015E8  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  3654  0015EA  EFF9  F00A         	goto	u1701
  3655  0015EE  EFFB  F00A         	goto	u1700
  3656  0015F2                     u1701:
  3657  0015F2  EFEE  F00A         	goto	l2147
  3658  0015F6                     u1700:
  3659  0015F6                     l2151:
  3660  0015F6  90D8               	bcf	status,0,c
  3661  0015F8  360B               	rlcf	___aldiv@quotient^0,f,c
  3662  0015FA  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  3663  0015FC  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  3664  0015FE  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  3665  001600  5005               	movf	___aldiv@divisor^0,w,c
  3666  001602  5C01               	subwf	___aldiv@dividend^0,w,c
  3667  001604  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3668  001606  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  3669  001608  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3670  00160A  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  3671  00160C  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3672  00160E  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  3673  001610  A0D8               	btfss	status,0,c
  3674  001612  EF0D  F00B         	goto	u1711
  3675  001616  EF0F  F00B         	goto	u1710
  3676  00161A                     u1711:
  3677  00161A  EF18  F00B         	goto	l2159
  3678  00161E                     u1710:
  3679  00161E  5005               	movf	___aldiv@divisor^0,w,c
  3680  001620  5E01               	subwf	___aldiv@dividend^0,f,c
  3681  001622  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3682  001624  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  3683  001626  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3684  001628  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  3685  00162A  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3686  00162C  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  3687  00162E  800B               	bsf	___aldiv@quotient^0,0,c
  3688  001630                     l2159:
  3689  001630  90D8               	bcf	status,0,c
  3690  001632  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  3691  001634  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  3692  001636  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  3693  001638  3205               	rrcf	___aldiv@divisor^0,f,c
  3694  00163A  2E09               	decfsz	___aldiv@counter^0,f,c
  3695  00163C  EFFB  F00A         	goto	l2151
  3696  001640                     l2163:
  3697  001640  500A               	movf	___aldiv@sign^0,w,c
  3698  001642  B4D8               	btfsc	status,2,c
  3699  001644  EF26  F00B         	goto	u1721
  3700  001648  EF28  F00B         	goto	u1720
  3701  00164C                     u1721:
  3702  00164C  EF30  F00B         	goto	l2167
  3703  001650                     u1720:
  3704  001650  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  3705  001652  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  3706  001654  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  3707  001656  6C0B               	negf	___aldiv@quotient^0,c
  3708  001658  0E00               	movlw	0
  3709  00165A  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  3710  00165C  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  3711  00165E  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  3712  001660                     l2167:
  3713  001660  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  3714  001664  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3715  001668  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3716  00166C  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3717  001670  0012               	return		;funcret
  3718  001672                     __end_of___aldiv:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _lcdStr *****************
  3722 ;; Defined at:
  3723 ;;		line 128 in file "lcd.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  str             2    8[COMRAM] PTR const unsigned char 
  3726 ;;		 -> STR_6(16), STR_5(17), musicas.nome(17), musicas(190), 
  3727 ;;		 -> STR_4(17), STR_3(17), STR_2(7), STR_1(4), 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  i               1   12[COMRAM] unsigned char 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  1    wreg      void 
  3732 ;; Registers used:
  3733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3739 ;;      Params:         2       0       0       0       0       0       0
  3740 ;;      Locals:         1       0       0       0       0       0       0
  3741 ;;      Temps:          2       0       0       0       0       0       0
  3742 ;;      Totals:         5       0       0       0       0       0       0
  3743 ;;Total ram usage:        5 bytes
  3744 ;; Hardware stack levels used: 1
  3745 ;; Hardware stack levels required when called: 2
  3746 ;; This function calls:
  3747 ;;		_lcdData
  3748 ;; This function is called by:
  3749 ;;		_main
  3750 ;;		_escolheMusica
  3751 ;;		_tocaMusica
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text17
  3756  001AB8                     __ptext17:
  3757                           	callstack 0
  3758  001AB8                     _lcdStr:
  3759                           	callstack 28
  3760  001AB8                     
  3761                           ;lcd.c: 129:     unsigned char i = 0;
  3762  001AB8  0E00               	movlw	0
  3763  001ABA  6E0D               	movwf	lcdStr@i^0,c
  3764                           
  3765                           ;lcd.c: 131:     while (str[i] != 0) {
  3766  001ABC  EF79  F00D         	goto	l2345
  3767  001AC0                     l2341:
  3768                           
  3769                           ;lcd.c: 132:         lcdData(str[i]);
  3770  001AC0  500D               	movf	lcdStr@i^0,w,c
  3771  001AC2  2409               	addwf	lcdStr@str^0,w,c
  3772  001AC4  6E0B               	movwf	??_lcdStr^0,c
  3773  001AC6  0E00               	movlw	0
  3774  001AC8  200A               	addwfc	(lcdStr@str+1)^0,w,c
  3775  001ACA  6E0C               	movwf	(??_lcdStr+1)^0,c
  3776  001ACC  C00B  FFF6         	movff	??_lcdStr,tblptrl
  3777  001AD0  C00C  FFF7         	movff	??_lcdStr+1,tblptrh
  3778  001AD4  6AF8               	clrf	tblptru,c
  3779  001AD6  0E05               	movlw	(high __ramtop+-1)
  3780  001AD8  64F7               	cpfsgt	tblptrh,c
  3781  001ADA  D003               	bra	u1967
  3782  001ADC  0008               	tblrd		*
  3783  001ADE  50F5               	movf	tablat,w,c
  3784  001AE0  D005               	bra	u1960
  3785  001AE2                     u1967:
  3786  001AE2  CFF6 FFE9          	movff	tblptrl,fsr0l
  3787  001AE6  CFF7 FFEA          	movff	tblptrh,fsr0h
  3788  001AEA  50EF               	movf	indf0,w,c
  3789  001AEC                     u1960:
  3790  001AEC  ECF5  F00E         	call	_lcdData
  3791  001AF0                     
  3792                           ;lcd.c: 133:         i++;
  3793  001AF0  2A0D               	incf	lcdStr@i^0,f,c
  3794  001AF2                     l2345:
  3795                           
  3796                           ;lcd.c: 131:     while (str[i] != 0) {
  3797  001AF2  500D               	movf	lcdStr@i^0,w,c
  3798  001AF4  2409               	addwf	lcdStr@str^0,w,c
  3799  001AF6  6E0B               	movwf	??_lcdStr^0,c
  3800  001AF8  0E00               	movlw	0
  3801  001AFA  200A               	addwfc	(lcdStr@str+1)^0,w,c
  3802  001AFC  6E0C               	movwf	(??_lcdStr+1)^0,c
  3803  001AFE  C00B  FFF6         	movff	??_lcdStr,tblptrl
  3804  001B02  C00C  FFF7         	movff	??_lcdStr+1,tblptrh
  3805  001B06  6AF8               	clrf	tblptru,c
  3806  001B08  0E05               	movlw	(high __ramtop+-1)
  3807  001B0A  64F7               	cpfsgt	tblptrh,c
  3808  001B0C  D003               	bra	u1977
  3809  001B0E  0008               	tblrd		*
  3810  001B10  50F5               	movf	tablat,w,c
  3811  001B12  D005               	bra	u1970
  3812  001B14                     u1977:
  3813  001B14  CFF6 FFE9          	movff	tblptrl,fsr0l
  3814  001B18  CFF7 FFEA          	movff	tblptrh,fsr0h
  3815  001B1C  50EF               	movf	indf0,w,c
  3816  001B1E                     u1970:
  3817  001B1E  0900               	iorlw	0
  3818  001B20  A4D8               	btfss	status,2,c
  3819  001B22  EF95  F00D         	goto	u1981
  3820  001B26  EF97  F00D         	goto	u1980
  3821  001B2A                     u1981:
  3822  001B2A  EF60  F00D         	goto	l2341
  3823  001B2E                     u1980:
  3824  001B2E  0012               	return		;funcret
  3825  001B30                     __end_of_lcdStr:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _lcdData *****************
  3829 ;; Defined at:
  3830 ;;		line 68 in file "lcd.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  valor           1    wreg     unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  valor           1    6[COMRAM] unsigned char 
  3835 ;;  old_D           1    7[COMRAM] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3845 ;;      Params:         0       0       0       0       0       0       0
  3846 ;;      Locals:         2       0       0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0
  3848 ;;      Totals:         2       0       0       0       0       0       0
  3849 ;;Total ram usage:        2 bytes
  3850 ;; Hardware stack levels used: 1
  3851 ;; Hardware stack levels required when called: 1
  3852 ;; This function calls:
  3853 ;;		_Delay40us
  3854 ;;		_digitalWrite
  3855 ;; This function is called by:
  3856 ;;		_lcdStr
  3857 ;;		_main
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text18
  3862  001DEA                     __ptext18:
  3863                           	callstack 0
  3864  001DEA                     _lcdData:
  3865                           	callstack 28
  3866                           
  3867                           ;incstack = 0
  3868                           ;lcdData@valor stored from wreg
  3869  001DEA  6E07               	movwf	lcdData@valor^0,c
  3870  001DEC                     
  3871                           ;lcd.c: 70:     unsigned char old_D;;lcd.c: 71:     old_D = PORTD;
  3872  001DEC  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  3873  001DF0                     
  3874                           ;lcd.c: 73:     TRISD = 0x00;
  3875  001DF0  0E00               	movlw	0
  3876  001DF2  6E95               	movwf	149,c	;volatile
  3877  001DF4                     
  3878                           ;lcd.c: 74:     digitalWrite(PIN_E2, 1);
  3879  001DF4  0E00               	movlw	0
  3880  001DF6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3881  001DF8  0E22               	movlw	34
  3882  001DFA  6E01               	movwf	digitalWrite@pin^0,c
  3883  001DFC  0E00               	movlw	0
  3884  001DFE  6E04               	movwf	(digitalWrite@value+1)^0,c
  3885  001E00  0E01               	movlw	1
  3886  001E02  6E03               	movwf	digitalWrite@value^0,c
  3887  001E04  ECE6  F006         	call	_digitalWrite	;wreg free
  3888  001E08                     
  3889                           ;lcd.c: 76:     PORTD = valor;
  3890  001E08  C007  FF83         	movff	lcdData@valor,3971	;volatile
  3891  001E0C                     
  3892                           ;lcd.c: 78:     digitalWrite(PIN_E1, 1);
  3893  001E0C  0E00               	movlw	0
  3894  001E0E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3895  001E10  0E21               	movlw	33
  3896  001E12  6E01               	movwf	digitalWrite@pin^0,c
  3897  001E14  0E00               	movlw	0
  3898  001E16  6E04               	movwf	(digitalWrite@value+1)^0,c
  3899  001E18  0E01               	movlw	1
  3900  001E1A  6E03               	movwf	digitalWrite@value^0,c
  3901  001E1C  ECE6  F006         	call	_digitalWrite	;wreg free
  3902  001E20                     
  3903                           ;lcd.c: 79:     digitalWrite(PIN_E1, 0);
  3904  001E20  0E00               	movlw	0
  3905  001E22  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3906  001E24  0E21               	movlw	33
  3907  001E26  6E01               	movwf	digitalWrite@pin^0,c
  3908  001E28  0E00               	movlw	0
  3909  001E2A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3910  001E2C  0E00               	movlw	0
  3911  001E2E  6E03               	movwf	digitalWrite@value^0,c
  3912  001E30  ECE6  F006         	call	_digitalWrite	;wreg free
  3913  001E34                     
  3914                           ;lcd.c: 81:     PORTD = old_D;
  3915  001E34  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  3916  001E38                     
  3917                           ;lcd.c: 83:     Delay40us();
  3918  001E38  EC7F  F00F         	call	_Delay40us	;wreg free
  3919  001E3C  0012               	return		;funcret
  3920  001E3E                     __end_of_lcdData:
  3921                           	callstack 0
  3922                           
  3923 ;; *************** function _lcdPosition *****************
  3924 ;; Defined at:
  3925 ;;		line 115 in file "lcd.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  linha           1    wreg     unsigned char 
  3928 ;;  coluna          1    8[COMRAM] unsigned char 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  linha           1    9[COMRAM] unsigned char 
  3931 ;;  comando         1   10[COMRAM] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3941 ;;      Params:         1       0       0       0       0       0       0
  3942 ;;      Locals:         2       0       0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0
  3944 ;;      Totals:         3       0       0       0       0       0       0
  3945 ;;Total ram usage:        3 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; Hardware stack levels required when called: 3
  3948 ;; This function calls:
  3949 ;;		_lcdCommand
  3950 ;; This function is called by:
  3951 ;;		_main
  3952 ;;		_escolheMusica
  3953 ;;		_tocaMusica
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text19
  3958  001CE2                     __ptext19:
  3959                           	callstack 0
  3960  001CE2                     _lcdPosition:
  3961                           	callstack 27
  3962                           
  3963                           ;incstack = 0
  3964                           ;lcdPosition@linha stored from wreg
  3965  001CE2  6E0A               	movwf	lcdPosition@linha^0,c
  3966  001CE4                     
  3967                           ;lcd.c: 116:     char comando = 0;
  3968  001CE4  0E00               	movlw	0
  3969  001CE6  6E0B               	movwf	lcdPosition@comando^0,c
  3970  001CE8                     
  3971                           ;lcd.c: 117:     if (linha == 0 && comando != 0x01) comando = 0x80 + coluna;
  3972  001CE8  500A               	movf	lcdPosition@linha^0,w,c
  3973  001CEA  A4D8               	btfss	status,2,c
  3974  001CEC  EF7A  F00E         	goto	u1921
  3975  001CF0  EF7C  F00E         	goto	u1920
  3976  001CF4                     u1921:
  3977  001CF4  EF7F  F00E         	goto	l160
  3978  001CF8                     u1920:
  3979  001CF8  5009               	movf	lcdPosition@coluna^0,w,c
  3980  001CFA  0F80               	addlw	128
  3981  001CFC  6E0B               	movwf	lcdPosition@comando^0,c
  3982  001CFE                     l160:
  3983                           
  3984                           ;lcd.c: 118:     if (linha == 1 && comando != 0x01) comando = 0xC0 + coluna;
  3985  001CFE  040A               	decf	lcdPosition@linha^0,w,c
  3986  001D00  A4D8               	btfss	status,2,c
  3987  001D02  EF85  F00E         	goto	u1931
  3988  001D06  EF87  F00E         	goto	u1930
  3989  001D0A                     u1931:
  3990  001D0A  EF92  F00E         	goto	l161
  3991  001D0E                     u1930:
  3992  001D0E  040B               	decf	lcdPosition@comando^0,w,c
  3993  001D10  B4D8               	btfsc	status,2,c
  3994  001D12  EF8D  F00E         	goto	u1941
  3995  001D16  EF8F  F00E         	goto	u1940
  3996  001D1A                     u1941:
  3997  001D1A  EF92  F00E         	goto	l161
  3998  001D1E                     u1940:
  3999  001D1E  5009               	movf	lcdPosition@coluna^0,w,c
  4000  001D20  0FC0               	addlw	192
  4001  001D22  6E0B               	movwf	lcdPosition@comando^0,c
  4002  001D24                     l161:
  4003                           
  4004                           ;lcd.c: 119:     if (coluna > 15) {
  4005  001D24  0E0F               	movlw	15
  4006  001D26  6409               	cpfsgt	lcdPosition@coluna^0,c
  4007  001D28  EF98  F00E         	goto	u1951
  4008  001D2C  EF9A  F00E         	goto	u1950
  4009  001D30                     u1951:
  4010  001D30  EF9A  F00E         	goto	l2337
  4011  001D34                     u1950:
  4012  001D34                     l2337:
  4013                           
  4014                           ;lcd.c: 125:     lcdCommand(comando);
  4015  001D34  500B               	movf	lcdPosition@comando^0,w,c
  4016  001D36  ECE1  F00C         	call	_lcdCommand
  4017  001D3A  0012               	return		;funcret
  4018  001D3C                     __end_of_lcdPosition:
  4019                           	callstack 0
  4020                           
  4021 ;; *************** function _lcdCommand *****************
  4022 ;; Defined at:
  4023 ;;		line 43 in file "lcd.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  cmd             1    wreg     unsigned char 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  cmd             1    7[COMRAM] unsigned char 
  4028 ;;  old_D           1    6[COMRAM] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4038 ;;      Params:         0       0       0       0       0       0       0
  4039 ;;      Locals:         2       0       0       0       0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0
  4041 ;;      Totals:         2       0       0       0       0       0       0
  4042 ;;Total ram usage:        2 bytes
  4043 ;; Hardware stack levels used: 1
  4044 ;; Hardware stack levels required when called: 2
  4045 ;; This function calls:
  4046 ;;		_Delay2ms
  4047 ;;		_Delay40us
  4048 ;;		_digitalWrite
  4049 ;; This function is called by:
  4050 ;;		_lcdInit
  4051 ;;		_lcdPosition
  4052 ;;		_main
  4053 ;;		_escolheMusica
  4054 ;;		_tocaMusica
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text20
  4059  0019C2                     __ptext20:
  4060                           	callstack 0
  4061  0019C2                     _lcdCommand:
  4062                           	callstack 27
  4063                           
  4064                           ;incstack = 0
  4065                           ;lcdCommand@cmd stored from wreg
  4066  0019C2  6E08               	movwf	lcdCommand@cmd^0,c
  4067  0019C4                     
  4068                           ;lcd.c: 44:     unsigned char old_D;;lcd.c: 45:     old_D = PORTD;
  4069  0019C4  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  4070  0019C8                     
  4071                           ;lcd.c: 48:     TRISD = 0x00;
  4072  0019C8  0E00               	movlw	0
  4073  0019CA  6E95               	movwf	149,c	;volatile
  4074  0019CC                     
  4075                           ;lcd.c: 50:     digitalWrite(PIN_E2, 0);
  4076  0019CC  0E00               	movlw	0
  4077  0019CE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4078  0019D0  0E22               	movlw	34
  4079  0019D2  6E01               	movwf	digitalWrite@pin^0,c
  4080  0019D4  0E00               	movlw	0
  4081  0019D6  6E04               	movwf	(digitalWrite@value+1)^0,c
  4082  0019D8  0E00               	movlw	0
  4083  0019DA  6E03               	movwf	digitalWrite@value^0,c
  4084  0019DC  ECE6  F006         	call	_digitalWrite	;wreg free
  4085  0019E0                     
  4086                           ;lcd.c: 51:     PORTD = cmd;
  4087  0019E0  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  4088  0019E4                     
  4089                           ;lcd.c: 53:     digitalWrite(PIN_E1, 1);
  4090  0019E4  0E00               	movlw	0
  4091  0019E6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4092  0019E8  0E21               	movlw	33
  4093  0019EA  6E01               	movwf	digitalWrite@pin^0,c
  4094  0019EC  0E00               	movlw	0
  4095  0019EE  6E04               	movwf	(digitalWrite@value+1)^0,c
  4096  0019F0  0E01               	movlw	1
  4097  0019F2  6E03               	movwf	digitalWrite@value^0,c
  4098  0019F4  ECE6  F006         	call	_digitalWrite	;wreg free
  4099  0019F8                     
  4100                           ;lcd.c: 54:     digitalWrite(PIN_E1, 0);
  4101  0019F8  0E00               	movlw	0
  4102  0019FA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4103  0019FC  0E21               	movlw	33
  4104  0019FE  6E01               	movwf	digitalWrite@pin^0,c
  4105  001A00  0E00               	movlw	0
  4106  001A02  6E04               	movwf	(digitalWrite@value+1)^0,c
  4107  001A04  0E00               	movlw	0
  4108  001A06  6E03               	movwf	digitalWrite@value^0,c
  4109  001A08  ECE6  F006         	call	_digitalWrite	;wreg free
  4110  001A0C                     
  4111                           ;lcd.c: 57:     PORTD = old_D;
  4112  001A0C  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  4113  001A10                     
  4114                           ;lcd.c: 59:     if ((cmd == 0x02) || (cmd == 0x01)) {
  4115  001A10  0E02               	movlw	2
  4116  001A12  1808               	xorwf	lcdCommand@cmd^0,w,c
  4117  001A14  B4D8               	btfsc	status,2,c
  4118  001A16  EF0F  F00D         	goto	u1761
  4119  001A1A  EF11  F00D         	goto	u1760
  4120  001A1E                     u1761:
  4121  001A1E  EF19  F00D         	goto	l2215
  4122  001A22                     u1760:
  4123  001A22  0408               	decf	lcdCommand@cmd^0,w,c
  4124  001A24  A4D8               	btfss	status,2,c
  4125  001A26  EF17  F00D         	goto	u1771
  4126  001A2A  EF19  F00D         	goto	u1770
  4127  001A2E                     u1771:
  4128  001A2E  EF1D  F00D         	goto	l2217
  4129  001A32                     u1770:
  4130  001A32                     l2215:
  4131                           
  4132                           ;lcd.c: 60:         Delay2ms();
  4133  001A32  EC64  F00F         	call	_Delay2ms	;wreg free
  4134                           
  4135                           ;lcd.c: 61:     } else {
  4136  001A36  EF1F  F00D         	goto	l151
  4137  001A3A                     l2217:
  4138                           
  4139                           ;lcd.c: 62:         Delay40us();
  4140  001A3A  EC7F  F00F         	call	_Delay40us	;wreg free
  4141  001A3E                     l151:
  4142  001A3E  0012               	return		;funcret
  4143  001A40                     __end_of_lcdCommand:
  4144                           	callstack 0
  4145                           
  4146 ;; *************** function _digitalWrite *****************
  4147 ;; Defined at:
  4148 ;;		line 14 in file "io.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  pin             2    0[COMRAM] int 
  4151 ;;  value           2    2[COMRAM] int 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4163 ;;      Params:         4       0       0       0       0       0       0
  4164 ;;      Locals:         0       0       0       0       0       0       0
  4165 ;;      Temps:          2       0       0       0       0       0       0
  4166 ;;      Totals:         6       0       0       0       0       0       0
  4167 ;;Total ram usage:        6 bytes
  4168 ;; Hardware stack levels used: 1
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		_lcdCommand
  4173 ;;		_lcdData
  4174 ;;		_ssdUpdate
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text21
  4179  000DCC                     __ptext21:
  4180                           	callstack 0
  4181  000DCC                     _digitalWrite:
  4182                           	callstack 28
  4183  000DCC                     
  4184                           ;io.c: 16:     if(pin <8){
  4185  000DCC  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4186  000DCE  EFF4  F006         	goto	u1460
  4187  000DD2  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4188  000DD4  E107               	bnz	u1461
  4189  000DD6  0E08               	movlw	8
  4190  000DD8  5C01               	subwf	digitalWrite@pin^0,w,c
  4191  000DDA  B0D8               	btfsc	status,0,c
  4192  000DDC  EFF2  F006         	goto	u1461
  4193  000DE0  EFF4  F006         	goto	u1460
  4194  000DE4                     u1461:
  4195  000DE4  EF1E  F007         	goto	l2083
  4196  000DE8                     u1460:
  4197  000DE8                     
  4198                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4199  000DE8  5003               	movf	digitalWrite@value^0,w,c
  4200  000DEA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4201  000DEC  B4D8               	btfsc	status,2,c
  4202  000DEE  EFFB  F006         	goto	u1471
  4203  000DF2  EFFD  F006         	goto	u1470
  4204  000DF6                     u1471:
  4205  000DF6  EF0D  F007         	goto	l2081
  4206  000DFA                     u1470:
  4207  000DFA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4208  000DFE  0E01               	movlw	1
  4209  000E00  6E06               	movwf	(??_digitalWrite+1)^0,c
  4210  000E02  2A05               	incf	??_digitalWrite^0,f,c
  4211  000E04  EF06  F007         	goto	u1484
  4212  000E08                     u1485:
  4213  000E08  90D8               	bcf	status,0,c
  4214  000E0A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4215  000E0C                     u1484:
  4216  000E0C  2E05               	decfsz	??_digitalWrite^0,f,c
  4217  000E0E  EF04  F007         	goto	u1485
  4218  000E12  5006               	movf	(??_digitalWrite+1)^0,w,c
  4219  000E14  1280               	iorwf	128,f,c	;volatile
  4220  000E16  EF0C  F008         	goto	l52
  4221  000E1A                     l2081:
  4222  000E1A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4223  000E1E  0E01               	movlw	1
  4224  000E20  6E06               	movwf	(??_digitalWrite+1)^0,c
  4225  000E22  2A05               	incf	??_digitalWrite^0,f,c
  4226  000E24  EF16  F007         	goto	u1494
  4227  000E28                     u1495:
  4228  000E28  90D8               	bcf	status,0,c
  4229  000E2A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4230  000E2C                     u1494:
  4231  000E2C  2E05               	decfsz	??_digitalWrite^0,f,c
  4232  000E2E  EF14  F007         	goto	u1495
  4233  000E32  5006               	movf	(??_digitalWrite+1)^0,w,c
  4234  000E34  0AFF               	xorlw	255
  4235  000E36  1680               	andwf	128,f,c	;volatile
  4236  000E38  EF0C  F008         	goto	l52
  4237  000E3C                     l2083:
  4238  000E3C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4239  000E3E  EF2C  F007         	goto	u1500
  4240  000E42  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4241  000E44  E107               	bnz	u1501
  4242  000E46  0E10               	movlw	16
  4243  000E48  5C01               	subwf	digitalWrite@pin^0,w,c
  4244  000E4A  B0D8               	btfsc	status,0,c
  4245  000E4C  EF2A  F007         	goto	u1501
  4246  000E50  EF2C  F007         	goto	u1500
  4247  000E54                     u1501:
  4248  000E54  EF5A  F007         	goto	l2091
  4249  000E58                     u1500:
  4250  000E58                     
  4251                           ;io.c: 20:         pin -=8;
  4252  000E58  0EF8               	movlw	248
  4253  000E5A  2601               	addwf	digitalWrite@pin^0,f,c
  4254  000E5C  0EFF               	movlw	255
  4255  000E5E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4256                           
  4257                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4258  000E60  5003               	movf	digitalWrite@value^0,w,c
  4259  000E62  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4260  000E64  B4D8               	btfsc	status,2,c
  4261  000E66  EF37  F007         	goto	u1511
  4262  000E6A  EF39  F007         	goto	u1510
  4263  000E6E                     u1511:
  4264  000E6E  EF49  F007         	goto	l2089
  4265  000E72                     u1510:
  4266  000E72  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4267  000E76  0E01               	movlw	1
  4268  000E78  6E06               	movwf	(??_digitalWrite+1)^0,c
  4269  000E7A  2A05               	incf	??_digitalWrite^0,f,c
  4270  000E7C  EF42  F007         	goto	u1524
  4271  000E80                     u1525:
  4272  000E80  90D8               	bcf	status,0,c
  4273  000E82  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4274  000E84                     u1524:
  4275  000E84  2E05               	decfsz	??_digitalWrite^0,f,c
  4276  000E86  EF40  F007         	goto	u1525
  4277  000E8A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4278  000E8C  1281               	iorwf	129,f,c	;volatile
  4279  000E8E  EF0C  F008         	goto	l52
  4280  000E92                     l2089:
  4281  000E92  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4282  000E96  0E01               	movlw	1
  4283  000E98  6E06               	movwf	(??_digitalWrite+1)^0,c
  4284  000E9A  2A05               	incf	??_digitalWrite^0,f,c
  4285  000E9C  EF52  F007         	goto	u1534
  4286  000EA0                     u1535:
  4287  000EA0  90D8               	bcf	status,0,c
  4288  000EA2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4289  000EA4                     u1534:
  4290  000EA4  2E05               	decfsz	??_digitalWrite^0,f,c
  4291  000EA6  EF50  F007         	goto	u1535
  4292  000EAA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4293  000EAC  0AFF               	xorlw	255
  4294  000EAE  1681               	andwf	129,f,c	;volatile
  4295  000EB0  EF0C  F008         	goto	l52
  4296  000EB4                     l2091:
  4297  000EB4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4298  000EB6  EF68  F007         	goto	u1540
  4299  000EBA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4300  000EBC  E107               	bnz	u1541
  4301  000EBE  0E18               	movlw	24
  4302  000EC0  5C01               	subwf	digitalWrite@pin^0,w,c
  4303  000EC2  B0D8               	btfsc	status,0,c
  4304  000EC4  EF66  F007         	goto	u1541
  4305  000EC8  EF68  F007         	goto	u1540
  4306  000ECC                     u1541:
  4307  000ECC  EF96  F007         	goto	l2099
  4308  000ED0                     u1540:
  4309  000ED0                     
  4310                           ;io.c: 24:         pin -=16;
  4311  000ED0  0EF0               	movlw	240
  4312  000ED2  2601               	addwf	digitalWrite@pin^0,f,c
  4313  000ED4  0EFF               	movlw	255
  4314  000ED6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4315                           
  4316                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4317  000ED8  5003               	movf	digitalWrite@value^0,w,c
  4318  000EDA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4319  000EDC  B4D8               	btfsc	status,2,c
  4320  000EDE  EF73  F007         	goto	u1551
  4321  000EE2  EF75  F007         	goto	u1550
  4322  000EE6                     u1551:
  4323  000EE6  EF85  F007         	goto	l2097
  4324  000EEA                     u1550:
  4325  000EEA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4326  000EEE  0E01               	movlw	1
  4327  000EF0  6E06               	movwf	(??_digitalWrite+1)^0,c
  4328  000EF2  2A05               	incf	??_digitalWrite^0,f,c
  4329  000EF4  EF7E  F007         	goto	u1564
  4330  000EF8                     u1565:
  4331  000EF8  90D8               	bcf	status,0,c
  4332  000EFA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4333  000EFC                     u1564:
  4334  000EFC  2E05               	decfsz	??_digitalWrite^0,f,c
  4335  000EFE  EF7C  F007         	goto	u1565
  4336  000F02  5006               	movf	(??_digitalWrite+1)^0,w,c
  4337  000F04  1282               	iorwf	130,f,c	;volatile
  4338  000F06  EF0C  F008         	goto	l52
  4339  000F0A                     l2097:
  4340  000F0A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4341  000F0E  0E01               	movlw	1
  4342  000F10  6E06               	movwf	(??_digitalWrite+1)^0,c
  4343  000F12  2A05               	incf	??_digitalWrite^0,f,c
  4344  000F14  EF8E  F007         	goto	u1574
  4345  000F18                     u1575:
  4346  000F18  90D8               	bcf	status,0,c
  4347  000F1A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4348  000F1C                     u1574:
  4349  000F1C  2E05               	decfsz	??_digitalWrite^0,f,c
  4350  000F1E  EF8C  F007         	goto	u1575
  4351  000F22  5006               	movf	(??_digitalWrite+1)^0,w,c
  4352  000F24  0AFF               	xorlw	255
  4353  000F26  1682               	andwf	130,f,c	;volatile
  4354  000F28  EF0C  F008         	goto	l52
  4355  000F2C                     l2099:
  4356  000F2C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4357  000F2E  EFA4  F007         	goto	u1580
  4358  000F32  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4359  000F34  E107               	bnz	u1581
  4360  000F36  0E20               	movlw	32
  4361  000F38  5C01               	subwf	digitalWrite@pin^0,w,c
  4362  000F3A  B0D8               	btfsc	status,0,c
  4363  000F3C  EFA2  F007         	goto	u1581
  4364  000F40  EFA4  F007         	goto	u1580
  4365  000F44                     u1581:
  4366  000F44  EFD2  F007         	goto	l2107
  4367  000F48                     u1580:
  4368  000F48                     
  4369                           ;io.c: 28:         pin -=24;
  4370  000F48  0EE8               	movlw	232
  4371  000F4A  2601               	addwf	digitalWrite@pin^0,f,c
  4372  000F4C  0EFF               	movlw	255
  4373  000F4E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4374                           
  4375                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4376  000F50  5003               	movf	digitalWrite@value^0,w,c
  4377  000F52  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4378  000F54  B4D8               	btfsc	status,2,c
  4379  000F56  EFAF  F007         	goto	u1591
  4380  000F5A  EFB1  F007         	goto	u1590
  4381  000F5E                     u1591:
  4382  000F5E  EFC1  F007         	goto	l2105
  4383  000F62                     u1590:
  4384  000F62  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4385  000F66  0E01               	movlw	1
  4386  000F68  6E06               	movwf	(??_digitalWrite+1)^0,c
  4387  000F6A  2A05               	incf	??_digitalWrite^0,f,c
  4388  000F6C  EFBA  F007         	goto	u1604
  4389  000F70                     u1605:
  4390  000F70  90D8               	bcf	status,0,c
  4391  000F72  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4392  000F74                     u1604:
  4393  000F74  2E05               	decfsz	??_digitalWrite^0,f,c
  4394  000F76  EFB8  F007         	goto	u1605
  4395  000F7A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4396  000F7C  1283               	iorwf	131,f,c	;volatile
  4397  000F7E  EF0C  F008         	goto	l52
  4398  000F82                     l2105:
  4399  000F82  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4400  000F86  0E01               	movlw	1
  4401  000F88  6E06               	movwf	(??_digitalWrite+1)^0,c
  4402  000F8A  2A05               	incf	??_digitalWrite^0,f,c
  4403  000F8C  EFCA  F007         	goto	u1614
  4404  000F90                     u1615:
  4405  000F90  90D8               	bcf	status,0,c
  4406  000F92  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4407  000F94                     u1614:
  4408  000F94  2E05               	decfsz	??_digitalWrite^0,f,c
  4409  000F96  EFC8  F007         	goto	u1615
  4410  000F9A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4411  000F9C  0AFF               	xorlw	255
  4412  000F9E  1683               	andwf	131,f,c	;volatile
  4413  000FA0  EF0C  F008         	goto	l52
  4414  000FA4                     l2107:
  4415  000FA4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4416  000FA6  EFE0  F007         	goto	u1620
  4417  000FAA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4418  000FAC  E107               	bnz	u1621
  4419  000FAE  0E28               	movlw	40
  4420  000FB0  5C01               	subwf	digitalWrite@pin^0,w,c
  4421  000FB2  B0D8               	btfsc	status,0,c
  4422  000FB4  EFDE  F007         	goto	u1621
  4423  000FB8  EFE0  F007         	goto	u1620
  4424  000FBC                     u1621:
  4425  000FBC  EF0C  F008         	goto	l52
  4426  000FC0                     u1620:
  4427  000FC0                     
  4428                           ;io.c: 32:         pin -=32;
  4429  000FC0  0EE0               	movlw	224
  4430  000FC2  2601               	addwf	digitalWrite@pin^0,f,c
  4431  000FC4  0EFF               	movlw	255
  4432  000FC6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4433                           
  4434                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4435  000FC8  5003               	movf	digitalWrite@value^0,w,c
  4436  000FCA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4437  000FCC  B4D8               	btfsc	status,2,c
  4438  000FCE  EFEB  F007         	goto	u1631
  4439  000FD2  EFED  F007         	goto	u1630
  4440  000FD6                     u1631:
  4441  000FD6  EFFD  F007         	goto	l2113
  4442  000FDA                     u1630:
  4443  000FDA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4444  000FDE  0E01               	movlw	1
  4445  000FE0  6E06               	movwf	(??_digitalWrite+1)^0,c
  4446  000FE2  2A05               	incf	??_digitalWrite^0,f,c
  4447  000FE4  EFF6  F007         	goto	u1644
  4448  000FE8                     u1645:
  4449  000FE8  90D8               	bcf	status,0,c
  4450  000FEA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4451  000FEC                     u1644:
  4452  000FEC  2E05               	decfsz	??_digitalWrite^0,f,c
  4453  000FEE  EFF4  F007         	goto	u1645
  4454  000FF2  5006               	movf	(??_digitalWrite+1)^0,w,c
  4455  000FF4  1284               	iorwf	132,f,c	;volatile
  4456  000FF6  EF0C  F008         	goto	l52
  4457  000FFA                     l2113:
  4458  000FFA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4459  000FFE  0E01               	movlw	1
  4460  001000  6E06               	movwf	(??_digitalWrite+1)^0,c
  4461  001002  2A05               	incf	??_digitalWrite^0,f,c
  4462  001004  EF06  F008         	goto	u1654
  4463  001008                     u1655:
  4464  001008  90D8               	bcf	status,0,c
  4465  00100A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4466  00100C                     u1654:
  4467  00100C  2E05               	decfsz	??_digitalWrite^0,f,c
  4468  00100E  EF04  F008         	goto	u1655
  4469  001012  5006               	movf	(??_digitalWrite+1)^0,w,c
  4470  001014  0AFF               	xorlw	255
  4471  001016  1684               	andwf	132,f,c	;volatile
  4472  001018                     l52:
  4473  001018  0012               	return		;funcret
  4474  00101A                     __end_of_digitalWrite:
  4475                           	callstack 0
  4476                           
  4477 ;; *************** function _Delay2ms *****************
  4478 ;; Defined at:
  4479 ;;		line 36 in file "lcd.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  i               1    1[COMRAM] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4493 ;;      Params:         0       0       0       0       0       0       0
  4494 ;;      Locals:         1       0       0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0
  4496 ;;      Totals:         1       0       0       0       0       0       0
  4497 ;;Total ram usage:        1 bytes
  4498 ;; Hardware stack levels used: 1
  4499 ;; Hardware stack levels required when called: 1
  4500 ;; This function calls:
  4501 ;;		_Delay40us
  4502 ;; This function is called by:
  4503 ;;		_lcdCommand
  4504 ;;		_lcdInit
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text22
  4509  001EC8                     __ptext22:
  4510                           	callstack 0
  4511  001EC8                     _Delay2ms:
  4512                           	callstack 27
  4513  001EC8                     
  4514                           ;lcd.c: 37:     unsigned char i;;lcd.c: 38:     for (i = 0; i < 50; i++) {
  4515  001EC8  0E00               	movlw	0
  4516  001ECA  6E02               	movwf	Delay2ms@i^0,c
  4517  001ECC                     l2121:
  4518                           
  4519                           ;lcd.c: 39:         Delay40us();
  4520  001ECC  EC7F  F00F         	call	_Delay40us	;wreg free
  4521  001ED0                     
  4522                           ;lcd.c: 40:     }
  4523  001ED0  2A02               	incf	Delay2ms@i^0,f,c
  4524  001ED2  0E31               	movlw	49
  4525  001ED4  6402               	cpfsgt	Delay2ms@i^0,c
  4526  001ED6  EF6F  F00F         	goto	u1661
  4527  001EDA  EF71  F00F         	goto	u1660
  4528  001EDE                     u1661:
  4529  001EDE  EF66  F00F         	goto	l2121
  4530  001EE2                     u1660:
  4531  001EE2  0012               	return		;funcret
  4532  001EE4                     __end_of_Delay2ms:
  4533                           	callstack 0
  4534                           
  4535 ;; *************** function _Delay40us *****************
  4536 ;; Defined at:
  4537 ;;		line 31 in file "lcd.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  i               1    0[COMRAM] unsigned char 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4551 ;;      Params:         0       0       0       0       0       0       0
  4552 ;;      Locals:         1       0       0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0
  4554 ;;      Totals:         1       0       0       0       0       0       0
  4555 ;;Total ram usage:        1 bytes
  4556 ;; Hardware stack levels used: 1
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_Delay2ms
  4561 ;;		_lcdCommand
  4562 ;;		_lcdData
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           	psect	text23
  4567  001EFE                     __ptext23:
  4568                           	callstack 0
  4569  001EFE                     _Delay40us:
  4570                           	callstack 28
  4571  001EFE                     
  4572                           ;lcd.c: 32:     unsigned char i;;lcd.c: 33:     for (i = 0; i < 25; i++);
  4573  001EFE  0E00               	movlw	0
  4574  001F00  6E01               	movwf	Delay40us@i^0,c
  4575  001F02                     l2071:
  4576  001F02  2A01               	incf	Delay40us@i^0,f,c
  4577  001F04  0E18               	movlw	24
  4578  001F06  6401               	cpfsgt	Delay40us@i^0,c
  4579  001F08  EF88  F00F         	goto	u1451
  4580  001F0C  EF8A  F00F         	goto	u1450
  4581  001F10                     u1451:
  4582  001F10  EF81  F00F         	goto	l2071
  4583  001F14                     u1450:
  4584  001F14  0012               	return		;funcret
  4585  001F16                     __end_of_Delay40us:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _kpRead *****************
  4589 ;; Defined at:
  4590 ;;		line 37 in file "keypad.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  2    0[COMRAM] unsigned int 
  4597 ;; Registers used:
  4598 ;;		None
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4604 ;;      Params:         2       0       0       0       0       0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0
  4607 ;;      Totals:         2       0       0       0       0       0       0
  4608 ;;Total ram usage:        2 bytes
  4609 ;; Hardware stack levels used: 1
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_escolheMusica
  4614 ;;		_tocaMusica
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text24
  4619  001F20                     __ptext24:
  4620                           	callstack 0
  4621  001F20                     _kpRead:
  4622                           	callstack 28
  4623  001F20                     
  4624                           ;keypad.c: 38:     return valor;
  4625  001F20  C0F2  F001         	movff	_valor,?_kpRead
  4626  001F24  C0F3  F002         	movff	_valor+1,?_kpRead+1
  4627  001F28  0012               	return		;funcret
  4628  001F2A                     __end_of_kpRead:
  4629                           	callstack 0
  4630                           
  4631 ;; *************** function _kpDebounce *****************
  4632 ;; Defined at:
  4633 ;;		line 41 in file "keypad.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  k               2    6[COMRAM] int 
  4638 ;;  i               1    9[COMRAM] unsigned char 
  4639 ;;  j               1    8[COMRAM] unsigned char 
  4640 ;;  old_D           1    5[COMRAM] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0, prodl, prodh
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4650 ;;      Params:         0       0       0       0       0       0       0
  4651 ;;      Locals:         5       0       0       0       0       0       0
  4652 ;;      Temps:          5       0       0       0       0       0       0
  4653 ;;      Totals:        10       0       0       0       0       0       0
  4654 ;;Total ram usage:       10 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_main
  4660 ;;		_escolheMusica
  4661 ;;		_tocaMusica
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text25
  4666  00101A                     __ptext25:
  4667                           	callstack 0
  4668  00101A                     _kpDebounce:
  4669                           	callstack 30
  4670  00101A                     
  4671                           ;keypad.c: 42:     unsigned char i, j;;keypad.c: 43:     static unsigned char tempo;;key
      +                          pad.c: 44:     static unsigned int valorNovo = 0x0000;;keypad.c: 45:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 48:     unsigned char old_D;;keypad.c: 49:     old_
      +                          D = PORTD;
  4672  00101A  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  4673  00101E                     
  4674                           ;keypad.c: 53:     TRISD |= 0x0f;
  4675  00101E  0E0F               	movlw	15
  4676  001020  1295               	iorwf	149,f,c	;volatile
  4677  001022                     
  4678                           ;keypad.c: 55:     for (i = 0; i < 3; i++) {
  4679  001022  0E00               	movlw	0
  4680  001024  6E0A               	movwf	kpDebounce@i^0,c
  4681  001026                     l2277:
  4682                           
  4683                           ;keypad.c: 57:         TRISB &= 0xF8;
  4684  001026  0EF8               	movlw	248
  4685  001028  1693               	andwf	147,f,c	;volatile
  4686                           
  4687                           ;keypad.c: 59:         ((TRISB) |= (1<<(i)));
  4688  00102A  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  4689  00102E  0E01               	movlw	1
  4690  001030  6E02               	movwf	(??_kpDebounce+1)^0,c
  4691  001032  2A01               	incf	??_kpDebounce^0,f,c
  4692  001034  EF1E  F008         	goto	u1814
  4693  001038                     u1815:
  4694  001038  90D8               	bcf	status,0,c
  4695  00103A  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4696  00103C                     u1814:
  4697  00103C  2E01               	decfsz	??_kpDebounce^0,f,c
  4698  00103E  EF1C  F008         	goto	u1815
  4699  001042  5002               	movf	(??_kpDebounce+1)^0,w,c
  4700  001044  1293               	iorwf	147,f,c	;volatile
  4701                           
  4702                           ;keypad.c: 61:         PORTB |= 0x07;
  4703  001046  0E07               	movlw	7
  4704  001048  1281               	iorwf	129,f,c	;volatile
  4705                           
  4706                           ;keypad.c: 62:         ((PORTB) &= ~(1<<(i)));
  4707  00104A  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  4708  00104E  0E01               	movlw	1
  4709  001050  6E02               	movwf	(??_kpDebounce+1)^0,c
  4710  001052  2A01               	incf	??_kpDebounce^0,f,c
  4711  001054  EF2E  F008         	goto	u1824
  4712  001058                     u1825:
  4713  001058  90D8               	bcf	status,0,c
  4714  00105A  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4715  00105C                     u1824:
  4716  00105C  2E01               	decfsz	??_kpDebounce^0,f,c
  4717  00105E  EF2C  F008         	goto	u1825
  4718  001062  5002               	movf	(??_kpDebounce+1)^0,w,c
  4719  001064  0AFF               	xorlw	255
  4720  001066  1681               	andwf	129,f,c	;volatile
  4721  001068                     
  4722                           ;keypad.c: 65:         for (int k = 0; k < 10; k++);
  4723  001068  0E00               	movlw	0
  4724  00106A  6E08               	movwf	(kpDebounce@k+1)^0,c
  4725  00106C  0E00               	movlw	0
  4726  00106E  6E07               	movwf	kpDebounce@k^0,c
  4727  001070                     l2285:
  4728  001070  4A07               	infsnz	kpDebounce@k^0,f,c
  4729  001072  2A08               	incf	(kpDebounce@k+1)^0,f,c
  4730  001074  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  4731  001076  EF46  F008         	goto	u1831
  4732  00107A  5008               	movf	(kpDebounce@k+1)^0,w,c
  4733  00107C  E109               	bnz	u1830
  4734  00107E  0E0A               	movlw	10
  4735  001080  5C07               	subwf	kpDebounce@k^0,w,c
  4736  001082  A0D8               	btfss	status,0,c
  4737  001084  EF46  F008         	goto	u1831
  4738  001088  EF48  F008         	goto	u1830
  4739  00108C                     u1831:
  4740  00108C  EF38  F008         	goto	l2285
  4741  001090                     u1830:
  4742  001090                     
  4743                           ;keypad.c: 68:         for (j = 0; j < 4; j++) {
  4744  001090  0E00               	movlw	0
  4745  001092  6E09               	movwf	kpDebounce@j^0,c
  4746  001094                     l2295:
  4747                           
  4748                           ;keypad.c: 69:             if (!((PORTD) & (1<<(j)))) {
  4749  001094  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  4750  001098  0E01               	movlw	1
  4751  00109A  6E02               	movwf	(??_kpDebounce+1)^0,c
  4752  00109C  2A01               	incf	??_kpDebounce^0,f,c
  4753  00109E  EF53  F008         	goto	u1844
  4754  0010A2                     u1845:
  4755  0010A2  90D8               	bcf	status,0,c
  4756  0010A4  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4757  0010A6                     u1844:
  4758  0010A6  2E01               	decfsz	??_kpDebounce^0,f,c
  4759  0010A8  EF51  F008         	goto	u1845
  4760  0010AC  5002               	movf	(??_kpDebounce+1)^0,w,c
  4761  0010AE  1483               	andwf	131,w,c	;volatile
  4762  0010B0  0900               	iorlw	0
  4763  0010B2  A4D8               	btfss	status,2,c
  4764  0010B4  EF5E  F008         	goto	u1851
  4765  0010B8  EF60  F008         	goto	u1850
  4766  0010BC                     u1851:
  4767  0010BC  EF79  F008         	goto	l2299
  4768  0010C0                     u1850:
  4769  0010C0                     
  4770                           ;keypad.c: 70:                 ((valorNovo) |= (1<<((i * 4) + j)));
  4771  0010C0  500A               	movf	kpDebounce@i^0,w,c
  4772  0010C2  0D04               	mullw	4
  4773  0010C4  50F3               	movf	243,w,c
  4774  0010C6  2409               	addwf	kpDebounce@j^0,w,c
  4775  0010C8  6E01               	movwf	??_kpDebounce^0,c
  4776  0010CA  0E01               	movlw	1
  4777  0010CC  6E02               	movwf	(??_kpDebounce+1)^0,c
  4778  0010CE  0E00               	movlw	0
  4779  0010D0  6E03               	movwf	(??_kpDebounce+2)^0,c
  4780  0010D2  2A01               	incf	??_kpDebounce^0,f,c
  4781  0010D4  EF6F  F008         	goto	u1864
  4782  0010D8                     u1865:
  4783  0010D8  90D8               	bcf	status,0,c
  4784  0010DA  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4785  0010DC  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  4786  0010DE                     u1864:
  4787  0010DE  2E01               	decfsz	??_kpDebounce^0,f,c
  4788  0010E0  EF6C  F008         	goto	u1865
  4789  0010E4  5002               	movf	(??_kpDebounce+1)^0,w,c
  4790  0010E6  0100               	movlb	0	; () banked
  4791  0010E8  13F0               	iorwf	kpDebounce@valorNovo& (0+255),f,b
  4792  0010EA  5003               	movf	(??_kpDebounce+2)^0,w,c
  4793  0010EC  13F1               	iorwf	(kpDebounce@valorNovo+1)& (0+255),f,b
  4794                           
  4795                           ;keypad.c: 71:             } else {
  4796  0010EE  EF94  F008         	goto	l2301
  4797  0010F2                     l2299:
  4798                           
  4799                           ;keypad.c: 72:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  4800  0010F2  500A               	movf	kpDebounce@i^0,w,c
  4801  0010F4  0D04               	mullw	4
  4802  0010F6  50F3               	movf	243,w,c
  4803  0010F8  2409               	addwf	kpDebounce@j^0,w,c
  4804  0010FA  6E01               	movwf	??_kpDebounce^0,c
  4805  0010FC  0E01               	movlw	1
  4806  0010FE  6E02               	movwf	(??_kpDebounce+1)^0,c
  4807  001100  0E00               	movlw	0
  4808  001102  6E03               	movwf	(??_kpDebounce+2)^0,c
  4809  001104  2A01               	incf	??_kpDebounce^0,f,c
  4810  001106  EF88  F008         	goto	u1874
  4811  00110A                     u1875:
  4812  00110A  90D8               	bcf	status,0,c
  4813  00110C  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4814  00110E  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  4815  001110                     u1874:
  4816  001110  2E01               	decfsz	??_kpDebounce^0,f,c
  4817  001112  EF85  F008         	goto	u1875
  4818  001116  1C02               	comf	(??_kpDebounce+1)^0,w,c
  4819  001118  6E04               	movwf	(??_kpDebounce+3)^0,c
  4820  00111A  1C03               	comf	(??_kpDebounce+2)^0,w,c
  4821  00111C  6E05               	movwf	(??_kpDebounce+4)^0,c
  4822  00111E  5004               	movf	(??_kpDebounce+3)^0,w,c
  4823  001120  0100               	movlb	0	; () banked
  4824  001122  17F0               	andwf	kpDebounce@valorNovo& (0+255),f,b
  4825  001124  5005               	movf	(??_kpDebounce+4)^0,w,c
  4826  001126  17F1               	andwf	(kpDebounce@valorNovo+1)& (0+255),f,b
  4827  001128                     l2301:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;keypad.c: 74:         }
  4831  001128  2A09               	incf	kpDebounce@j^0,f,c
  4832  00112A                     
  4833                           ; BSR set to: 0
  4834  00112A  0E03               	movlw	3
  4835  00112C  6409               	cpfsgt	kpDebounce@j^0,c
  4836  00112E  EF9B  F008         	goto	u1881
  4837  001132  EF9D  F008         	goto	u1880
  4838  001136                     u1881:
  4839  001136  EF4A  F008         	goto	l2295
  4840  00113A                     u1880:
  4841  00113A                     
  4842                           ; BSR set to: 0
  4843                           ;keypad.c: 75:     }
  4844  00113A  2A0A               	incf	kpDebounce@i^0,f,c
  4845  00113C                     
  4846                           ; BSR set to: 0
  4847  00113C  0E02               	movlw	2
  4848  00113E  640A               	cpfsgt	kpDebounce@i^0,c
  4849  001140  EFA4  F008         	goto	u1891
  4850  001144  EFA6  F008         	goto	u1890
  4851  001148                     u1891:
  4852  001148  EF13  F008         	goto	l2277
  4853  00114C                     u1890:
  4854  00114C                     
  4855                           ; BSR set to: 0
  4856                           ;keypad.c: 76:     if (valorAntigo == valorNovo) {
  4857  00114C  51F0               	movf	kpDebounce@valorNovo& (0+255),w,b
  4858  00114E  19EE               	xorwf	kpDebounce@valorAntigo& (0+255),w,b
  4859  001150  E107               	bnz	u1901
  4860  001152  51F1               	movf	(kpDebounce@valorNovo+1)& (0+255),w,b
  4861  001154  19EF               	xorwf	(kpDebounce@valorAntigo+1)& (0+255),w,b
  4862  001156  A4D8               	btfss	status,2,c
  4863  001158  EFB0  F008         	goto	u1901
  4864  00115C  EFB2  F008         	goto	u1900
  4865  001160                     u1901:
  4866  001160  EFB5  F008         	goto	l2313
  4867  001164                     u1900:
  4868  001164                     
  4869                           ; BSR set to: 0
  4870                           ;keypad.c: 77:         tempo--;
  4871  001164  067B               	decf	kpDebounce@tempo^0,f,c
  4872                           
  4873                           ;keypad.c: 78:     } else {
  4874  001166  EFBB  F008         	goto	l121
  4875  00116A                     l2313:
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;keypad.c: 79:         tempo = 10;
  4879  00116A  0E0A               	movlw	10
  4880  00116C  6E7B               	movwf	kpDebounce@tempo^0,c
  4881  00116E                     
  4882                           ; BSR set to: 0
  4883                           ;keypad.c: 80:         valorAntigo = valorNovo;
  4884  00116E  C0F0  F0EE         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  4885  001172  C0F1  F0EF         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  4886  001176                     l121:
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;keypad.c: 82:     if (tempo == 0) {
  4890  001176  507B               	movf	kpDebounce@tempo^0,w,c
  4891  001178  A4D8               	btfss	status,2,c
  4892  00117A  EFC1  F008         	goto	u1911
  4893  00117E  EFC3  F008         	goto	u1910
  4894  001182                     u1911:
  4895  001182  EFC7  F008         	goto	l122
  4896  001186                     u1910:
  4897  001186                     
  4898                           ; BSR set to: 0
  4899                           ;keypad.c: 83:         valor = valorAntigo;
  4900  001186  C0EE  F0F2         	movff	kpDebounce@valorAntigo,_valor
  4901  00118A  C0EF  F0F3         	movff	kpDebounce@valorAntigo+1,_valor+1
  4902  00118E                     l122:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;keypad.c: 85:     PORTD = old_D;
  4906  00118E  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  4907  001192                     
  4908                           ; BSR set to: 0
  4909                           ;keypad.c: 86:     TRISD = 0x00;
  4910  001192  0E00               	movlw	0
  4911  001194  6E95               	movwf	149,c	;volatile
  4912  001196                     
  4913                           ; BSR set to: 0
  4914  001196  0012               	return		;funcret
  4915  001198                     __end_of_kpDebounce:
  4916                           	callstack 0
  4917                           
  4918 ;; *************** function _alterarVolume *****************
  4919 ;; Defined at:
  4920 ;;		line 152 in file "musicas.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  opt             1    wreg     unsigned char 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  opt             1    6[COMRAM] unsigned char 
  4925 ;;  old_D           1    7[COMRAM] unsigned char 
  4926 ;;  old_A           1    0        unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  1    wreg      void 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0, cstack
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4936 ;;      Params:         0       0       0       0       0       0       0
  4937 ;;      Locals:         2       0       0       0       0       0       0
  4938 ;;      Temps:          0       0       0       0       0       0       0
  4939 ;;      Totals:         2       0       0       0       0       0       0
  4940 ;;Total ram usage:        2 bytes
  4941 ;; Hardware stack levels used: 1
  4942 ;; Hardware stack levels required when called: 1
  4943 ;; This function calls:
  4944 ;;		_atraso_ms
  4945 ;; This function is called by:
  4946 ;;		_tocaMusica
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text26
  4951  001428                     __ptext26:
  4952                           	callstack 0
  4953  001428                     _alterarVolume:
  4954                           	callstack 27
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;incstack = 0
  4958                           ;alterarVolume@opt stored from wreg
  4959  001428  6E07               	movwf	alterarVolume@opt^0,c
  4960  00142A                     
  4961                           ;musicas.c: 153:     if (opt == 1) {
  4962  00142A  0407               	decf	alterarVolume@opt^0,w,c
  4963  00142C  A4D8               	btfss	status,2,c
  4964  00142E  EF1B  F00A         	goto	u2031
  4965  001432  EF1D  F00A         	goto	u2030
  4966  001436                     u2031:
  4967  001436  EF29  F00A         	goto	l2433
  4968  00143A                     u2030:
  4969  00143A                     
  4970                           ;musicas.c: 154:         if(volume!=8){volume += 1;}
  4971  00143A  0E08               	movlw	8
  4972  00143C  187D               	xorwf	_volume^0,w,c
  4973  00143E  B4D8               	btfsc	status,2,c
  4974  001440  EF24  F00A         	goto	u2041
  4975  001444  EF26  F00A         	goto	u2040
  4976  001448                     u2041:
  4977  001448  EF32  F00A         	goto	l2437
  4978  00144C                     u2040:
  4979  00144C  2A7D               	incf	_volume^0,f,c
  4980  00144E  EF32  F00A         	goto	l2437
  4981  001452                     l2433:
  4982                           
  4983                           ;musicas.c: 156:         if(volume!=0){volume -= 1;}
  4984  001452  507D               	movf	_volume^0,w,c
  4985  001454  B4D8               	btfsc	status,2,c
  4986  001456  EF2F  F00A         	goto	u2051
  4987  00145A  EF31  F00A         	goto	u2050
  4988  00145E                     u2051:
  4989  00145E  EF32  F00A         	goto	l2437
  4990  001462                     u2050:
  4991  001462  067D               	decf	_volume^0,f,c
  4992  001464                     l2437:
  4993                           
  4994                           ;musicas.c: 158:     unsigned char old_D, old_A;;musicas.c: 159:     old_D = TRISD;
  4995  001464  CF95 F008          	movff	3989,alterarVolume@old_D	;volatile
  4996  001468                     
  4997                           ;musicas.c: 161:     PORTA=0x00;
  4998  001468  0E00               	movlw	0
  4999  00146A  6E80               	movwf	128,c	;volatile
  5000  00146C                     
  5001                           ;musicas.c: 162:     TRISD = 0x00;
  5002  00146C  0E00               	movlw	0
  5003  00146E  6E95               	movwf	149,c	;volatile
  5004  001470                     
  5005                           ;musicas.c: 164:     if (volume == 0) {
  5006  001470  507D               	movf	_volume^0,w,c
  5007  001472  A4D8               	btfss	status,2,c
  5008  001474  EF3E  F00A         	goto	u2061
  5009  001478  EF40  F00A         	goto	u2060
  5010  00147C                     u2061:
  5011  00147C  EF44  F00A         	goto	l2447
  5012  001480                     u2060:
  5013  001480                     
  5014                           ;musicas.c: 165:         PORTD = 0b00000000;
  5015  001480  0E00               	movlw	0
  5016  001482  6E83               	movwf	131,c	;volatile
  5017                           
  5018                           ;musicas.c: 166:     } else if (volume == 1) {
  5019  001484  EFAA  F00A         	goto	l2479
  5020  001488                     l2447:
  5021  001488  047D               	decf	_volume^0,w,c
  5022  00148A  A4D8               	btfss	status,2,c
  5023  00148C  EF4A  F00A         	goto	u2071
  5024  001490  EF4C  F00A         	goto	u2070
  5025  001494                     u2071:
  5026  001494  EF50  F00A         	goto	l2451
  5027  001498                     u2070:
  5028  001498                     
  5029                           ;musicas.c: 167:         PORTD = 0b10000000;
  5030  001498  0E80               	movlw	128
  5031  00149A  6E83               	movwf	131,c	;volatile
  5032                           
  5033                           ;musicas.c: 168:     } else if (volume == 2) {
  5034  00149C  EFAA  F00A         	goto	l2479
  5035  0014A0                     l2451:
  5036  0014A0  0E02               	movlw	2
  5037  0014A2  187D               	xorwf	_volume^0,w,c
  5038  0014A4  A4D8               	btfss	status,2,c
  5039  0014A6  EF57  F00A         	goto	u2081
  5040  0014AA  EF59  F00A         	goto	u2080
  5041  0014AE                     u2081:
  5042  0014AE  EF5D  F00A         	goto	l2455
  5043  0014B2                     u2080:
  5044  0014B2                     
  5045                           ;musicas.c: 169:         PORTD = 0b11000000;
  5046  0014B2  0EC0               	movlw	192
  5047  0014B4  6E83               	movwf	131,c	;volatile
  5048                           
  5049                           ;musicas.c: 170:     } else if (volume == 3) {
  5050  0014B6  EFAA  F00A         	goto	l2479
  5051  0014BA                     l2455:
  5052  0014BA  0E03               	movlw	3
  5053  0014BC  187D               	xorwf	_volume^0,w,c
  5054  0014BE  A4D8               	btfss	status,2,c
  5055  0014C0  EF64  F00A         	goto	u2091
  5056  0014C4  EF66  F00A         	goto	u2090
  5057  0014C8                     u2091:
  5058  0014C8  EF6A  F00A         	goto	l2459
  5059  0014CC                     u2090:
  5060  0014CC                     
  5061                           ;musicas.c: 171:         PORTD = 0b11100000;
  5062  0014CC  0EE0               	movlw	224
  5063  0014CE  6E83               	movwf	131,c	;volatile
  5064                           
  5065                           ;musicas.c: 172:     } else if (volume == 4) {
  5066  0014D0  EFAA  F00A         	goto	l2479
  5067  0014D4                     l2459:
  5068  0014D4  0E04               	movlw	4
  5069  0014D6  187D               	xorwf	_volume^0,w,c
  5070  0014D8  A4D8               	btfss	status,2,c
  5071  0014DA  EF71  F00A         	goto	u2101
  5072  0014DE  EF73  F00A         	goto	u2100
  5073  0014E2                     u2101:
  5074  0014E2  EF77  F00A         	goto	l2463
  5075  0014E6                     u2100:
  5076  0014E6                     
  5077                           ;musicas.c: 173:         PORTD = 0b11110000;
  5078  0014E6  0EF0               	movlw	240
  5079  0014E8  6E83               	movwf	131,c	;volatile
  5080                           
  5081                           ;musicas.c: 174:     } else if (volume == 5) {
  5082  0014EA  EFAA  F00A         	goto	l2479
  5083  0014EE                     l2463:
  5084  0014EE  0E05               	movlw	5
  5085  0014F0  187D               	xorwf	_volume^0,w,c
  5086  0014F2  A4D8               	btfss	status,2,c
  5087  0014F4  EF7E  F00A         	goto	u2111
  5088  0014F8  EF80  F00A         	goto	u2110
  5089  0014FC                     u2111:
  5090  0014FC  EF84  F00A         	goto	l2467
  5091  001500                     u2110:
  5092  001500                     
  5093                           ;musicas.c: 175:         PORTD = 0b11111000;
  5094  001500  0EF8               	movlw	248
  5095  001502  6E83               	movwf	131,c	;volatile
  5096                           
  5097                           ;musicas.c: 176:     } else if (volume == 6) {
  5098  001504  EFAA  F00A         	goto	l2479
  5099  001508                     l2467:
  5100  001508  0E06               	movlw	6
  5101  00150A  187D               	xorwf	_volume^0,w,c
  5102  00150C  A4D8               	btfss	status,2,c
  5103  00150E  EF8B  F00A         	goto	u2121
  5104  001512  EF8D  F00A         	goto	u2120
  5105  001516                     u2121:
  5106  001516  EF91  F00A         	goto	l2471
  5107  00151A                     u2120:
  5108  00151A                     
  5109                           ;musicas.c: 177:         PORTD = 0b11111100;
  5110  00151A  0EFC               	movlw	252
  5111  00151C  6E83               	movwf	131,c	;volatile
  5112                           
  5113                           ;musicas.c: 178:     } else if (volume == 7) {
  5114  00151E  EFAA  F00A         	goto	l2479
  5115  001522                     l2471:
  5116  001522  0E07               	movlw	7
  5117  001524  187D               	xorwf	_volume^0,w,c
  5118  001526  A4D8               	btfss	status,2,c
  5119  001528  EF98  F00A         	goto	u2131
  5120  00152C  EF9A  F00A         	goto	u2130
  5121  001530                     u2131:
  5122  001530  EF9E  F00A         	goto	l2475
  5123  001534                     u2130:
  5124  001534                     
  5125                           ;musicas.c: 179:         PORTD = 0b11111110;
  5126  001534  0EFE               	movlw	254
  5127  001536  6E83               	movwf	131,c	;volatile
  5128                           
  5129                           ;musicas.c: 180:     } else if (volume == 8) {
  5130  001538  EFAA  F00A         	goto	l2479
  5131  00153C                     l2475:
  5132  00153C  0E08               	movlw	8
  5133  00153E  187D               	xorwf	_volume^0,w,c
  5134  001540  A4D8               	btfss	status,2,c
  5135  001542  EFA5  F00A         	goto	u2141
  5136  001546  EFA7  F00A         	goto	u2140
  5137  00154A                     u2141:
  5138  00154A  EFAA  F00A         	goto	l437
  5139  00154E                     u2140:
  5140  00154E                     
  5141                           ;musicas.c: 181:         PORTD = 0b11111111;
  5142  00154E  6883               	setf	131,c	;volatile
  5143  001550  EFAA  F00A         	goto	l2479
  5144  001554                     l437:
  5145  001554                     l2479:
  5146                           
  5147                           ;musicas.c: 183:     atraso_ms(500);
  5148  001554  0E01               	movlw	1
  5149  001556  6E02               	movwf	(atraso_ms@t+1)^0,c
  5150  001558  0EF4               	movlw	244
  5151  00155A  6E01               	movwf	atraso_ms@t^0,c
  5152  00155C  EC3F  F00E         	call	_atraso_ms	;wreg free
  5153  001560                     
  5154                           ;musicas.c: 184:     TRISD=old_D;
  5155  001560  C008  FF95         	movff	alterarVolume@old_D,3989	;volatile
  5156  001564  0012               	return		;funcret
  5157  001566                     __end_of_alterarVolume:
  5158                           	callstack 0
  5159                           
  5160 ;; *************** function _atraso_ms *****************
  5161 ;; Defined at:
  5162 ;;		line 3 in file "delay.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  t               2    0[COMRAM] int 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  i               2    2[COMRAM] volatile unsigned int 
  5167 ;;  k               1    5[COMRAM] volatile unsigned char 
  5168 ;;  j               1    4[COMRAM] volatile unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      void 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5178 ;;      Params:         2       0       0       0       0       0       0
  5179 ;;      Locals:         4       0       0       0       0       0       0
  5180 ;;      Temps:          0       0       0       0       0       0       0
  5181 ;;      Totals:         6       0       0       0       0       0       0
  5182 ;;Total ram usage:        6 bytes
  5183 ;; Hardware stack levels used: 1
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_main
  5188 ;;		_escolheMusica
  5189 ;;		_tocaMusica
  5190 ;;		_alterarVolume
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text27
  5195  001C7E                     __ptext27:
  5196                           	callstack 0
  5197  001C7E                     _atraso_ms:
  5198                           	callstack 28
  5199  001C7E                     
  5200                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
  5201  001C7E  0E00               	movlw	0
  5202  001C80  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  5203  001C82  0E00               	movlw	0
  5204  001C84  6E03               	movwf	atraso_ms@i^0,c	;volatile
  5205  001C86  EF65  F00E         	goto	l2195
  5206  001C8A                     l2173:
  5207                           
  5208                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
  5209  001C8A  0E00               	movlw	0
  5210  001C8C  6E05               	movwf	atraso_ms@j^0,c	;volatile
  5211  001C8E                     l2175:
  5212  001C8E  0E28               	movlw	40
  5213  001C90  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  5214  001C92  EF4D  F00E         	goto	u1731
  5215  001C96  EF4F  F00E         	goto	u1730
  5216  001C9A                     u1731:
  5217  001C9A  EF51  F00E         	goto	l2179
  5218  001C9E                     u1730:
  5219  001C9E  EF63  F00E         	goto	l2193
  5220  001CA2                     l2179:
  5221                           
  5222                           ;delay.c: 9:             for (k = 0; k < 3; k++);
  5223  001CA2  0E00               	movlw	0
  5224  001CA4  6E06               	movwf	atraso_ms@k^0,c	;volatile
  5225  001CA6                     l2181:
  5226  001CA6  0E02               	movlw	2
  5227  001CA8  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  5228  001CAA  EF59  F00E         	goto	u1741
  5229  001CAE  EF5B  F00E         	goto	u1740
  5230  001CB2                     u1741:
  5231  001CB2  EF5D  F00E         	goto	l2185
  5232  001CB6                     u1740:
  5233  001CB6  EF60  F00E         	goto	l2189
  5234  001CBA                     l2185:
  5235  001CBA  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  5236  001CBC  EF53  F00E         	goto	l2181
  5237  001CC0                     l2189:
  5238                           
  5239                           ;delay.c: 10:         }
  5240  001CC0  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  5241  001CC2  EF47  F00E         	goto	l2175
  5242  001CC6                     l2193:
  5243                           
  5244                           ;delay.c: 11:     }
  5245  001CC6  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  5246  001CC8  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  5247  001CCA                     l2195:
  5248  001CCA  5001               	movf	atraso_ms@t^0,w,c
  5249  001CCC  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  5250  001CCE  5002               	movf	(atraso_ms@t+1)^0,w,c
  5251  001CD0  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  5252  001CD2  A0D8               	btfss	status,0,c
  5253  001CD4  EF6E  F00E         	goto	u1751
  5254  001CD8  EF70  F00E         	goto	u1750
  5255  001CDC                     u1751:
  5256  001CDC  EF45  F00E         	goto	l2173
  5257  001CE0                     u1750:
  5258  001CE0  0012               	return		;funcret
  5259  001CE2                     __end_of_atraso_ms:
  5260                           	callstack 0
  5261                           
  5262 ;; *************** function ___awmod *****************
  5263 ;; Defined at:
  5264 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  dividend        2    8[COMRAM] int 
  5267 ;;  divisor         2   10[COMRAM] int 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  sign            1   13[COMRAM] unsigned char 
  5270 ;;  counter         1   12[COMRAM] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  2    8[COMRAM] int 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5280 ;;      Params:         4       0       0       0       0       0       0
  5281 ;;      Locals:         2       0       0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0
  5283 ;;      Totals:         6       0       0       0       0       0       0
  5284 ;;Total ram usage:        6 bytes
  5285 ;; Hardware stack levels used: 1
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_tocaMusica
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text28
  5294  001736                     __ptext28:
  5295                           	callstack 0
  5296  001736                     ___awmod:
  5297                           	callstack 28
  5298  001736  0E00               	movlw	0
  5299  001738  6E0E               	movwf	___awmod@sign^0,c
  5300  00173A  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  5301  00173C  EFA4  F00B         	goto	u2210
  5302  001740  EFA2  F00B         	goto	u2211
  5303  001744                     u2211:
  5304  001744  EFAA  F00B         	goto	l2535
  5305  001748                     u2210:
  5306  001748  6C09               	negf	___awmod@dividend^0,c
  5307  00174A  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5308  00174C  B0D8               	btfsc	status,0,c
  5309  00174E  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5310  001750  0E01               	movlw	1
  5311  001752  6E0E               	movwf	___awmod@sign^0,c
  5312  001754                     l2535:
  5313  001754  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  5314  001756  EFB1  F00B         	goto	u2220
  5315  00175A  EFAF  F00B         	goto	u2221
  5316  00175E                     u2221:
  5317  00175E  EFB5  F00B         	goto	l2539
  5318  001762                     u2220:
  5319  001762  6C0B               	negf	___awmod@divisor^0,c
  5320  001764  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  5321  001766  B0D8               	btfsc	status,0,c
  5322  001768  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  5323  00176A                     l2539:
  5324  00176A  500B               	movf	___awmod@divisor^0,w,c
  5325  00176C  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  5326  00176E  B4D8               	btfsc	status,2,c
  5327  001770  EFBC  F00B         	goto	u2231
  5328  001774  EFBE  F00B         	goto	u2230
  5329  001778                     u2231:
  5330  001778  EFE2  F00B         	goto	l2555
  5331  00177C                     u2230:
  5332  00177C  0E01               	movlw	1
  5333  00177E  6E0D               	movwf	___awmod@counter^0,c
  5334  001780  EFC6  F00B         	goto	l2545
  5335  001784                     l2543:
  5336  001784  90D8               	bcf	status,0,c
  5337  001786  360B               	rlcf	___awmod@divisor^0,f,c
  5338  001788  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  5339  00178A  2A0D               	incf	___awmod@counter^0,f,c
  5340  00178C                     l2545:
  5341  00178C  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  5342  00178E  EFCB  F00B         	goto	u2241
  5343  001792  EFCD  F00B         	goto	u2240
  5344  001796                     u2241:
  5345  001796  EFC2  F00B         	goto	l2543
  5346  00179A                     u2240:
  5347  00179A                     l2547:
  5348  00179A  500B               	movf	___awmod@divisor^0,w,c
  5349  00179C  5C09               	subwf	___awmod@dividend^0,w,c
  5350  00179E  500C               	movf	(___awmod@divisor+1)^0,w,c
  5351  0017A0  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  5352  0017A2  A0D8               	btfss	status,0,c
  5353  0017A4  EFD6  F00B         	goto	u2251
  5354  0017A8  EFD8  F00B         	goto	u2250
  5355  0017AC                     u2251:
  5356  0017AC  EFDC  F00B         	goto	l2551
  5357  0017B0                     u2250:
  5358  0017B0  500B               	movf	___awmod@divisor^0,w,c
  5359  0017B2  5E09               	subwf	___awmod@dividend^0,f,c
  5360  0017B4  500C               	movf	(___awmod@divisor+1)^0,w,c
  5361  0017B6  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  5362  0017B8                     l2551:
  5363  0017B8  90D8               	bcf	status,0,c
  5364  0017BA  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  5365  0017BC  320B               	rrcf	___awmod@divisor^0,f,c
  5366  0017BE  2E0D               	decfsz	___awmod@counter^0,f,c
  5367  0017C0  EFCD  F00B         	goto	l2547
  5368  0017C4                     l2555:
  5369  0017C4  500E               	movf	___awmod@sign^0,w,c
  5370  0017C6  B4D8               	btfsc	status,2,c
  5371  0017C8  EFE8  F00B         	goto	u2261
  5372  0017CC  EFEA  F00B         	goto	u2260
  5373  0017D0                     u2261:
  5374  0017D0  EFEE  F00B         	goto	l2559
  5375  0017D4                     u2260:
  5376  0017D4  6C09               	negf	___awmod@dividend^0,c
  5377  0017D6  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5378  0017D8  B0D8               	btfsc	status,0,c
  5379  0017DA  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5380  0017DC                     l2559:
  5381  0017DC  C009  F009         	movff	___awmod@dividend,?___awmod
  5382  0017E0  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  5383  0017E4  0012               	return		;funcret
  5384  0017E6                     __end_of___awmod:
  5385                           	callstack 0
  5386                           
  5387 ;; *************** function ___awdiv *****************
  5388 ;; Defined at:
  5389 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  dividend        2    0[COMRAM] int 
  5392 ;;  divisor         2    2[COMRAM] int 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  quotient        2    6[COMRAM] int 
  5395 ;;  sign            1    5[COMRAM] unsigned char 
  5396 ;;  counter         1    4[COMRAM] unsigned char 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  2    0[COMRAM] int 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2, status,0
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5406 ;;      Params:         4       0       0       0       0       0       0
  5407 ;;      Locals:         4       0       0       0       0       0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0
  5409 ;;      Totals:         8       0       0       0       0       0       0
  5410 ;;Total ram usage:        8 bytes
  5411 ;; Hardware stack levels used: 1
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		_tocaMusica
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text29
  5420  001672                     __ptext29:
  5421                           	callstack 0
  5422  001672                     ___awdiv:
  5423                           	callstack 28
  5424  001672  0E00               	movlw	0
  5425  001674  6E06               	movwf	___awdiv@sign^0,c
  5426  001676  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5427  001678  EF42  F00B         	goto	u2150
  5428  00167C  EF40  F00B         	goto	u2151
  5429  001680                     u2151:
  5430  001680  EF48  F00B         	goto	l2491
  5431  001684                     u2150:
  5432  001684  6C03               	negf	___awdiv@divisor^0,c
  5433  001686  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5434  001688  B0D8               	btfsc	status,0,c
  5435  00168A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5436  00168C  0E01               	movlw	1
  5437  00168E  6E06               	movwf	___awdiv@sign^0,c
  5438  001690                     l2491:
  5439  001690  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5440  001692  EF4F  F00B         	goto	u2160
  5441  001696  EF4D  F00B         	goto	u2161
  5442  00169A                     u2161:
  5443  00169A  EF55  F00B         	goto	l2497
  5444  00169E                     u2160:
  5445  00169E  6C01               	negf	___awdiv@dividend^0,c
  5446  0016A0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5447  0016A2  B0D8               	btfsc	status,0,c
  5448  0016A4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5449  0016A6  0E01               	movlw	1
  5450  0016A8  1A06               	xorwf	___awdiv@sign^0,f,c
  5451  0016AA                     l2497:
  5452  0016AA  0E00               	movlw	0
  5453  0016AC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5454  0016AE  0E00               	movlw	0
  5455  0016B0  6E07               	movwf	___awdiv@quotient^0,c
  5456  0016B2  5003               	movf	___awdiv@divisor^0,w,c
  5457  0016B4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5458  0016B6  B4D8               	btfsc	status,2,c
  5459  0016B8  EF60  F00B         	goto	u2171
  5460  0016BC  EF62  F00B         	goto	u2170
  5461  0016C0                     u2171:
  5462  0016C0  EF8A  F00B         	goto	l2519
  5463  0016C4                     u2170:
  5464  0016C4  0E01               	movlw	1
  5465  0016C6  6E05               	movwf	___awdiv@counter^0,c
  5466  0016C8  EF6A  F00B         	goto	l2505
  5467  0016CC                     l2503:
  5468  0016CC  90D8               	bcf	status,0,c
  5469  0016CE  3603               	rlcf	___awdiv@divisor^0,f,c
  5470  0016D0  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5471  0016D2  2A05               	incf	___awdiv@counter^0,f,c
  5472  0016D4                     l2505:
  5473  0016D4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5474  0016D6  EF6F  F00B         	goto	u2181
  5475  0016DA  EF71  F00B         	goto	u2180
  5476  0016DE                     u2181:
  5477  0016DE  EF66  F00B         	goto	l2503
  5478  0016E2                     u2180:
  5479  0016E2                     l2507:
  5480  0016E2  90D8               	bcf	status,0,c
  5481  0016E4  3607               	rlcf	___awdiv@quotient^0,f,c
  5482  0016E6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5483  0016E8  5003               	movf	___awdiv@divisor^0,w,c
  5484  0016EA  5C01               	subwf	___awdiv@dividend^0,w,c
  5485  0016EC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5486  0016EE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5487  0016F0  A0D8               	btfss	status,0,c
  5488  0016F2  EF7D  F00B         	goto	u2191
  5489  0016F6  EF7F  F00B         	goto	u2190
  5490  0016FA                     u2191:
  5491  0016FA  EF84  F00B         	goto	l2515
  5492  0016FE                     u2190:
  5493  0016FE  5003               	movf	___awdiv@divisor^0,w,c
  5494  001700  5E01               	subwf	___awdiv@dividend^0,f,c
  5495  001702  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5496  001704  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5497  001706  8007               	bsf	___awdiv@quotient^0,0,c
  5498  001708                     l2515:
  5499  001708  90D8               	bcf	status,0,c
  5500  00170A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5501  00170C  3203               	rrcf	___awdiv@divisor^0,f,c
  5502  00170E  2E05               	decfsz	___awdiv@counter^0,f,c
  5503  001710  EF71  F00B         	goto	l2507
  5504  001714                     l2519:
  5505  001714  5006               	movf	___awdiv@sign^0,w,c
  5506  001716  B4D8               	btfsc	status,2,c
  5507  001718  EF90  F00B         	goto	u2201
  5508  00171C  EF92  F00B         	goto	u2200
  5509  001720                     u2201:
  5510  001720  EF96  F00B         	goto	l2523
  5511  001724                     u2200:
  5512  001724  6C07               	negf	___awdiv@quotient^0,c
  5513  001726  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5514  001728  B0D8               	btfsc	status,0,c
  5515  00172A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5516  00172C                     l2523:
  5517  00172C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5518  001730  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5519  001734  0012               	return		;funcret
  5520  001736                     __end_of___awdiv:
  5521                           	callstack 0
  5522                           
  5523                           	psect	rparam
  5524  0000                     
  5525                           	psect	idloc
  5526                           
  5527                           ;Config register IDLOC0 @ 0x200000
  5528                           ;	unspecified, using default values
  5529  200000                     	org	2097152
  5530  200000  FF                 	db	255
  5531                           
  5532                           ;Config register IDLOC1 @ 0x200001
  5533                           ;	unspecified, using default values
  5534  200001                     	org	2097153
  5535  200001  FF                 	db	255
  5536                           
  5537                           ;Config register IDLOC2 @ 0x200002
  5538                           ;	unspecified, using default values
  5539  200002                     	org	2097154
  5540  200002  FF                 	db	255
  5541                           
  5542                           ;Config register IDLOC3 @ 0x200003
  5543                           ;	unspecified, using default values
  5544  200003                     	org	2097155
  5545  200003  FF                 	db	255
  5546                           
  5547                           ;Config register IDLOC4 @ 0x200004
  5548                           ;	unspecified, using default values
  5549  200004                     	org	2097156
  5550  200004  FF                 	db	255
  5551                           
  5552                           ;Config register IDLOC5 @ 0x200005
  5553                           ;	unspecified, using default values
  5554  200005                     	org	2097157
  5555  200005  FF                 	db	255
  5556                           
  5557                           ;Config register IDLOC6 @ 0x200006
  5558                           ;	unspecified, using default values
  5559  200006                     	org	2097158
  5560  200006  FF                 	db	255
  5561                           
  5562                           ;Config register IDLOC7 @ 0x200007
  5563                           ;	unspecified, using default values
  5564  200007                     	org	2097159
  5565  200007  FF                 	db	255
  5566                           
  5567                           	psect	config
  5568                           
  5569                           ; Padding undefined space
  5570  300000                     	org	3145728
  5571  300000  FF                 	db	255
  5572                           
  5573                           ;Config register CONFIG1H @ 0x300001
  5574                           ;	Oscillator Selection bits
  5575                           ;	OSC = HS, HS oscillator
  5576                           ;	Fail-Safe Clock Monitor Enable bit
  5577                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5578                           ;	Internal/External Oscillator Switchover bit
  5579                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5580  300001                     	org	3145729
  5581  300001  02                 	db	2
  5582                           
  5583                           ;Config register CONFIG2L @ 0x300002
  5584                           ;	Power-up Timer Enable bit
  5585                           ;	PWRT = OFF, PWRT disabled
  5586                           ;	Brown-out Reset Enable bits
  5587                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5588                           ;	Brown Out Reset Voltage bits
  5589                           ;	BORV = 0x2E, user specified literal
  5590  300002                     	org	3145730
  5591  300002  71                 	db	369
  5592                           
  5593                           ;Config register CONFIG2H @ 0x300003
  5594                           ;	Watchdog Timer Enable bit
  5595                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5596                           ;	Watchdog Timer Postscale Select bits
  5597                           ;	WDTPS = 1, 1:1
  5598  300003                     	org	3145731
  5599  300003  00                 	db	0
  5600                           
  5601                           ; Padding undefined space
  5602  300004                     	org	3145732
  5603  300004  FF                 	db	255
  5604                           
  5605                           ;Config register CONFIG3H @ 0x300005
  5606                           ;	CCP2 MUX bit
  5607                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5608                           ;	PORTB A/D Enable bit
  5609                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5610                           ;	Low-Power Timer1 Oscillator Enable bit
  5611                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5612                           ;	MCLR Pin Enable bit
  5613                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5614  300005                     	org	3145733
  5615  300005  83                 	db	131
  5616                           
  5617                           ;Config register CONFIG4L @ 0x300006
  5618                           ;	Stack Full/Underflow Reset Enable bit
  5619                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5620                           ;	Single-Supply ICSP Enable bit
  5621                           ;	LVP = OFF, Single-Supply ICSP disabled
  5622                           ;	Extended Instruction Set Enable bit
  5623                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5624                           ;	Background Debugger Enable bit
  5625                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5626  300006                     	org	3145734
  5627  300006  80                 	db	128
  5628                           
  5629                           ; Padding undefined space
  5630  300007                     	org	3145735
  5631  300007  FF                 	db	255
  5632                           
  5633                           ;Config register CONFIG5L @ 0x300008
  5634                           ;	Code Protection bit
  5635                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5636                           ;	Code Protection bit
  5637                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5638                           ;	Code Protection bit
  5639                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5640                           ;	Code Protection bit
  5641                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5642  300008                     	org	3145736
  5643  300008  0F                 	db	15
  5644                           
  5645                           ;Config register CONFIG5H @ 0x300009
  5646                           ;	Boot Block Code Protection bit
  5647                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5648                           ;	Data EEPROM Code Protection bit
  5649                           ;	CPD = OFF, Data EEPROM not code-protected
  5650  300009                     	org	3145737
  5651  300009  C0                 	db	192
  5652                           
  5653                           ;Config register CONFIG6L @ 0x30000A
  5654                           ;	Write Protection bit
  5655                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5656                           ;	Write Protection bit
  5657                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5658                           ;	Write Protection bit
  5659                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5660                           ;	Write Protection bit
  5661                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5662  30000A                     	org	3145738
  5663  30000A  0F                 	db	15
  5664                           
  5665                           ;Config register CONFIG6H @ 0x30000B
  5666                           ;	Configuration Register Write Protection bit
  5667                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5668                           ;	Boot Block Write Protection bit
  5669                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5670                           ;	Data EEPROM Write Protection bit
  5671                           ;	WRTD = OFF, Data EEPROM not write-protected
  5672  30000B                     	org	3145739
  5673  30000B  E0                 	db	224
  5674                           
  5675                           ;Config register CONFIG7L @ 0x30000C
  5676                           ;	Table Read Protection bit
  5677                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5678                           ;	Table Read Protection bit
  5679                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5680                           ;	Table Read Protection bit
  5681                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5682                           ;	Table Read Protection bit
  5683                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5684  30000C                     	org	3145740
  5685  30000C  0F                 	db	15
  5686                           
  5687                           ;Config register CONFIG7H @ 0x30000D
  5688                           ;	Boot Block Table Read Protection bit
  5689                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5690  30000D                     	org	3145741
  5691  30000D  40                 	db	64
  5692                           tosu	equ	0xFFF
  5693                           tosh	equ	0xFFE
  5694                           tosl	equ	0xFFD
  5695                           stkptr	equ	0xFFC
  5696                           pclatu	equ	0xFFB
  5697                           pclath	equ	0xFFA
  5698                           pcl	equ	0xFF9
  5699                           tblptru	equ	0xFF8
  5700                           tblptrh	equ	0xFF7
  5701                           tblptrl	equ	0xFF6
  5702                           tablat	equ	0xFF5
  5703                           prodh	equ	0xFF4
  5704                           prodl	equ	0xFF3
  5705                           indf0	equ	0xFEF
  5706                           postinc0	equ	0xFEE
  5707                           postdec0	equ	0xFED
  5708                           preinc0	equ	0xFEC
  5709                           plusw0	equ	0xFEB
  5710                           fsr0h	equ	0xFEA
  5711                           fsr0l	equ	0xFE9
  5712                           wreg	equ	0xFE8
  5713                           indf1	equ	0xFE7
  5714                           postinc1	equ	0xFE6
  5715                           postdec1	equ	0xFE5
  5716                           preinc1	equ	0xFE4
  5717                           plusw1	equ	0xFE3
  5718                           fsr1h	equ	0xFE2
  5719                           fsr1l	equ	0xFE1
  5720                           bsr	equ	0xFE0
  5721                           indf2	equ	0xFDF
  5722                           postinc2	equ	0xFDE
  5723                           postdec2	equ	0xFDD
  5724                           preinc2	equ	0xFDC
  5725                           plusw2	equ	0xFDB
  5726                           fsr2h	equ	0xFDA
  5727                           fsr2l	equ	0xFD9
  5728                           status	equ	0xFD8

Data Sizes:
    Strings     61
    Constant    16
    Data        283
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    110     127
    BANK0           128      0     117
    BANK1           256      0     190
    BANK2           256      0     170
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 170
		 -> nomes(BANK2[170]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 190
		 -> musicas(BANK1[190]), 

    lcdStr@str	PTR const unsigned char  size(2) Largest target is 190
		 -> STR_6(CODE[16]), STR_5(CODE[17]), musicas.nome(BANK1[17]), musicas(BANK1[190]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[7]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_escolheMusica
    _ssdInit->_pinMode
    _lcdInit->_lcdCommand
    _iniciaMusica->_strcpy
    _strcpy->___wmul
    _escolheMusica->_tocaMusica
    _ssdUpdate->_digitalWrite
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdStr->_lcdData
    _lcdData->_digitalWrite
    _lcdPosition->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _alterarVolume->_atraso_ms
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                87    87      0   54562
                                             23 COMRAM    87    87      0
                          _atraso_ms
                      _escolheMusica
                       _iniciaMusica
                         _kpDebounce
                             _kpInit
                         _lcdCommand
                            _lcdData
                            _lcdInit
                        _lcdPosition
                             _lcdStr
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _iniciaMusica                                         2     2      0    1149
                                             14 COMRAM     2     2      0
                             ___wmul
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _escolheMusica                                        2     2      0   33507
                                             21 COMRAM     2     2      0
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                           _ssdDigit
                          _ssdUpdate
                         _tocaMusica
 ---------------------------------------------------------------------------------
 (2) _tocaMusica                                           5     5      0   18886
                                             16 COMRAM     5     5      0
                            ___awdiv
                            ___awmod
                      _alterarVolume
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                        _lcdPosition
                             _lcdStr
                            _pwmInit
                             _pwmSet
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (3) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1     860
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _pwmSet                                               5     5      0    1172
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (4) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdStr                                               5     3      2    3361
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          3     2      1    4120
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _alterarVolume                                        3     3      0     639
                                              6 COMRAM     2     2      0
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     594
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _escolheMusica
     _atraso_ms
     _kpDebounce
     _kpRead
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdPosition
       _lcdCommand
     _lcdStr
       _lcdData
         _Delay40us
         _digitalWrite
     _ssdDigit
     _ssdUpdate
       _digitalWrite
     _tocaMusica
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _alterarVolume
         _atraso_ms
       _atraso_ms
       _kpDebounce
       _kpRead
       _lcdCommand
       _lcdPosition
       _lcdStr
       _pwmInit
         _pwmFrequency
           ___aldiv
       _pwmSet
         ___lwdiv
         ___wmul
       _ssdDigit
       _ssdUpdate
   _iniciaMusica
     ___wmul
     _strcpy
       ___wmul (ARG)
   _kpDebounce
   _kpInit
   _lcdCommand
   _lcdData
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _lcdPosition
   _lcdStr
   _ssdInit
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      AA       9       66.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BE       7       74.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      75       5       91.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     6E      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     25C      15        0.0%
DATA                 0      0     25C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 30 16:18:48 2021

                      _i 007C          ??_alterarVolume 0007                       l10 1CE0  
                     l52 1018                       l86 0DCA             ___awdiv@sign 0006  
                     _v0 0079                       _v1 0078                       _v2 0077  
                     _v3 0076      ___wmul@multiplicand 0003                      l103 1F28  
                    l121 1176                      l122 118E                      l123 1196  
                    l230 1C7C                      l126 1F1E                      l151 1A3E  
                    l144 1EE2                      l160 1CFE                      l400 0820  
                    l161 1D24                      l233 1EC6                      l154 1E3C  
                    l170 1B2E                      l139 1F14                      l164 1D3A  
                    l236 1EFC                      l404 08CC                      l405 0870  
                    l157 1AB6                      l263 1D92                      l416 092A  
                    l273 12E6                      l443 1564                      l276 1DE8  
                    l437 1554                      l525 1670                      l446 1EA0  
                    l382 13C0                      l368 1934                      l378 1392  
                    l395 07E6                      l388 1426                      l690 17E4  
                    l677 1734                      l944 1BA2                      l937 1B9A  
                    _PR2 000FCB                      _cnt 00F4             ___awmod@sign 000E  
                    prod 000FF3                      wreg 000FE8                     l1123 1E7A  
                   l2101 0F48                     l2111 0FDA                     l2103 0F62  
                   l2121 1ECC                     l2113 0FFA                     l2105 0F82  
                   l2201 19CC                     l2123 1ED0                     l2115 1EC8  
                   l2107 0FA4                     l2211 1A10                     l2203 19E0  
                   l2131 1578                     l2301 1128                     l2125 1ED2  
                   l2109 0FC0                     l2213 1A22                     l2205 19E4  
                   l2221 1DF0                     l2141 15AE                     l2133 1588  
                   l2311 1164                     l2303 112A                     l2071 1F02  
                   l2215 1A32                     l2207 19F8                     l2231 1E34  
                   l2223 1DF4                     l2151 15F6                     l2143 15BE  
                   l2135 158C                     l2127 1566                     l2313 116A  
                   l2305 113A                     l2073 1F04                     l2065 1EFE  
                   l2081 0E1A                     l2217 1A3A                     l2209 1A0C  
                   l2321 1CE4                     l2233 1E38                     l2225 1E08  
                   l2161 163A                     l2153 1600                     l2145 15D4  
                   l2137 159A                     l2129 156A                     l2401 1234  
                   l2171 1C7E                     l2315 116E                     l2307 113C  
                   l2091 0EB4                     l2083 0E3C                     l2075 0DCC  
                   l2331 1D1E                     l2323 1CE8                     l2227 1E0C  
                   l2219 1DEC                     l2155 161E                     l2147 15DC  
                   l2163 1640                     l2139 15AA                     l2235 1EA2  
                   l2251 1B5A                     l2243 1B30                     l2411 127E  
                   l2403 1248                     l2501 16C4                     l2181 1CA6  
                   l2173 1C8A                     l2317 1186                     l2309 114C  
                   l2093 0ED0                     l2085 0E58                     l2077 0DE8  
                   l2333 1D34                     l2325 1CF8                     l2229 1E20  
                   l2341 1AC0                     l2165 1650                     l2157 162E  
                   l2149 15E8                     l2261 1B8E                     l2253 1B68  
                   l2245 1B38                     l2237 1E7C                     l2413 1290  
                   l2405 1250                     l2421 12AC                     l2511 16FE  
                   l2503 16CC                     l2175 1C8E                     l2431 144C  
                   l2319 1192                     l2271 1022                     l2095 0EEA  
                   l2087 0E72                     l2079 0DFA                     l2327 1CF8  
                   l2343 1AF0                     l2167 1660                     l2159 1630  
                   l2263 1B94                     l2255 1B6E                     l2247 1B4A  
                   l2239 1E98                     l2351 1C4E                     l2415 12A4  
                   l2407 1262                     l2521 1724                     l2513 1706  
                   l2505 16D4                     l2185 1CBA                     l2193 1CC6  
                   l2441 146C                     l2433 1452                     l2265 1F20  
                   l2097 0F0A                     l2089 0E92                     l2337 1D34  
                   l2329 1D0E                     l2345 1AF2                     l2361 1EEA  
                   l2257 1B84                     l2249 1B52                     l2353 1C56  
                   l2409 1276                     l2601 0DA8                     l2523 172C  
                   l2515 1708                     l2507 16E2                     l2531 1748  
                   l2179 1CA2                     l2195 1CCA                     l2451 14A0  
                   l2443 1470                     l2435 1462                     l2427 142A  
                   l2267 101A                     l2099 0F2C                     l2339 1AB8  
                   l2363 1EEC                     l2259 1B8C                     l2355 1C6E  
                   l2347 1C14                     l2371 1D52                     l2611 0678  
                   l2603 1E3E                     l2517 170E                     l2509 16E8  
                   l2541 177C                     l2533 1750                     l2189 1CC0  
                   l2461 14E6                     l2453 14B2                     l2445 1480  
                   l2437 1464                     l2429 143A                     l2285 1070  
                   l2277 1026                     l2269 101E                     l2197 19C4  
                   l2365 1EF0                     l2357 1EE4                     l2349 1C32  
                   l2381 1D8E                     l2373 1D62                     l2701 08FA  
                   l2621 078C                     l2613 0682                     l2605 1E4E  
                   l2519 1714                     l2551 17B8                     l2543 1784  
                   l2535 1754                     l2527 1736                     l2471 1522  
                   l2463 14EE                     l2455 14BA                     l2447 1488  
                   l2439 1468                     l2295 1094                     l2287 1074  
                   l2279 1068                     l2199 19C8                     l2359 1EE6  
                   l2375 1D66                     l2367 1D3E                     l2391 11D8  
                   l2383 1198                     l2711 091C                     l2631 07A0  
                   l2703 0900                     l2615 068E                     l2607 0650  
                   l2553 17BE                     l2545 178C                     l2537 1762  
                   l2529 173A                     l2481 1560                     l2473 1534  
                   l2465 1500                     l2457 14CC                     l2449 1498  
                   l2297 10C0                     l2289 1090                     l2377 1D78  
                   l2369 1D4E                     l2393 11F4                     l2385 119C  
                   l2713 0928                     l2705 0910                     l2641 07C2  
                   l2633 07A4                     l2617 06A2                     l2609 0664  
                   l2801 13A0                     l2721 1A68                     l2491 1690  
                   l2483 1672                     l2547 179A                     l2555 17C4  
                   l2539 176A                     l2475 153C                     l2467 1508  
                   l2459 14D4                     l2299 10F2                     l2379 1D7C  
                   l2395 1206                     l2387 11B0                     l2707 0914  
                   l2651 07F8                     l2643 07C6                     l2635 07AC  
                   l2627 0790                     l2619 06AC                     l2811 13E6  
                   l2803 13B2                     l2571 0BEE                     l2563 0B7E  
                   l2731 1A7C                     l2723 1A6C                     l2493 169E  
                   l2485 1676                     l2557 17D4                     l2549 17B0  
                   l2477 154E                     l2469 151A                     l2397 121A  
                   l2389 11C4                     l2709 091A                     l2653 07FC  
                   l2645 07CE                     l2629 0794                     l2813 13F2  
                   l2821 1422                     l2805 13BA                     l2717 1F16  
                   l2581 0C82                     l2573 0C0A                     l2565 0B9A  
                   l2741 1A94                     l2733 1A80                     l2725 1A70  
                   l2901 0AB8                     l2495 16A6                     l2487 1684  
                   l2559 17DC                     l2479 1554                     l2399 1222  
                   l2671 0850                     l2663 0832                     l2655 0800  
                   l2647 07DC                     l2639 07BE                     l2815 13FC  
                   l2807 13CE                     l2591 0D0C                     l2583 0C94  
                   l2575 0C1C                     l2567 0BAC                     l2751 1AB0  
                   l2743 1A98                     l2735 1A86                     l2727 1A74  
                   l2719 1A40                     l2911 0AEA                     l2903 0ACE  
                   l2831 096E                     l2823 092C                     l2497 16AA  
                   l2489 168C                     l2681 0886                     l2673 0860  
                   l2665 0836                     l2657 0808                     l2817 1410  
                   l2809 13D6                     l2761 191A                     l2753 1890  
                   l2593 0D30                     l2585 0CB8                     l2577 0C40  
                   l2569 0BCC                     l2745 1A9E                     l2737 1A8A  
                   l2729 1A78                     l2921 0B0C                     l2913 0AF4  
                   l2905 0AD8                     l2841 0994                     l2833 0972  
                   l2825 0962                     l2499 16B2                     l2683 088A  
                   l2675 0868                     l2667 083A                     l2659 0816  
                   l2691 08CC                     l2819 141A                     l2771 12EC  
                   l2763 191E                     l2595 0D56                     l2587 0CDE  
                   l2579 0C66                     l2747 1AA4                     l2739 1A8E  
                   l2931 0B24                     l2915 0AFA                     l2907 0ADE  
                   l2851 09B4                     l2843 099E                     l2835 0976  
                   l2827 0966                     l2693 08CE                     l2685 0892  
                   l2669 0842                     l2781 1318                     l2773 12F4  
                   l2597 0D72                     l2589 0CFA                     l2749 1AAA  
                   l2765 1D94                     l2933 0B34                     l2917 0B00  
                   l2909 0AE4                     l2853 09B6                     l2837 097C  
                   l2829 096A                     l2695 08DE                     l2687 08A0  
                   l2679 0882                     l2791 135E                     l2783 131C  
                   l2775 12F8                     l2759 189C                     l2599 0D84  
                   l2767 1DE4                     l2935 0B50                     l2927 0B10  
                   l2919 0B06                     l2871 0A02                     l2863 09D4  
                   l2855 09C6                     l2839 098E                     l2961 12C0  
                   l2697 08EE                     l2793 1366                     l2785 1320  
                   l2777 1306                     l2769 12E8                     l2937 0B5C  
                   l2929 0B22                     l2881 0A1A                     l2865 09E6  
                   l2857 09D0                     l2849 09A2                     l2699 08F0  
                   l2795 1374                     l2787 132C                     l2779 1314  
                   l2939 0B72                     l2891 0A6C                     l2883 0A2A  
                   l2867 09E8                     l2797 1384                     l2789 134E  
                   l2893 0A7E                     l2885 0A68                     l2877 0A06  
                   l2869 09F8                     l2799 138C                     l2895 0A80  
                   l2879 0A18                     l2897 0A90                     l2899 0AAC  
                   STR_1 064A                     STR_2 0643                     STR_3 0622  
                   STR_4 0611                     STR_5 0611                     STR_6 0633  
                   u2000 1D62                     u2001 1D5E                     u2010 1D78  
                   u2011 1D74                     u2100 14E6                     u2020 1D8E  
                   u2101 14E2                     u2021 1D8A                     u2110 1500  
                   u2030 143A                     u2111 14FC                     u2031 1436  
                   u2200 1724                     u2120 151A                     u2040 144C  
                   u2201 1720                     u2121 1516                     u2041 1448  
                   u2210 1748                     u2130 1534                     u2050 1462  
                   u2211 1744                     u2131 1530                     u2051 145E  
                   u2220 1762                     u2140 154E                     u2060 1480  
                   u1500 0E58                     u2221 175E                     u2141 154A  
                   u2061 147C                     u1501 0E54                     u2150 1684  
                   u2230 177C                     u2070 1498                     u1510 0E72  
                   u2310 0C0A                     u2151 1680                     u2231 1778  
                   u2071 1494                     u1511 0E6E                     u2311 0C06  
                   u2160 169E                     u2240 179A                     u2080 14B2  
                   u2400 0D0C                     u2320 0C1C                     u2304 0BDE  
                   u2161 169A                     u2241 1796                     u2081 14AE  
                   u2401 0D08                     u2321 0C18                     u2305 0BDA  
                   u2170 16C4                     u2250 17B0                     u2090 14CC  
                   u1450 1F14                     u2171 16C0                     u2251 17AC  
                   u2091 14C8                     u1451 1F10                     u2180 16E2  
                   u2260 17D4                     u1620 0FC0                     u1604 0F74  
                   u1540 0ED0                     u1524 0E84                     u1460 0DE8  
                   u1700 15F6                     u2500 07F4                     u2181 16DE  
                   u2261 17D0                     u1621 0FBC                     u1605 0F70  
                   u1541 0ECC                     u1525 0E80                     u1461 0DE4  
                   u1701 15F2                     u2501 07F0                     u2190 16FE  
                   u1630 0FDA                     u1614 0F94                     u1550 0EEA  
                   u1534 0EA4                     u1470 0DFA                     u1710 161E  
                   u2510 0816                     u2430 0D72                     u2414 0D22  
                   u2350 0C82                     u2334 0C32                     u2270 0B9A  
                   u2191 16FA                     u1631 0FD6                     u1615 0F90  
                   u1551 0EE6                     u1535 0EA0                     u1471 0DF6  
                   u1711 161A                     u2511 0812                     u2431 0D6E  
                   u2415 0D1E                     u2351 0C7E                     u2335 0C2E  
                   u2271 0B96                     u1720 1650                     u1800 1B84  
                   u2520 082E                     u2600 1934                     u2440 0D84  
                   u2424 0D46                     u2360 0C94                     u2344 0C56  
                   u2280 0BAC                     u1721 164C                     u1801 1B80  
                   u2521 082A                     u2601 1930                     u2441 0D80  
                   u2425 0D42                     u2361 0C90                     u2345 0C52  
                   u2281 0BA8                     u1730 1C9E                     u2530 0850  
                   u2610 1306                     u1731 1C9A                     u2531 084C  
                   u2611 1302                     u1740 1CB6                     u1900 1164  
                   u1660 1EE2                     u1644 0FEC                     u1580 0F48  
                   u1564 0EFC                     u1484 0E0C                     u2540 0860  
                   u2620 1314                     u1741 1CB2                     u1901 1160  
                   u1661 1EDE                     u1645 0FE8                     u1581 0F44  
                   u1565 0EF8                     u1485 0E08                     u2541 085C  
                   u2621 1310                     u2701 0936                     u1750 1CE0  
                   u1910 1186                     u1830 1090                     u1814 103C  
                   u1654 100C                     u1590 0F62                     u1574 0F1C  
                   u1494 0E2C                     u1670 1578                     u2550 087E  
                   u2630 134E                     u2470 1E7A                     u2454 0D9A  
                   u2390 0CFA                     u2374 0CAA                     u2294 0BBE  
                   u1751 1CDC                     u1911 1182                     u1831 108C  
                   u1815 1038                     u1655 1008                     u1591 0F5E  
                   u1575 0F18                     u1495 0E28                     u1671 1574  
                   u2551 087A                     u2631 134A                     u2471 1E76  
                   u2455 0D96                     u2391 0CF6                     u2375 0CA6  
                   u2295 0BBA                     u2711 0948                     u1824 105C  
                   u1760 1A22                     u1920 1CF8                     u1680 159A  
                   u2560 08A0                     u2480 07BA                     u2640 135E  
                   u2464 0DBE                     u2384 0CCE                     u1825 1058  
                   u1761 1A1E                     u1921 1CF4                     u1681 1596  
                   u2561 089C                     u2481 07B6                     u2641 135A  
                   u2465 0DBA                     u2385 0CCA                     u2721 095A  
                   u1850 10C0                     u1770 1A32                     u1930 1D0E  
                   u1690 15D4                     u2570 08DE                     u2490 07DC  
                   u2650 1374                     u1851 10BC                     u1771 1A2E  
                   u1931 1D0A                     u1691 15D0                     u2571 08DA  
                   u2491 07D8                     u2651 1370                     u2731 0986  
                   u1844 10A6                     u1940 1D1E                     u1780 1B4A  
                   u2580 08EE                     u2660 1384                     u2740 09C6  
                   u1845 10A2                     u1941 1D1A                     u1781 1B46  
                   u2581 08EA                     u2661 1380                     u2741 09C2  
                   u1950 1D34                     u1790 1B68                     u2590 0910  
                   u2670 13A0                     u2750 09F8                     u1951 1D30  
                   u1791 1B64                     u2591 090C                     u2671 139C  
                   u2751 09F4                     u1880 113A                     u1864 10DE  
                   u1960 1AEC                     u2680 13B2                     u2760 0A2A  
                   u1881 1136                     u1865 10D8                     u2681 13AE  
                   u2761 0A26                     u1890 114C                     u1874 1110  
                   u1970 1B1E                     u2690 13CE                     u2770 0A90  
                   u1891 1148                     u1875 110A                     u2691 13CA  
                   u2771 0A8C                     u1980 1B2E                     u2780 0B34  
                   u1981 1B2A                     u2781 0B30                     u1990 1D4E  
                   u1967 1AE2                     u1991 1D4A                     u1977 1B14  
                   _flag 0074                     _main 092C                     fsr0h 000FEA  
                   fsr1h 000FE2                     indf0 000FEF                     fsr2h 000FDA  
                   fsr0l 000FE9                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
         pwmSet@porcento 000A          __end_of___aldiv 1672                    ?_main 0001  
        __end_of___awdiv 1736          __end_of___awmod 17E6                    _T0CON 000FD5  
        ___awdiv@divisor 0003                    _T2CON 000FCA          __end_of___lwdiv 1BA4  
     alterarVolume@old_D 0008          ___awdiv@counter 0005                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96            _escolheMusica 12E8  
        __end_of_lcdData 1E3E          __end_of_lcdInit 1AB8                    _pause 007E  
                  _tecla 007F                    _nomes 0200          __end_of_pinMode 0DCC  
                  _valor 00F2                    _tempo 0073                    main@i 006A  
          ?_iniciaMusica 0001                    tablat 000FF5          __end_of_ssdInit 1DEA  
        __end_of_pwmInit 1EFE                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8         __end_of_Delay2ms 1EE4     __end_of_digitalWrite 101A  
        __initialization 1936             __end_of_main 0B7E       __size_of_Delay40us 0018  
                 ??_main 0018            __activetblptr 000002           ?_escolheMusica 0001  
                 _CCPR1L 000FBE         ___awdiv@dividend 0001           ??_iniciaMusica 000F  
                 _INTCON 000FF2     __size_of_lcdPosition 005A        lcdPosition@coluna 0009  
              ??___aldiv 0009                   ___wmul 1E7C                ??___awdiv 0005  
              ??___awmod 000D                ??___lwdiv 0005                   _lcdStr 1AB8  
                 _kpInit 1F16                   _kpRead 1F20                   _indice 0075  
                 clear_0 199A                   clear_1 19A6                   clear_2 19B2  
       ___awdiv@quotient 0007                   _teclas 00E6          ___awmod@divisor 000B  
              ??_lcdData 0007                   isa$std 000001                ??_lcdInit 0009  
                 _pwmSet 1C12          ___awmod@counter 000D                   _strcpy 1E3E  
                 _volume 007D         __end_of_ssdDigit 1D94             __pdataCOMRAM 007D  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_ssdInit 0007  
              ??_pwmInit 0011        __end_of_Delay40us 1F16               __accesstop 0080  
__end_of__initialization 19B8            ___rparam_used 000001              pinMode@type 0003  
         __pcstackCOMRAM 0001             __pidataBANK0 1BA4             __pidataBANK2 17E6  
       alterarVolume@opt 0007          ??_escolheMusica 0016                ?_Delay2ms 0001  
     __size_of_atraso_ms 0064               __pbssBANK0 00EE               __pbssBANK1 0100  
  __size_of_digitalWrite 024E               _lcdCommand 19C2                  ?___wmul 0001  
                ?_lcdStr 0009                  ?_kpInit 0001                  ?_kpRead 0001  
                _CCP1CON 000FBD     __end_of_iniciaMusica 1936               _kpDebounce 101A  
  __end_of_alterarVolume 1566                  ?_pwmSet 0001                  ?_strcpy 0007  
     __size_of_ssdUpdate 0150               ??_Delay2ms 0002             _digitalWrite 0DCC  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 0001  
        kpDebounce@old_D 0006       lcdPosition@comando 000B          kpDebounce@tempo 007B  
                ___aldiv 1566                  ___awdiv 1672                  ___awmod 1736  
        __size_of___wmul 0026                  ___lwdiv 1B30        __end_of_atraso_ms 1CE2  
           __psmallconst 0600          __size_of_lcdStr 0078          __size_of_kpInit 000A  
        __size_of_kpRead 000A              ssdDigit@val 0002              ssdDigit@pos 0001  
                __pcinit 1936                  _lcdData 1DEA                  __ramtop 0600  
                _lcdInit 1A40                  __ptext0 092C                  __ptext1 1D94  
                __ptext2 1A40                  __ptext3 0B7E                  __ptext4 1F16  
                __ptext5 1890                  __ptext6 1E3E                  __ptext7 12E8  
                __ptext8 0650                  __ptext9 1198          __size_of_pwmSet 006C  
                _display 007A          __size_of_strcpy 003E                  _pinMode 0B7E  
       ___awmod@dividend 0009         ___aldiv@dividend 0001                  _minuto1 0072  
                _minuto2 0071                  _ssdInit 1D94                  _pwmInit 1EE4  
                _musicas 0100                  lcdStr@i 000D                Delay2ms@i 0002  
    kpDebounce@valorNovo 00F0     end_of_initialization 19B8            __Lmediumconst 0000  
            tocaMusica@j 0015            ?_pwmFrequency 000F        __end_of_ssdUpdate 12E8  
             ??_ssdDigit 0002         ___aldiv@quotient 000B                  postdec1 000FE5  
                postdec2 000FDD              ?_lcdCommand 0001               _tocaMusica 0650  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
                strcpy@d 000D                  strcpy@s 000B              ?_kpDebounce 0001  
         _valor@ssd$F238 0601            ??_lcdPosition 000A           ??_pwmFrequency 0011  
              _Delay40us 1EFE    __size_of_iniciaMusica 00A6           _tocaMusica$990 0013  
         _tocaMusica$989 0011               atraso_ms@i 0003               atraso_ms@j 0005  
             atraso_ms@k 0006               atraso_ms@t 0001           __end_of___wmul 1EA2  
          __pidataCOMRAM 1F2A           __end_of_lcdStr 1B30           __end_of_kpInit 1F20  
         __end_of_kpRead 1F2A   __end_of_valor@ssd$F238 0611           __end_of_pwmSet 1C7E  
         __end_of_strcpy 1E7C      start_initialization 1936        __size_of_Delay2ms 001C  
    __size_of_lcdCommand 007E             _iniciaMusica 1890      __size_of_kpDebounce 017E  
             ?_Delay40us 0001      __end_of_lcdPosition 1D3C            iniciaMusica@i 000F  
       lcdPosition@linha 000A              ?_tocaMusica 0001                 ??___wmul 0005  
               ??_lcdStr 000B                 ??_kpInit 0001                 ??_kpRead 0003  
            __pdataBANK0 0080              __pdataBANK2 0200                 ??_pwmSet 0008  
               ??_strcpy 000B    __end_of_escolheMusica 1428              __pbssCOMRAM 006F  
             pinMode@pin 0001         ___lwdiv@dividend 0001                 ?___aldiv 0001  
               ?___awdiv 0001                 ?___awmod 0009        __size_of_ssdDigit 0058  
               ?___lwdiv 0001                 ?_lcdData 0001                 ?_lcdInit 0001  
   __end_of_pwmFrequency 1EC8            lcdCommand@cmd 0008                _atraso_ms 1C7E  
            __smallconst 0600                 ?_pinMode 0001                 ?_ssdInit 0001  
               ?_pwmInit 0001         ___lwdiv@quotient 0005      __size_of_tocaMusica 02DC  
            _lcdPosition 1CE2         pwmFrequency@freq 000F          ___aldiv@divisor 0005  
        ___aldiv@counter 0009              ??_Delay40us 0001           ___wmul@product 0005  
 __size_of_alterarVolume 013E             ??_lcdCommand 0007                main@F2440 0080  
              main@F2434 00DE                main@F2436 00D4                main@F2438 00C4  
              _ssdUpdate 1198                lcdStr@str 0009             ??_kpDebounce 0001  
              main@i_171 006B                main@i_172 006C                main@i_173 006D  
              main@i_178 006E        ___wmul@multiplier 0001               ?_atraso_ms 0001  
        lcdCommand@old_D 0007    kpDebounce@valorAntigo 00EE                 _Delay2ms 1EC8  
              main@text6 0062                main@text7 0058                main@text8 0048  
              copy_data0 194A                copy_data1 196A       __end_of_lcdCommand 1A40  
           lcdData@old_D 0008             lcdData@valor 0007       __end_of_kpDebounce 1198  
               __Hrparam 0000                 __Lrparam 0000               ?_ssdUpdate 0001  
       __size_of___aldiv 010C         __size_of___awdiv 00C4         __size_of___awmod 00B0  
       __size_of___lwdiv 0074            _alterarVolume 1428         __size_of_lcdData 0054  
       __size_of_lcdInit 0078         __size_of_pinMode 024E          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 1D3C                 __ptext11 1C12  
               __ptext20 19C2                 __ptext12 1E7C                 __ptext21 0DCC  
               __ptext13 1B30                 __ptext22 1EC8                 __ptext14 1EE4  
               __ptext23 1EFE                 __ptext15 1EA2                 __ptext24 1F20  
               __ptext16 1566                 __ptext25 101A                 __ptext17 1AB8  
               __ptext26 1428                 __ptext18 1DEA                 __ptext27 1C7E  
               __ptext19 1CE2                 __ptext28 1736                 __ptext29 1672  
       __size_of_ssdInit 0056         __size_of_pwmInit 001A               strcpy@dest 0007  
               _duracoes 00B0            __size_of_main 0252                 _segundo1 0070  
               _segundo2 006F               Delay40us@i 0001                 _ssdDigit 1D3C  
               isa$xinst 000000             ??_tocaMusica 0011    __size_of_pwmFrequency 0026  
              pwmSet@val 000B                 main@logo 0018           ?_alterarVolume 0001  
            ??_atraso_ms 0003            ?_digitalWrite 0001       __end_of_tocaMusica 092C  
      digitalWrite@value 0003             _pwmFrequency 1EA2                strcpy@src 0009  
            ??_ssdUpdate 0007              kpDebounce@i 000A              kpDebounce@j 0009  
            kpDebounce@k 0007           ??_digitalWrite 0005             ___aldiv@sign 000A  
           ?_lcdPosition 0009          digitalWrite@pin 0001   __size_of_escolheMusica 0140  
